<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Aldevar - Le Blog - Sysadmin</title><link href="https://blog.devarieux.net/" rel="alternate"></link><link href="https://blog.devarieux.net/feed/sysadmin.atom.xml" rel="self"></link><id>https://blog.devarieux.net/</id><updated>2021-04-12T18:32:00+02:00</updated><subtitle>Yet Another Blog</subtitle><entry><title>VPN Meraki et Fedora</title><link href="https://blog.devarieux.net/2021/04/vpn-meraki-fedora.html" rel="alternate"></link><published>2021-04-12T18:32:00+02:00</published><updated>2021-04-12T18:32:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2021-04-12:/2021/04/vpn-meraki-fedora.html</id><summary type="html">&lt;p&gt;Cela fait plusieurs années que je n'ai pas pu utiliser Linux de façon professionnelle à cause d'applications purement Windows et aussi un peu par facilité. Depuis peu, je n'ai plus à utiliser toutes ces applications je repars donc à la conquête de mon desktop avec une Fedora 33 fraichement installée …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cela fait plusieurs années que je n'ai pas pu utiliser Linux de façon professionnelle à cause d'applications purement Windows et aussi un peu par facilité. Depuis peu, je n'ai plus à utiliser toutes ces applications je repars donc à la conquête de mon desktop avec une Fedora 33 fraichement installée.&lt;/p&gt;
&lt;p&gt;De même que sous Windows, je dois utiliser des VPN Meraki dans le cadre de mon activité professionnelle. Il parait que sous Ubuntu, les VPN Clients Meraki fonctionnent directement, ce qui n'est pas le cas sous Fedora. Nous allons voir pourquoi et comment y remédier.&lt;/p&gt;
&lt;p&gt;Les VPN Clients Meraki utilisent le protocole L2TP/IPSec qui n'est pas installé par defaut sur la distribution. La premièr étape est d'installer le plugin L2TP pour NetworkManager&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# dnf install network-manager-l2tp-gnome
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;L'installation de ce paquet devrait aussi installer la dépendance network-manager-l2tp.&lt;/p&gt;
&lt;p&gt;Avant de procéder à la configuration du VPN, il faut désinstaller le paquet libreswan et installer à la place le paquet strongswan. Libreswan ne supporte pas modp1024 (Diffie Hellman Group 2) pour IPSec car ce groupe DH est déprécié pour des raisons de sécurité. Cependant, les VPN Clients Meraki ne supportent que ce groupe DH pour l'établissement de la phase 1 et de la phase 2 d'IPSec. C'est clairement décevant de la part d'une appliance de sécurité mais pour le moment nous n'avons que ça... Strongswan quant à lui supporte toujours le groupe DH2.&lt;/p&gt;
&lt;p&gt;Dans Ubuntu, c'est strongswan qui est installé par défaut, alors que Fedora utilise libreswan. C'est ce qui explique que les VPN Client Meraki fonctionnent directement sous Ubuntu, sans manipulations supplémentaires.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# dnf remove libreswan
# dnf install strongswan
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Une fois cette installation effectuée, la configuration d'un VPN L2TP devient possible dans l'interface de gestion du réseau. Pour cela, il suffit de ce rendre dans les paramètres réseau et ajouter le VPN. Avant de valider, quelques modifications sont à faire pour ne pas conserver les paramètres par défaut.&lt;/p&gt;
&lt;img alt="Configuration réseau" class="m-image" src="/images/F33-MerakiVPN01.png" /&gt;
&lt;p&gt;En cliquant sur le + pour ajouter un VPN, on arrive sur cette nouvelle fenêtre. Celle ci permet de choisir le type de VPN à monter.&lt;/p&gt;
&lt;img alt="Choix du type de VPN" class="m-image" src="/images/F33-MerakiVPN02.png" /&gt;
&lt;p&gt;On choisi le VPN L2TP puis on arrive sur la configuration du VPN&lt;/p&gt;
&lt;img alt="Configuration du VPN L2TP" class="m-image" src="/images/F33-MerakiVPN03.png" /&gt;
&lt;p&gt;Ici, on entre le nom du VPN, l'IP publique du MX Meraki ainsi que le nom d'utilisateur et le mot de passe. Une fois que c'est fait, on clique sur &lt;code class="code"&gt;IPsec Settings&lt;/code&gt;.&lt;/p&gt;
&lt;img alt="Configuration IPsec" class="m-image" src="/images/F33-MerakiVPN04.png" /&gt;
&lt;p&gt;On entre sa PSK puis on déplie les paramètres avancés. Là, il faut fixer les algorithmes de chiffrement des phases 1 et 2 IPsec. Pour chacune de ses phases, il faut entrer :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;aes128-sha1-modp1024,3des-sha1-modp1024!
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;C'est ce pramètre qui n'est pas accepté par libreswan. Si vous utilisez libreswan avec ces paramètres IPsec, voici le messages d'erreurs qui va apparaitre dans les logs :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ike string error: IKE DH algorithm &amp;#39;modp1024&amp;#39; is not supported
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On ne touche à rien d'autre, on valide cette fenêtre puis on clique sur &lt;code class="code"&gt;PPP Settings&lt;/code&gt;. Sur cette fenêtre, dans les paramètres d'authentification, on décoche tout sauf PAP et on laisse tout le reste par défaut.&lt;/p&gt;
&lt;img alt="Configuration PPP" class="m-image" src="/images/F33-MerakiVPN05.png" /&gt;
&lt;p&gt;Une fois ces paramètres validés, on peut tenter de se connecter au VPN. Cela doit fonctionner de suite. Si ça ne marche pas, il y a 2 moyens pour débuguer :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="code"&gt;journalctl -f&lt;/code&gt; dans un terminal pendant la tentative de connexion pour voir ce qu'il se passe.&lt;/li&gt;
&lt;li&gt;Sur le dashboard Meraki, se rendre dans Network Wide &amp;gt; Event Log pour visualiser ce que voit le MX.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Caddy, OVH et les certificats wildcard</title><link href="https://blog.devarieux.net/2021/04/caddy-ovh-acme.html" rel="alternate"></link><published>2021-04-05T08:55:00+02:00</published><updated>2021-04-05T08:55:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2021-04-05:/2021/04/caddy-ovh-acme.html</id><summary type="html">&lt;p&gt;Après avoir présenté dans un &lt;a href="/2021/02/caddy-presentation.html"&gt;premier article&lt;/a&gt; ce qu'est Caddy et son utilisation de façon basique, puis dans &lt;a href="/2021/02/caddy-api.html"&gt;un second&lt;/a&gt; le pilotage de Caddy par API ainsi qu'une configuration un peu plus avancée, je souhaites ici aborder le sujet de la génération de certificats TLS via Let's Encrypt avec le …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Après avoir présenté dans un &lt;a href="/2021/02/caddy-presentation.html"&gt;premier article&lt;/a&gt; ce qu'est Caddy et son utilisation de façon basique, puis dans &lt;a href="/2021/02/caddy-api.html"&gt;un second&lt;/a&gt; le pilotage de Caddy par API ainsi qu'une configuration un peu plus avancée, je souhaites ici aborder le sujet de la génération de certificats TLS via Let's Encrypt avec le challenge &lt;a href="https://letsencrypt.org/fr/docs/challenge-types/#d%C3%A9fi-dns-01"&gt;DNS-01&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Le challenge DNS à l'avantage de pouvoir être utilisé pour générer un certificat DV wildcard. Une fois passé un certain nombre de sous domaines servis par un reverse proxy, il devient intéressant d'utiliser ce type de certificat afin d'éviter de générer trop de requêtes vers les serveurs de Let's Encrypt. De plus, avec un seul certificat à gérer pour l'ensemble des sous domaines, la gestion devient simplifiée, et notamment la supervision ou même le renouvellement.&lt;/p&gt;
&lt;p&gt;Caddy intègre de base la gestion de Let's Encrypt pour les challenges HTTP-01 car celui-ci est universel et ne dépend d'aucun autre services. C'est un échange réalisé directement entre le serveur Caddy et les serveurs de Let's Encrypt. Pour le challenge DNS-01, il y a un intermédiaire. Cet intermédiaire est le serveur DNS du domaine pour lequel on souhaite générer un certificat wildcard. De part la multitude de serveurs disponibles et de prestataires fournissant ces services, il est difficile d'avoir un protocole unifié de modification distante des entrées DNS. A ma connaissance, le seul standard qui existe pour cela est la &lt;a href="https://tools.ietf.org/html/rfc2136"&gt;RFC 2136&lt;/a&gt; qui ne semble pas être implémentée chez la plupart des fournisseurs de services DNS.&lt;/p&gt;
&lt;p&gt;Nous allons donc voir comment, avec Caddy, générer un certificat wildcard avec OVH en fournisseur de service DNS. La procédure est assez similaire avec les autres fournisseurs qui ont, je l'espère, pris plus de soin dans la documentation de cette fonctionnalité.&lt;/p&gt;
&lt;p&gt;Caddy n'intègre pas, de base, l'ensemble des plugins permettant de résoudre les challenges DNS de tous les fournisseurs. Pour intégrer le bon plugin, il est nécessaire de compiler Caddy. L'opération est particulièrement simple à réaliser et à l'avantage de produire en sortie un binaire unique qu'il est ensuite facile de déployer sur ses serveurs. La compilation de Caddy est assez bien expliquée dans &lt;a href="https://caddyserver.com/docs/build#xcaddy"&gt;la documentation&lt;/a&gt; et voici la liste des &lt;a href="https://caddyserver.com/docs/modules/"&gt;plugins disponible&lt;/a&gt;. A ce jour, aucun plugin spécifique n'a été écrit pour OVH, il faut donc se rabattre sur le module &lt;a href="https://github.com/caddy-dns/lego-deprecated"&gt;Lego Deprecated&lt;/a&gt;. Ce module utilise une ancienne API mais est actuellement le seul qui permet de gérer un grand nombre de fournisseurs de DNS, dont OVH.&lt;/p&gt;
&lt;section id="compilation-de-caddy"&gt;
&lt;h2&gt;Compilation de Caddy&lt;/h2&gt;
&lt;p&gt;Pour compiler Caddy, nous avons besoin de 2 choses. Golang et le binaire xcaddy qui permet de facilement compiler caddy avec les modules spécifiés. On commence donc par installer Golang et déclarer son binaire dans le PATH.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# wget https://golang.org/dl/go&amp;lt;version&amp;gt;.linux-amd64.tar.gz
# tar -C /usr/local -xzf go&amp;lt;version&amp;gt;.linux-amd64.tar.gz
# rm -f go&amp;lt;version&amp;gt;.linux-amd64.tar.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On édite le fichier &lt;code&gt;/etc/profile&lt;/code&gt; pour ajouter le binaire go dans le PATH. A la fin du fichier on ajoute :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;export PATH=$PATH:/usr/local/go/bin
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Puis, on source le fichier pour mettre à jour le PATH et on s'assure que go est bien installé en affichant la version (ici 1.16).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# source /etc/profile
# go version
go version go1.16 linux/amd64
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Puis on récupère le binaire xcaddy et on le rend exécutable. Lors de la rédaction cet article, la dernière version disponible est la 0.1.8.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# wget https://github.com/caddyserver/xcaddy/releases/download/v0.1.8/xcaddy_0.1.8_linux_amd64.tar.gz
# tar xvzf xcaddy_0.1.8_linux_amd64.tar.gz
# ls
LICENSE  README.md  xcaddy  xcaddy_0.1.8_linux_amd64.tar.gz
# chmod o+x xcaddy
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enfin, avec l'aide de xcaddy, on compile caddy avec le plugin lego-deprecated. On se retrouve avec le binaire caddy dans le répertoire.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./xcaddy build --with github.com/caddy-dns/lego-deprecated
# ls
LICENSE  README.md  caddy  xcaddy  xcaddy_0.1.8_linux_amd64.tar.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="configuration-d-ovh"&gt;
&lt;h2&gt;Configuration d'OVH&lt;/h2&gt;
&lt;p&gt;Il faut autoriser Caddy à créer et supprimer des entrées DNS sur les serveurs d’OVH. Pour cela, il faut créer une application chez OVH, via ce lien : &lt;a class="m-link-wrap" href="https://eu.api.ovh.com/createApp/"&gt;https://eu.api.ovh.com/createApp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On rentre son account ID et mot de passe. On choisit un nom d’application ici &lt;code&gt;xcaddy-dns-challenge&lt;/code&gt; ainsi qu’une description. OVH affiche alors l’Application Key et l’Application Secret. On les conserve bien au chaud pour la suite.&lt;/p&gt;
&lt;p&gt;Ensuite, il faut donner des droits à cette application. On réalise cela par un call API directement sur la console OVH.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XPOST -H &amp;quot;X-Ovh-Application: &amp;lt;Application Key&amp;gt;&amp;quot; -H &amp;quot;Content-type: application/json&amp;quot; https://eu.api.ovh.com/1.0/auth/credential -d &amp;#39;{&amp;quot;accessRules&amp;quot;:[{&amp;quot;method&amp;quot;:&amp;quot;POST&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/domain/zone/&amp;lt;Nom De Domaine&amp;gt;/record&amp;quot;},{&amp;quot;method&amp;quot;:&amp;quot;POST&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/domain/zone/&amp;lt;Nom De Domaine&amp;gt;/refresh&amp;quot;},{&amp;quot;method&amp;quot;:&amp;quot;DELETE&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/domain/zone/&amp;lt;Nom De Domaine&amp;gt;/record/*&amp;quot;}],&amp;quot;redirection&amp;quot;: &amp;quot;https://www.foo.com&amp;quot;}&amp;#39;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La partie redirection a la fin ne nous intéresse pas mais est obligatoire. Elle indique vers quelle page l’application doit être redirigée une fois connectée.&lt;/p&gt;
&lt;p&gt;En retour, on obtient un JSON avec la consumer Key. C’est cette info qu’il faut conserver.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;validationUrl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://eu.api.ovh.com/auth/?credentialToken=xxxxxxxxxxxxxxx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;consumerKey&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;The Consumer Key&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;state&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pendingValidation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On voit que l'état est “Pending Validation”. Afin de valider, il faut se rendre sur le lien validationUrl.&lt;/p&gt;
&lt;p&gt;Sur ce lien, on entre de nouveau ses codes d'accès OVH puis on choisi la durée de validité de l’accès.
On a maintenant toutes les infos dont nous avons besoin :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Application Key&lt;/li&gt;
&lt;li&gt;Application Secret&lt;/li&gt;
&lt;li&gt;Consumer Key&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="configuration-de-caddy"&gt;
&lt;h2&gt;Configuration de Caddy&lt;/h2&gt;
&lt;p&gt;Voyons maintenant comment générer un certificat wildcard pour un domaine puis servir plusieurs sous-domaines en dessous. J'ai mis un peu de temps à trouver la bonne façon de faire, la voici servie pour vous sur un plateau :)
Voici un extrait de mon fichier de configuration, je vais décrire en dessous les différentes sections.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;*.domain.com {
    tls {
            dns lego_deprecated ovh
    }

    @backend host backend.domain.com
    reverse_proxy @backend 10.0.0.2:3001

    @prodapi {
            host prod.domain.com
            path /api/v1/*
    }

    @prod {
            host prod.domain.com
            not path /api/v1/
    }

    reverse_proxy @prodapi 10.0.0.1:3001
    reverse_proxy @prod 10.0.0.1:3000


    }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On déclare d'abord &lt;code&gt;*.domain.com&lt;/code&gt; qui est le domaine pour lequel on souhaite que Caddy génère un certificat wildcard. Pour cela, une première section tls avec l'entrée &lt;code&gt;dns lego_deprecated ovh&lt;/code&gt; signifie :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dns: Résolution du challenge DNS-01&lt;/li&gt;
&lt;li&gt;lego_deprecated: Utilisation du module lego_deprecated&lt;/li&gt;
&lt;li&gt;ovh: Parmi les providers proposés par lego_deprecated, utiliser OVH.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;L'entrée &lt;code&gt;&amp;#64;backend host backend.domain.com&lt;/code&gt; est un &lt;code&gt;matcher&lt;/code&gt;. C'est à dire qu'on place sous le nom &lt;code&gt;backend&lt;/code&gt; l'ensemble des requêtes dont le SNI est &lt;code&gt;backend.domain.com&lt;/code&gt;. Puis, juste en dessous, l'ensemble des requêtes qui matchent &lt;code&gt;&amp;#64;backend&lt;/code&gt; sont reverse proxyfiées (oui, je sais...) vers 10.0.0.2:3001.&lt;/p&gt;
&lt;p&gt;Les 2 entrées suivantes sont un peu similaires au matcher &lt;code&gt;&amp;#64;backend&lt;/code&gt; mais comme je devais spécifié plusieurs filtres (1 sur le SNI et 1 sur le path), les filtres sont placés dans un bloc d'accolades. Ensuite, les matchers &lt;code&gt;&amp;#64;prodapi&lt;/code&gt; et &lt;code&gt;&amp;#64;prod&lt;/code&gt; sont également reverse proxyfiés (oui, bon, ça va...) vers leurs serveurs respectifs.&lt;/p&gt;
&lt;p&gt;On est prêt à lancer Caddy. Il faut cependant trouver un moyen de lui spécifier les clés et secret OVH pour que le module lego_deprecated puisse se connecter et générer les entrées DNS. Pour cela, plusieurs solutions. La plus simple est d'executer Caddy depuis le terminal avec les variables d'environnement, de cette façon :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OVH_APPLICATION_KEY=&amp;lt;Application Key&amp;gt; OVH_APPLICATION_SECRET=&amp;lt;Application Secret&amp;gt; OVH_CONSUMER_KEY=&amp;lt;Consumer Key&amp;gt; OVH_ENDPOINT=ovh-eu ./caddy run --config Caddyfile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;C'est bien, ça fonctionne mais c'est pas vraiment production ready. L'autre solution est de placer ces variables d'environnement directement dans le fichier systemd de Caddy. Dans la section &lt;code&gt;[Service]&lt;/code&gt; on peut ajouter des variables d'environnement de cette façon :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Service]
User=caddy
Group=caddy
ExecStart=/usr/bin/caddy run --environ --config /etc/caddy/Caddyfile
ExecReload=/usr/bin/caddy reload --config /etc/caddy/Caddyfile
TimeoutStopSec=5s
LimitNOFILE=1048576
LimitNPROC=512
PrivateTmp=true
ProtectSystem=full
AmbientCapabilities=CAP_NET_BIND_SERVICE
Environment=&amp;#39;OVH_APPLICATION_KEY=&amp;lt;Application Key&amp;gt;&amp;#39;
Environment=&amp;#39;OVH_APPLICATION_SECRET=&amp;lt;Application Secret&amp;gt;&amp;#39;
Environment=&amp;#39;OVH_CONSUMER_KEY=&amp;lt;Consumer Key&amp;gt;&amp;#39;
Environment=&amp;#39;OVH_ENDPOINT=ovh-eu&amp;#39;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Normalement, dans les logs, on devrait voir quelque chose comme ça. En tout cas, c'est ce qu'on vise :)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemd[1]: Started Caddy.
caddy[575954]: caddy.HomeDir=/var/lib/caddy
caddy[575954]: caddy.AppDataDir=/var/lib/caddy/.local/share/caddy
caddy[575954]: caddy.AppConfigDir=/var/lib/caddy/.config/caddy
caddy[575954]: caddy.ConfigAutosavePath=/var/lib/caddy/.config/caddy/autosave.json
caddy[575954]: caddy.Version=v2.3.0
caddy[575954]: runtime.GOOS=linux
caddy[575954]: runtime.GOARCH=amd64
caddy[575954]: runtime.Compiler=gc
caddy[575954]: runtime.NumCPU=1
caddy[575954]: runtime.GOMAXPROCS=1
caddy[575954]: runtime.Version=go1.16
caddy[575954]: os.Getwd=/
caddy[575954]: LANG=C.UTF-8
caddy[575954]: PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
caddy[575954]: HOME=/var/lib/caddy
caddy[575954]: LOGNAME=caddy
caddy[575954]: USER=caddy
caddy[575954]: OVH_APPLICATION_KEY=&amp;lt;Application Key&amp;gt;
caddy[575954]: OVH_APPLICATION_SECRET=&amp;lt;Application Secret&amp;gt;
caddy[575954]: OVH_CONSUMER_KEY=&amp;lt;Consumer Key&amp;gt;
caddy[575954]: OVH_ENDPOINT=ovh-eu
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.2837744,&amp;quot;msg&amp;quot;:&amp;quot;using provided configuration&amp;quot;,&amp;quot;config_file&amp;quot;:&amp;quot;/etc/caddy/Caddyfile&amp;quot;,&amp;quot;config_adapter&amp;quot;:&amp;quot;&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.294112,&amp;quot;logger&amp;quot;:&amp;quot;admin&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;admin endpoint started&amp;quot;,&amp;quot;address&amp;quot;:&amp;quot;tcp/localhost:2019&amp;quot;,enforce_origin&amp;quot;:false,&amp;quot;origins&amp;quot;:[&amp;quot;localhost:2019&amp;quot;,&amp;quot;[::1]:2019&amp;quot;,&amp;quot;127.0.0.1:2019&amp;quot;]}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.2947812,&amp;quot;logger&amp;quot;:&amp;quot;http&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;server is listening only on the HTTPS port but has no TLS connection policies; adding one to enable TLS&amp;quot;,&amp;quot;server_name&amp;quot;:&amp;quot;srv0&amp;quot;,&amp;quot;https_port&amp;quot;:443}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.2949548,&amp;quot;logger&amp;quot;:&amp;quot;http&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;enabling automatic HTTP-&amp;gt;HTTPS redirects&amp;quot;,&amp;quot;server_name&amp;quot;:&amp;quot;srv0&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.2992623,&amp;quot;logger&amp;quot;:&amp;quot;http&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;enabling automatic TLS certificate management&amp;quot;,&amp;quot;domains&amp;quot;:[&amp;quot;*.domain.com&amp;quot;]}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.3005319,&amp;quot;msg&amp;quot;:&amp;quot;autosaved config&amp;quot;,&amp;quot;file&amp;quot;:&amp;quot;/var/lib/caddy/.config/caddy/autosave.json&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.3007138,&amp;quot;msg&amp;quot;:&amp;quot;serving initial configuration&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.3020074,&amp;quot;logger&amp;quot;:&amp;quot;tls.obtain&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;acquiring lock&amp;quot;,&amp;quot;identifier&amp;quot;:&amp;quot;*.domain.com&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.3032272,&amp;quot;logger&amp;quot;:&amp;quot;tls.obtain&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;lock acquired&amp;quot;,&amp;quot;identifier&amp;quot;:&amp;quot;*.domain.com&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.3185842,&amp;quot;logger&amp;quot;:&amp;quot;tls.cache.maintenance&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;started background certificate maintenance&amp;quot;,&amp;quot;cache&amp;quot;:&amp;quot;0xc0009a20e0&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.3187766,&amp;quot;logger&amp;quot;:&amp;quot;tls&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;cleaned up storage units&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295348.2573807,&amp;quot;logger&amp;quot;:&amp;quot;tls.issuance.acme&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;waiting on internal rate limiter&amp;quot;,&amp;quot;identifiers&amp;quot;:[&amp;quot;*.domain.com&amp;quot;]}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295348.2576807,&amp;quot;logger&amp;quot;:&amp;quot;tls.issuance.acme&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;done waiting on internal rate limiter&amp;quot;,&amp;quot;identifiers&amp;quot;:[&amp;quot;*.domain.com&amp;quot;]}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295348.582178,&amp;quot;logger&amp;quot;:&amp;quot;tls.issuance.acme.acme_client&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;trying to solve challenge&amp;quot;,&amp;quot;identifier&amp;quot;:&amp;quot;*.domain.com&amp;quot;,&amp;quot;challenge_type&amp;quot;:&amp;quot;dns-01&amp;quot;,&amp;quot;ca&amp;quot;:&amp;quot;https://acme-v02.api.letsencrypt.org/directory&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295360.2630491,&amp;quot;logger&amp;quot;:&amp;quot;tls.issuance.acme.acme_client&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;validations succeeded; finalizing order&amp;quot;,&amp;quot;order&amp;quot;:&amp;quot;https://acme-v02.api.letsencrypt.org/acme/order/11111/2222222&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295361.126138,&amp;quot;logger&amp;quot;:&amp;quot;tls.issuance.acme.acme_client&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;successfully downloaded available certificate chains&amp;quot;,&amp;quot;count&amp;quot;:2,&amp;quot;first_url&amp;quot;:&amp;quot;https://acme-v02.api.letsencrypt.org/acme/cert/aaaaaaaabbbbbbb&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295361.1281288,&amp;quot;logger&amp;quot;:&amp;quot;tls.obtain&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;certificate obtained successfully&amp;quot;,&amp;quot;identifier&amp;quot;:&amp;quot;*.domain.com&amp;quot;}
Mcaddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295361.1286106,&amp;quot;logger&amp;quot;:&amp;quot;tls.obtain&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;releasing lock&amp;quot;,&amp;quot;identifier&amp;quot;:&amp;quot;*.domain.com&amp;quot;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cet article ne fait qu'effleurer les possiblités offerte par Caddy. Comme toujours, je vous invite à vous plonger dans la documentation du logiciel et à parcourir la liste des plugins disponible. Si vous souhaitez voir d'autres fonctionnalités de Caddy détaillées sur ce blog n'hésitez pas à m'en faire part directement.&lt;/p&gt;
&lt;/section&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Pilotage de Caddy par API</title><link href="https://blog.devarieux.net/2021/02/caddy-api.html" rel="alternate"></link><published>2021-02-21T00:23:00+01:00</published><updated>2021-02-21T00:23:00+01:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2021-02-21:/2021/02/caddy-api.html</id><summary type="html">&lt;p&gt;Comme promis dans l'article précédent sur Caddy, je vais parler de l'utilisation de l'API de Caddy. Un prochain article décrira comment générer un certificat wildcard pour un domaine hébergé chez OVH.&lt;/p&gt;
&lt;p&gt;En plus de permettre de lire la configuration, l'API de Caddy permet aussi d'en pousser une nouvelle, en totalité …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Comme promis dans l'article précédent sur Caddy, je vais parler de l'utilisation de l'API de Caddy. Un prochain article décrira comment générer un certificat wildcard pour un domaine hébergé chez OVH.&lt;/p&gt;
&lt;p&gt;En plus de permettre de lire la configuration, l'API de Caddy permet aussi d'en pousser une nouvelle, en totalité ou en partie. L'avantage est que, si la configuration envoyée est valide, celle ci est chargée à chaud et sinon un code retour autre que 200 est renvoyé, précisant l'erreur rencontrée.&lt;/p&gt;
&lt;p&gt;Attention au mode d'execution du service Caddy lorsqu'on commence à le configurer par API. Il est nécessaire d'utiliser le fichier de service décrit &lt;a href="https://caddyserver.com/docs/install#linux-service"&gt;dans la documentation&lt;/a&gt;. Sans cela, les modifications apportées seront perdues au prochain redémarrage du service.&lt;/p&gt;
&lt;p&gt;L'API est disponible par defaut seulement sur la boucle locale, port 2019. On peut déjà commencer par visualiser la configuration avant de commencer à en pousser une nouvelle.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl http://localhost:2019/config/ | python3 -m json.tool
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Le pipe vers la commande python permet d'obtenir directement un affichage json en mode pretty print.&lt;/p&gt;
&lt;section id="pousser-une-configuration-complete"&gt;
&lt;h2&gt;Pousser une configuration complète&lt;/h2&gt;
&lt;p&gt;La configuration à envoyer vers Caddy est préparée dans un fichier, qu'on va appeler &lt;code class="code"&gt;config.json&lt;/code&gt;. Ce fichier sera ensuite envoyé en tant que payload dans l'appel API.&lt;/p&gt;
&lt;p&gt;Première configuration simple avec un reverse proxy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;apps&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;http&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;servers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;srv0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;listen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:443&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;routes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;handle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;handler&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;reverse_proxy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;upstreams&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;dial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.0.0.1:80&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Avec cette configuration, on a la génération du certificat TLS via Let's Encrypt ainsi que la redirection HTTP vers HTTPS. On pousse cette configuration avec la commande suivante :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl 127.0.0.1:2019/load -X POST -H &amp;quot;Content-Type: application/json&amp;quot; -d @config.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Passons maintenant à l'étape suivante. Nous allons ajouter plusieurs éléments de configuration&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;listen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;127.0.0.1:2019&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;apps&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;http&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;servers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;srv0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;listen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:443&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;routes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;handle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;handler&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;reverse_proxy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;transport&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;protocol&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;tls&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;upstreams&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;dial&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.0.0.1:443&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;match&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;host&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sub.domain.com&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;tls_connection_policies&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;certificate_selection&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;any_tag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;companycert&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;tls&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;certificates&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;load_files&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;certificate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/pki/tls/certs/companycert.crt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/pki/tls/private/companycert.key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;companycert&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Qu'avons nous exactement?
Premièrement, nous créons une route qui utilise un handle. Un handle est un processus de Caddy qui permet d'activer certaines fonctionnalités spécifiques. Ici nous utilisons le handle &lt;code class="code"&gt;reverse_proxy&lt;/code&gt; mais il y en a &lt;a href="https://caddyserver.com/docs/json/apps/http/servers/routes/handle/"&gt;bien d'autres&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ensuite, avec la directive &lt;code class="code"&gt;&amp;quot;upstream&amp;quot; &amp;quot;dial&amp;quot;&lt;/code&gt;, on spécifie le serveur de backend à utiliser. En précisant &lt;code class="code"&gt;:443&lt;/code&gt;, on force le reverse proxy à se connecter au backend en HTTPS.&lt;/p&gt;
&lt;p&gt;Puis la directive &lt;code class="code"&gt;&amp;quot;match&amp;quot; &amp;quot;host&amp;quot;&lt;/code&gt; permet de répondre aux requêtes destinées à &lt;code class="code"&gt;sub.domain.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On termine enfin avec la configuration TLS. D'une part, on indique la politique TLS du serveur &amp;quot;srv0&amp;quot;. La possibilitée d'utiliser des tags est assez pratique pour ne pas avoir à répéter les chemins des certificats lorsqu'on utilise plusieurs éléments &amp;quot;server&amp;quot; dans la même configuration. Il est même possible de spécifier plusieurs tags, correspondant à plusieurs certificats. Caddy choisira le certificat le plus adapté au SNI de destination.&lt;/p&gt;
&lt;p&gt;De la même façon, on pousse la configuration complète vers Caddy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl 127.0.0.1:2019/load -X POST -H &amp;quot;Content-Type: application/json&amp;quot; -d @config.json
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="mettre-a-jour-une-partie-de-la-configuration"&gt;
&lt;h2&gt;Mettre à jour une partie de la configuration&lt;/h2&gt;
&lt;p&gt;Pour mettre à jour ou remplacer une partie de la configuration, on va utiliser le chemin JSON qu'on souhaite mettre à jour et changer de verbe HTTP.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;POST /config/[chemin]&lt;/dt&gt;
&lt;dd&gt;Configure ou remplace un objet. Si l'objet est une liste, l'élément est ajouté à la liste.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Voici par exemple comment ajouter l'écoute sur le port 80, ce qui désactive la redirection automatique de HTTP vers HTTPS&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X POST -H &amp;quot;Content-Type: application/json&amp;quot; -d &amp;#39;&amp;quot;:80&amp;quot;&amp;#39; &amp;quot;http://127.0.0.1:2019/config/apps/http/servers/srv0/listen&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;dl&gt;
&lt;dt&gt;PUT /config/[chemin]&lt;/dt&gt;
&lt;dd&gt;Créé un nouvel objet. Insert dans un liste&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Pour continuer sur l'exemple du port d'écoute, on peut ajouter le port d'écoute 80 de cette façon :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X PUT -H &amp;quot;Content-Type: application/json&amp;quot; -d &amp;#39;&amp;quot;:80&amp;quot;&amp;#39; &amp;quot;http://127.0.0.1:2019/config/apps/http/servers/srv0/listen/0&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;dl&gt;
&lt;dt&gt;PATCH /config/[chemin]&lt;/dt&gt;
&lt;dd&gt;Remplace un objet ou une liste&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Dison qu'on souhaite remettre en place la redirection du port 80 vers 443. Cela est automatique lorsqu'on demande à Caddy d'écouter seulement sur le port 443. Cette commande va remplacer la liste &lt;code class="code"&gt;[&amp;quot;:80&amp;quot;, &amp;quot;:443&amp;quot;]&lt;/code&gt; par simplement &lt;code class="code"&gt;[&amp;quot;:443&amp;quot;]&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X PATCH -H &amp;quot;Content-Type: application/json&amp;quot; -d &amp;#39;&amp;quot;:443&amp;quot;&amp;#39; &amp;quot;http://127.0.0.1:2019/config/apps/http/servers/srv0/listen/&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Voilà pour un tour rapide de l'utilisation de l'API de Caddy. Dans un prochain article j'expliquerai comment compiler Caddy avec des plugins et comment générer un certificat wildcard pour un domaine hébergé chez OVH, en remplissant le challenge DNS proposé par Let's Encrypt.&lt;/p&gt;
&lt;/section&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Présentation de Caddy</title><link href="https://blog.devarieux.net/2021/02/caddy-presentation.html" rel="alternate"></link><published>2021-02-19T06:55:00+01:00</published><updated>2021-02-19T06:55:00+01:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2021-02-19:/2021/02/caddy-presentation.html</id><summary type="html">&lt;p&gt;Dans un tweet récent, j'expliquais voir trop peu de publications d'articles sur le serveur web / reverse proxy &lt;a href="https://caddyserver.com/"&gt;Caddy&lt;/a&gt;. Je pense que Caddy gagne a être connu, voici donc un premier article de présentation.&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-partner="tweetdeck"&gt;&lt;p lang="fr" dir="ltr"&gt;Je vois pas mal de partage d&amp;#39;articles sur Traefik dans mon fil Twitter. J&amp;#39;aime beaucoup …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Dans un tweet récent, j'expliquais voir trop peu de publications d'articles sur le serveur web / reverse proxy &lt;a href="https://caddyserver.com/"&gt;Caddy&lt;/a&gt;. Je pense que Caddy gagne a être connu, voici donc un premier article de présentation.&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-partner="tweetdeck"&gt;&lt;p lang="fr" dir="ltr"&gt;Je vois pas mal de partage d&amp;#39;articles sur Traefik dans mon fil Twitter. J&amp;#39;aime beaucoup Traefik mais je lui préfère &lt;a href="https://twitter.com/caddyserver?ref_src=twsrc%5Etfw"&gt;@caddyserver&lt;/a&gt;.&lt;br&gt;Je profite donc de la reprise des activités sur mon blog pour vous préparer quelques articles sur Caddy et l&amp;#39;utilisation de son API.&lt;/p&gt;&amp;mdash; Alain Devarieux (@landvarx) &lt;a href="https://twitter.com/landvarx/status/1362078709436592130?ref_src=twsrc%5Etfw"&gt;February 17, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;p&gt;Caddy est un serveur web, de même que Apache ou Nginx. Il dispose également d'une fonctionnalité de reverse proxy et utilise des options de sécurités avancées par défaut (HTTPS par défaut avec Let's Encrypt ou ZeroSSL, TLS 1.3, OCSP Stapling, Cipher Suite modernes). Le logiciel est écrit en Go.
En plus de ces fonctionnalités de sécurités, Caddy est multiplateforme, il fonctionne avec un seul binaire, supporte les plugins et supporte plusieurs types de challenges ACME.&lt;/p&gt;
&lt;p&gt;Je ne vais pas revenir sur son installation, parfaitement décrite dans &lt;a href="https://caddyserver.com/docs/install"&gt;la documentation&lt;/a&gt;.&lt;/p&gt;
&lt;section id="configuration"&gt;
&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Caddy peut se configurer de deux manières. Via le fichier de configuration, appelé &lt;code class="code"&gt;Caddyfile&lt;/code&gt; ou via son API avec un payload JSON. L'utilisation de l'API sera décrite dans un prochain article.
J'utilise Caddy principalement pour ses fonctionnalités de reverse proxy. Voyons donc quelques exemples de configuration de Caddy via le Caddyfile.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sub.domain.com {
    reverse_proxy 10.0.0.1:8000
    log {
        output file /var/log/caddy/sub.domain.com_access.log
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bien, avec ça, nous avons un reverse proxy qui écoute sur le port 80 et 443, avec redirection automatique HTTP vers HTTPS. Les logs seront renvoyés vers un fichier. Avec cette configuration, le certificat Let's Encrypt est généré (si le DNS est bien configuré et que Caddy est accessible depuis l'exterieur) et seuls les protocoles TLS 1.2 et 1.3 sont supportés. Niveau sécurité, on est pas mal.&lt;/p&gt;
&lt;p&gt;De la même façon, le header &lt;code class="code"&gt;X-Forwarded-For&lt;/code&gt; est automatiquement intégré dans l'entête HTTP envoyé au serveur de backend. Cette intégration permet de gagner quelques lignes de configuration.
Voyons maintenant comment gérer l'utilisation de deux backends différents pour des URI différentes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sub.domain.com {
reverse_proxy /api/v1/* 10.0.0.2:4000
reverse_proxy / 10.0.0.1:3000

log {
        output file /var/log/caddy/sub.domain.com_access.log {
                roll_size 10MiB
                roll_keep 10
                }
        }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Là encore, c'est assez simple. On traite d'abord les requêtes vers &lt;code class="code"&gt;/api/v1&lt;/code&gt; qui sont envoyées vers un premier backend et le reste des requêtes est envoyé vers &lt;code class="code"&gt;10.0.0.1&lt;/code&gt;. J'en ai profité pour ajouter une rotation des logs.&lt;/p&gt;
&lt;p&gt;Tout cela fonctionne bien quand on a un site disponible publiquement et pour lequel Caddy peut générer un certificat Let's Encrypt. Voyons maintenant comment intégrer son propre certificat (autosigné ou non). Pour cet exemple, je m'appuie sur une configuration de Caddy pour servir un serveur Graylog&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;logs.domain.com {
        reverse_proxy 127.0.0.1:9000
        header X-Graylog-Server-URL https://logs.domain.com/
        tls /etc/pki/tls/certs/companycert.crt /etc/pki/tls/private/companycert.key
log {
        output file /var/log/caddy/graylog.log {
                roll_size 10MiB
                roll_keep 10
                }
        }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;L'option &lt;code class="code"&gt;tls&lt;/code&gt; permet de passer directement le certificat puis la clé privée du certificat. L'ajout d'un header se fait de façon assez simple ici aussi.&lt;/p&gt;
&lt;p&gt;Enfin, comment faire lorsqu'on souhaite servir son site en plain HTTP, sans TLS. L'option est assez simple et plutot ingénieuse. Il suffit de forcer le site en HTTP dans l'URL.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http://sub.domain.com {
    reverse_proxy 10.0.0.1:8000
    log {
        output file /var/log/caddy/sub.domain.com_access.log
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Avec cette configuration, Caddy ne va pas tenter de générer le certificat Let's Encrypt ni proposer de redirection HTTP vers HTTPS.&lt;/p&gt;
&lt;p&gt;Dans le prochain article nous verrons comment utiliser l'API de Caddy en lecture et en écriture totale ou partielle de configuration.&lt;/p&gt;
&lt;/section&gt;
</content><category term="Sysadmin"></category></entry><entry><title>VPN Meraki et Windows 10</title><link href="https://blog.devarieux.net/2021/02/vpn-meraki-win10.html" rel="alternate"></link><published>2021-02-17T21:47:00+01:00</published><updated>2021-02-17T21:47:00+01:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2021-02-17:/2021/02/vpn-meraki-win10.html</id><summary type="html">&lt;p&gt;Un des avantages du VPN Meraki est qu'il ne nécessite pas de client de spécifique pour Windows. Le problème principal est que sa configuration nécessite quelques manipulations. Beaucoup de nos prestatiares rencontrent des difficultés pour s'y connecter et nous remontent régulièrement qu'ils ont des échecs de connexions avec le code …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Un des avantages du VPN Meraki est qu'il ne nécessite pas de client de spécifique pour Windows. Le problème principal est que sa configuration nécessite quelques manipulations. Beaucoup de nos prestatiares rencontrent des difficultés pour s'y connecter et nous remontent régulièrement qu'ils ont des échecs de connexions avec le code erreur 628, ou encore le message &amp;quot;The connection was terminated by the remote computer before it could be completed.&amp;quot;.
Voici donc comment configurer un VPN Meraki sous Windows 10. Avec en bonus, la configuration de la base de registre en cas d'erreur 809 qui apparait lorsque le client VPN se trouve derrière du NAT.&lt;/p&gt;
&lt;section id="configuration-du-client-vpn-l2tp"&gt;
&lt;h2&gt;Configuration du client VPN L2TP&lt;/h2&gt;
&lt;p&gt;Dans les paramètres VPN de Windows 10, ajouter un nouveau VPN et y entrer les informations de connexion. Jusque là, rien de bien compliqué.&lt;/p&gt;
&lt;img alt="Windows 10 - Add VPN" class="m-image" src="/images/Meraki_VPN_WIN10_Settings.png" /&gt;
&lt;p&gt;Ensuite, il faut se rendre dans les options d'adaptateurs (Change adapter options). Cela ouvre le Control Panel. Clique droit sur la connexion VPN concernée puis Propriété. Ici, dans l'onglet Securité, dans le second menu déroulant, il faut sélectionner &amp;quot;Require Encryption (Disconnect if server decline)&amp;quot;.
Puis, dans le partie Authentication, il faut cocher Allow these protocols puis 'Unencrypted password (PAP). Cette option n'envoie pas le mot de passe en clair sur le réseau. Celui ci transit par un canal chiffré entre le poste client et le MX Meraki.&lt;/p&gt;
&lt;img alt="Windows 10 - VPN Properties" class="m-image" src="/images/Meraki_VPN_Win10_Properties01.png" /&gt;
&lt;p&gt;Ensuite, il faut cliquer sur le bouton 'Advanced Settings' et entrer la PSK dans la fenêtre qui s'ouvre.
On peut enfin valider le tout et se connecter au VPN. Si cela ne fonctionne pas, il est possible que ce soit une option de Windows dans la base de registre qui empêche la communication a travers les réseaux natés. Pour corriger cela, il faut ouvrir la base de registre en mode administrateur puis créer cette clé :&lt;/p&gt;
&lt;pre class="code"&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PolicyAgent
Nom : AssumeUDPEncapsulationContextOnSendRule
Type: DWORD
Valeur: 2
Base: Decimal&lt;/pre&gt;
&lt;p&gt;Après un reboot, la connexion devrait fonctionner.&lt;/p&gt;
&lt;/section&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Cisco Hyperflex - Supprimer la configuration réseau de réplication</title><link href="https://blog.devarieux.net/2021/02/reset-hyperflex-replication-network.html" rel="alternate"></link><published>2021-02-03T21:40:00+01:00</published><updated>2021-02-03T21:40:00+01:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2021-02-03:/2021/02/reset-hyperflex-replication-network.html</id><summary type="html">&lt;p&gt;Cette semaine, j'ai pris le temps de jouer avec une instance de demo Cisco Hyperflex sur &lt;a href="https://dcloud.cisco.com/"&gt;dcloud.cisco.com&lt;/a&gt;. Cette demo permet de jouer un peu avec deux instances Hyperflex et notamment de mettre en place un PRA entre ces deux instances.
Pour mettre en oeuvre ce PRA, il faut …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cette semaine, j'ai pris le temps de jouer avec une instance de demo Cisco Hyperflex sur &lt;a href="https://dcloud.cisco.com/"&gt;dcloud.cisco.com&lt;/a&gt;. Cette demo permet de jouer un peu avec deux instances Hyperflex et notamment de mettre en place un PRA entre ces deux instances.
Pour mettre en oeuvre ce PRA, il faut au préalable configurer un réseau de réplication (Replication Network) qui doit permettre aux clusters Hyperflex de communiquer entre eux et transférer les données. Malheureusement, par inattention, j'ai fait une erreur lors de la configuration de ce réseau. J'ai paramétré une mauvaise adresse de réseau et une mauvaise gateway et la réplication refusait de fonctionner.&lt;/p&gt;
&lt;p&gt;Cette erreur de configuration m'a posé plus de problèmes que ce que je pensais car il n'est pas possible de reconfigurer ce réseau une fois qu'il est enregistré... Cela est indiqué noir sur blanc dans la &lt;a href="https://www.cisco.com/c/en/us/td/docs/hyperconverged_systems/HyperFlex_HX_DataPlatformSoftware/AdminGuide/2_5/b_HyperFlexSystems_AdministrationGuide_2_5/b_HyperFlexSystems_AdministrationGuide_2_5_chapter_01111.html#task_agm_yqs_m1b"&gt;documenation Cisco Hyperflex&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ce problème ne peut pas se régler par l'interface graphique. Il faut passer par la ligne de commande, directement sur le cluster. Ces commandes doivent être exécutées sur une des controller VM du cluster.
Le première commande permet de supprimer un appairage déjà existant entre 2 cluster. La suivante supprime effectivement la confguration du réseau de réplication.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;stcli dp peer forget --all
stcli drnetwork cleanup
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Une fois ces commandes executées, on peut de nouveau configurer le réseau de réplication.&lt;/p&gt;
&lt;img alt="Hyperflex Replication Network" class="m-image" src="/images/drnetwork.png" /&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Zimbra : Envoi de mails via un relais SMTP authentifié</title><link href="https://blog.devarieux.net/2016/06/relais-smtp-authentifie-zimbra.html" rel="alternate"></link><published>2016-06-24T08:30:00+02:00</published><updated>2016-06-24T08:30:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2016-06-24:/2016/06/relais-smtp-authentifie-zimbra.html</id><summary type="html">&lt;p&gt;Héberger soi même ses données c'est bien, le faire correctement c'est
mieux. Le problème majeur lorsqu'on souhaite héberger soi même ses mails
est qu'il est difficile de s'assurer que les mails soient bien reçus par
nos correspondants.&lt;/p&gt;
&lt;p&gt;Il arrive souvent que l'IP fournie par l’hébergeur fasse partie d'un
bloc …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Héberger soi même ses données c'est bien, le faire correctement c'est
mieux. Le problème majeur lorsqu'on souhaite héberger soi même ses mails
est qu'il est difficile de s'assurer que les mails soient bien reçus par
nos correspondants.&lt;/p&gt;
&lt;p&gt;Il arrive souvent que l'IP fournie par l’hébergeur fasse partie d'un
bloc d'IP bannie par plusieurs serveur SMTP. Il est toujours possible de
se faire débloquer des principales blacklists mais la plupart des
services mails possèdent leur propre blacklist (coucou barracuda). Même
un SPF et un DKIM bien configuré ne suffisent pas à outrepasser ces
blocages.&lt;/p&gt;
&lt;p&gt;Plusieurs solutions s'offraient à moi pour contourner ce problème.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Changer d'adresse IP: ça peut fonctionner mais impossible de savoir
tant qu'on a pas testé la nouvelle IP. Forte  probabilité que cette
IP fasse également partie d'un bloc blacklisté&lt;/li&gt;
&lt;li&gt;Passer sur un hébergeur Zimbra : Intéressant, mais souvent très cher.
De l'ordre de 5€/mois et par compte minimum.&lt;/li&gt;
&lt;li&gt;Passer par un relais SMTP : J'ai opté pour cette solution même si
elle n'est pas idéal car cela ajoute intermédiaire et une dépendance
pour le service.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pour mettre cette solution en oeuvre, j'ai choisi le service smtp2go. Il
y en a beaucoup d'autres et la plupart proposent des services gratuits
pour un envoi limité de mails. Avec smtp2go, le service est gratuit
jusqu'à 1000 mails par mois ce qui devrait être suffisant.&lt;/p&gt;
&lt;p&gt;Une fois l'inscription effectuée, il faut encore configurer Zimbra pour
qu'il utilise ce relais. L'interface web d'administration propose bien
d'ajouter des relais SMTP mais impossible de s'y authentifier. La
configuration d'un relais STMP authentifié doit être faite en ligne de
commande.&lt;/p&gt;
&lt;pre&gt;[root&amp;#64;monzimbra]# su - zimbra
## On ajoute le relais SMTP
[root&amp;#64;monzimbra]# zmprov ms monzimbra.mondomaine.com zimbraMtaRelayHost relaissmtp.relaisdomaine.com:port
## On créé un fichier text de mapping login/mdp pour le relais
[root&amp;#64;monzimbra]# echo relaissmtp.relaisdomaine.com USERNAME:PASSWORD &amp;gt; /opt/zimbra/conf/relay_password
## Création de la table postfix
[root&amp;#64;monzimbra]# postmap /opt/zimbra/conf/relay_password
## Pour tester. Cette commande doit retourner le couple login/mdp
[root&amp;#64;monzimbra]# postmap -q relaissmtp.relaisdomaine.com /opt/zimbra/conf/relay_password
## Configuration de postfix pour qu'il utilise la map de login/mdp
[root&amp;#64;monzimbra]# zmprov ms monzimbra.mondomaine.com zimbraMtaSmtpSaslPasswordMaps lmdb:/opt/zimbra/conf/relay_password
## Configuration de postfix pour qu'il utilise l'authentification SSL
[root&amp;#64;monzimbra]# zmprov ms monzimbra.mondomaine.com zimbraMtaSmtpSaslAuthEnable yes
## Configuration de postfix pour qu'il n'utilise pas le canonical name du relais (problème de login/mdp sinon)
[root&amp;#64;monzimbra]# zmproc ms monzimbra.mondomaine.com zimbraMtaSmtpCnameOverridesServername no
## Configuration de TLS
[root&amp;#64;monzimbra]# zmprov ms monzimbra.mondomaine.com zimbraMtaSmtpTlsSecurityLevel may&lt;/pre&gt;
&lt;p&gt;C'est terminé, tous les domaines attachés au serveur passeront
dorénavant vers ce relais SMTP.&lt;/p&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Galera Mariadb: Load balancing et Failover HAproxy</title><link href="https://blog.devarieux.net/2016/06/galera-load-balancing-failover-haproxy.html" rel="alternate"></link><published>2016-06-21T21:47:00+02:00</published><updated>2016-06-21T21:47:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2016-06-21:/2016/06/galera-load-balancing-failover-haproxy.html</id><summary type="html">&lt;p&gt;Après avoir mis en place le &lt;a href="http://blog.devarieux.net/2016/06/monter-cluster-galera-mariadb/"&gt;cluster Galera
Mariadb&lt;/a&gt;,
nous avons besoin d'un point d'accès au cluster. Ce point d'accès peut
être un proxy mysql ou tout autre serveur HA.&lt;/p&gt;
&lt;p&gt;Nous allons configurer HAproxy avec l'option leastconn pour qu'il envoie
les paquets vers la machine ayant le moins de connexions …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Après avoir mis en place le &lt;a href="http://blog.devarieux.net/2016/06/monter-cluster-galera-mariadb/"&gt;cluster Galera
Mariadb&lt;/a&gt;,
nous avons besoin d'un point d'accès au cluster. Ce point d'accès peut
être un proxy mysql ou tout autre serveur HA.&lt;/p&gt;
&lt;p&gt;Nous allons configurer HAproxy avec l'option leastconn pour qu'il envoie
les paquets vers la machine ayant le moins de connexions (Load
Balancing) et nous allons mettre en place un check http pour qu'en cas
de problème sur un noeud, HAproxy ne lui envoie plus de paquets
(FailOver).&lt;/p&gt;
&lt;p&gt;Pour cela, nous avons besoin du script clustercheck présent
ici &lt;a class="m-link-wrap" href="https://github.com/olafz/percona-clustercheck"&gt;https://github.com/olafz/percona-clustercheck&lt;/a&gt;. Ce script doit être
présent sur chaque noeud du cluster mariadb.&lt;/p&gt;
&lt;section id="preparation-des-noeuds-du-cluster"&gt;
&lt;h2&gt;Préparation des nœuds du cluster&lt;/h2&gt;
&lt;p&gt;Toutes les opérations détaillées dans cette section doivent être
effectuées sur tous les nœuds du cluster mariadb.&lt;/p&gt;
&lt;p&gt;On commence par récupérer le script clustercheck, puis on créé un
utilisateur mysql pour l’exécution du script et on place le script au
bon endroit&lt;/p&gt;
&lt;pre&gt;wget https://raw.githubusercontent.com/olafz/percona-clustercheck/master/clustercheck
mysql&amp;gt; GRANT PROCESS ON *.* TO 'clustercheckuser'&amp;#64;'localhost' IDENTIFIED BY 'clustercheckpassword!'
chmod +x clustercheck
mv clustercheck /usr/bin&lt;/pre&gt;
&lt;p&gt;L'étape suivante consiste à créer un service xinetd dont la tâche sera
de lancer le script clustercheck à la demande.&lt;/p&gt;
&lt;p&gt;Création du fichier &lt;code&gt;/etc/xinetd.d/mariadbcheck&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;# default: on
# description: mariadbcheck
service mariadbcheck
{
        disable = no
        flags = REUSE
        socket_type = stream
        port = 9200
        wait = no
        user = nobody
        server = /usr/bin/clustercheck clustercheckuser clustercheckpassword!
        log_on_failure += USERID
        only_from = 0.0.0.0/0
        per_source = UNLIMITED }&lt;/pre&gt;
&lt;p&gt;Dans le champ only_from, vous pouvez mettre l'adresse ip d'HAproxy si
vous le souhaitez (avec un /32 à la fin).&lt;/p&gt;
&lt;p&gt;Pour avoir un service propre et bien configuré, on l'ajoute aussi dans
&lt;code&gt;/etc/services&lt;/code&gt; en commentant les anciens services utilisant le port
9200 (service wap, a priori votre serveur ne devrait pas en avoir besoin
:) )&lt;/p&gt;
&lt;pre&gt;mariadbcheck     9200/tcp                # mariadbcheck
#wap-wsp         9200/tcp                # WAP connectionless session service
#wap-wsp         9200/udp                # WAP connectionless session service&lt;/pre&gt;
&lt;p&gt;On redémarre xinetd et on devrait avoir le port 9200 en écoute.&lt;/p&gt;
&lt;p&gt;Pour vérifier que ça fonctionne, lancez la commande &lt;code&gt;clustercheck&lt;/code&gt;.
Elle doit renvoyer du text contenant &lt;code&gt;HTTP/1.1 200 OK&lt;/code&gt; qui sera le
retour attendu par HAproxy pour s'assurer que le noeud du cluster est
atteignable.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="configuration-d-haproxy"&gt;
&lt;h2&gt;Configuration d'HAproxy&lt;/h2&gt;
&lt;p&gt;La plus gros du boulot est fait. Reste à définir le cluster dans
HAproxy.&lt;/p&gt;
&lt;p&gt;Ceci se fait dans le fichier de conf en y ajoutant à la fin :&lt;/p&gt;
&lt;pre&gt;listen galera-mariadb 0.0.0.0:3306
  balance leastconn
  option httpchk
  mode tcp
  server mariadb01 ip.de.mariadb.01:3306 check port 9200 inter 5000 fastinter 2000 rise 2 fall 2
  server mariadb02 ip.de.mariadb.02:3306 check port 9200 inter 5000 fastinter 2000 rise 2 fall 2
  server mariadb03 ip.de.mariadb.03:3306 check port 9200 inter 5000 fastinter 2000 rise 2 fall 2&lt;/pre&gt;
&lt;p&gt;Après avoir redémarré HAproxy, le cluster doit être joignable et on doit
pouvoir prouver le load balancing :&lt;/p&gt;
&lt;pre&gt;[root&amp;#64;haproxy]# mysql -uroot -p -h127.0.0.1 -e &amp;quot;show variables like 'wsrep_node_name' ;&amp;quot;
+-----------------+---------------+
| Variable_name   | VALUE         |
+-----------------+---------------+
| wsrep_node_name |   mariadb01   |
+-----------------+---------------+&lt;/pre&gt;
&lt;pre&gt;[root&amp;#64;haproxy]# mysql -uroot -p -h127.0.0.1 -e &amp;quot;show variables like 'wsrep_node_name' ;&amp;quot;
+-----------------+---------------+
| Variable_name   | VALUE         |
+-----------------+---------------+
| wsrep_node_name |   mariadb02   |
+-----------------+---------------+&lt;/pre&gt;
&lt;pre&gt;[root&amp;#64;haproxy]# mysql -uroot -p -h127.0.0.1 -e &amp;quot;show variables like 'wsrep_node_name' ;&amp;quot;
+-----------------+---------------+
| Variable_name   | VALUE         |
+-----------------+---------------+
| wsrep_node_name |   mariadb03   |
+-----------------+---------------+&lt;/pre&gt;
&lt;/section&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Pas à pas - monter un cluster Galera Mariadb</title><link href="https://blog.devarieux.net/2016/06/monter-cluster-galera-mariadb.html" rel="alternate"></link><published>2016-06-20T22:40:00+02:00</published><updated>2016-06-20T22:40:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2016-06-20:/2016/06/monter-cluster-galera-mariadb.html</id><summary type="html">&lt;p&gt;Lorsque je me suis mis dans l'idée de monter un cluster Galera Mariadb
pour remplacer notre cluster Mysql, je pensais trouver facilement de la
documentation en ligne. On trouve en effet beaucoup d'articles de blogs
expliquant comment créer son cluster Galera malheureusement cette techno
évolue vite et les articles sont …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Lorsque je me suis mis dans l'idée de monter un cluster Galera Mariadb
pour remplacer notre cluster Mysql, je pensais trouver facilement de la
documentation en ligne. On trouve en effet beaucoup d'articles de blogs
expliquant comment créer son cluster Galera malheureusement cette techno
évolue vite et les articles sont rarement à jour.&lt;/p&gt;
&lt;p&gt;La documentation qu'on peut trouver sur le site de mariadb est également
assez succinct et c'est en compilant des articles depuis plusieurs
sources que j'ai pu monter ce cluster.&lt;/p&gt;
&lt;p&gt;Galera est une technologie de clusterisation de base de données bien
plus efficace que ce qu'on peut faire actuellement avec mysql. Un
cluster classique mysql fonctionne en mode actif/passif et si le nœud
actif tombe, il est nécessaire de faire une opération manuelle pour
passer un des nœud passif en actif. De plus, si un nœud reste éteint
durant une période prolongée, il ne peut plus rattraper son retard sur
le nœud primaire et sort du cluster. Galera règle ces problèmes avec un
cluster de nœuds actifs/actifs. Chaque nœud est capable de recevoir des
écritures et Galera s'occupe de synchroniser tout ça.&lt;/p&gt;
&lt;p&gt;Pour réaliser le cluster, j'ai utilisé 4 serveurs Centos 7 : 3 nœuds
mariadb (il faut un chiffre impair pour respecter le quorum) et un
serveur haproxy en frontal en mode répartition de charge (leastconn) qui
fait office de passerelle d'accès. Les machines s'appellent
respectivement mariadb01, mariadb02, mariadb03 et mariadb-proxy.&lt;/p&gt;
&lt;p&gt;Cet article s'attache à la mise en oeuvre du cluster en lui même. Un
second article détaillera &lt;a href="http://blog.devarieux.net/2016/06/galera-load-balancing-failover-haproxy/"&gt;le déploiement
d'haproxy&lt;/a&gt;.&lt;/p&gt;
&lt;section id="configuration-du-noeud-mariadb01"&gt;
&lt;h2&gt;Configuration du nœud mariadb01&lt;/h2&gt;
&lt;p&gt;On commence par récupérer le repo mariadb pour CentOS
ici &lt;a class="m-link-wrap" href="https://downloads.mariadb.org/mariadb/repositories/"&gt;https://downloads.mariadb.org/mariadb/repositories/&lt;/a&gt; ce qui devrait
vous donner quelque chose comme ça:&lt;/p&gt;
&lt;pre class="code"&gt;# Put this file in /etc/yum.repos.d/
# MariaDB 10.1 CentOS repository list - created 2016-06-20 19:31 UTC
# http://downloads.mariadb.org/mariadb/repositories/
[mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/10.1/centos7-amd64
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1&lt;/pre&gt;
&lt;p&gt;On peut ensuite installer les paquets nécessaires&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;yum -y install MariaDB-server MariaDB-client galera rsync xinetd&lt;/code&gt;&lt;br /&gt;
&lt;p&gt;
On édite ensuite le fichier de configuration de galera&lt;br /&gt;
&lt;code&gt;vim /etc/my.cnf.d/server.conf&lt;/code&gt;&lt;br /&gt;
Et dans la zone du fichier dédiée à galera:&lt;br /&gt;
&lt;/p&gt;
&lt;/p&gt;
&lt;pre&gt;[galera]
# Mandatory settings
wsrep_on=ON
wsrep_provider='/lib64/galera/libgalera_smm.so'
wsrep_cluster_address='gcomm://'
wsrep_cluster_name='galera'
wsrep_node_name='mariadb01'
wsrep_sst_method=rsync
binlog_format=row
default_storage_engine=InnoDB
innodb_autoinc_lock_mode=2
bind-address=0.0.0.0&lt;/pre&gt;
&lt;p&gt;On ne donne aucune adresse pour le moment au cluster. On laisse la
valeur par défaut gcomm://. On reviendra sur cette partie plus tard.&lt;/p&gt;
&lt;p&gt;Avant de démarrer le premier nœud du cluster, on lance la sécurisation
de l'instance mariadb avec la commande mysql_secure_installation.&lt;/p&gt;
&lt;p&gt;Une fois cette étape effectuée, on peut démarrer le cluster. Cette
commande ne doit être lancée qu'une seule fois et seulement sur le
premier noeud configuré.&lt;/p&gt;
&lt;pre&gt;galera_new_cluster&lt;/pre&gt;
&lt;p&gt;On se connecte ensuite sur l'instance mysql pour vérifier que le cluster
est bien opérationnel:&lt;/p&gt;
&lt;pre&gt;[root&amp;#64;mariadb01 ~]# mysql -u root -p
Enter password:
Welcome to the MariaDB monitor. Commands end with ; or \g.
Your MariaDB connection id is 18705
Server version: 10.1.14-MariaDB MariaDB Server

Copyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]&amp;gt; SHOW GLOBAL STATUS WHERE Variable_name IN ('wsrep_ready', 'wsrep_cluster_size', 'wsrep_cluster_status', 'wsrep_connected');
+----------------------+---------+
| Variable_name        | Value   |
+----------------------+---------+
| wsrep_cluster_size   |    1    |
| wsrep_cluster_status | Primary |
| wsrep_connected      |    ON   |
| wsrep_ready          |    ON   |
+----------------------+---------+
4 rows in set (0.01 sec)&lt;/pre&gt;
&lt;p&gt;Et voilà notre cluster Galera composée de 1 nœud pour le moment :)&lt;/p&gt;
&lt;/section&gt;
&lt;section id="configuration-de-mariadb02-et-mariadb03"&gt;
&lt;h2&gt;Configuration de mariadb02 et mariadb03&lt;/h2&gt;
&lt;p&gt;On reprend les mêmes étapes que pour mariadb01 en adaptant le fichier de
configuration. On n'oublie pas de lancer mysql_secure_installation.&lt;/p&gt;
&lt;p&gt;Le fichier de conf de mariadb02 :&lt;/p&gt;
&lt;pre&gt;[galera]
# Mandatory settings
wsrep_on=ON
wsrep_provider='/lib64/galera/libgalera_smm.so'
wsrep_cluster_address='gcomm://mariadb01,mariadb02'
wsrep_cluster_name='galera'
wsrep_node_name='mariadb02'
wsrep_sst_method=rsync
binlog_format=row
default_storage_engine=InnoDB
innodb_autoinc_lock_mode=2
bind-address=0.0.0.0&lt;/pre&gt;
&lt;p&gt;On peut lancer le service mariadb de façon classique et vérifier que le
cluster est opérationnel :&lt;/p&gt;
&lt;pre&gt;[root&amp;#64;mariadb02 ~]# systemctl start mariadb
[root&amp;#64;mariadb02 ~]# mysql -u root -p
Enter password:
Welcome to the MariaDB monitor. Commands end with ; or \g.
Your MariaDB connection id is 18905
Server version: 10.1.14-MariaDB MariaDB Server

Copyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]&amp;gt; SHOW GLOBAL STATUS WHERE Variable_name IN ('wsrep_ready', 'wsrep_cluster_size', 'wsrep_cluster_status', 'wsrep_connected');
+----------------------+---------+
| Variable_name        | Value   |
+----------------------+---------+
| wsrep_cluster_size   |    2    |
| wsrep_cluster_status | Primary |
| wsrep_connected      |    ON   |
| wsrep_ready          |    ON   |
+----------------------+---------+
4 rows in set (0.01 sec)&lt;/pre&gt;
&lt;p&gt;On a bien 2 nœuds dans notre cluster, passons à mariadb03&lt;/p&gt;
&lt;p&gt;Le fichier de conf de mariadb03 :&lt;/p&gt;
&lt;pre&gt;[galera]
# Mandatory settings
wsrep_on=ON
wsrep_provider='/lib64/galera/libgalera_smm.so'
wsrep_cluster_address='gcomm://mariadb01,mariadb02,mariadb03'
wsrep_cluster_name='galera'
wsrep_node_name='mariadb03'
wsrep_sst_method=rsync
binlog_format=row
default_storage_engine=InnoDB
innodb_autoinc_lock_mode=2
bind-address=0.0.0.0&lt;/pre&gt;
&lt;p&gt;Idem, on lance le service et on vérifie que tout est ok:&lt;/p&gt;
&lt;pre&gt;[root&amp;#64;mariadb02 ~]# systemctl start mariadb
[root&amp;#64;mariadb02 ~]# mysql -u root -p
Enter password:
Welcome to the MariaDB monitor. Commands end with ; or \g.
Your MariaDB connection id is 18905
Server version: 10.1.14-MariaDB MariaDB Server

Copyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]&amp;gt; SHOW GLOBAL STATUS WHERE Variable_name IN ('wsrep_ready', 'wsrep_cluster_size', 'wsrep_cluster_status', 'wsrep_connected');
+----------------------+---------+
| Variable_name        | Value   |
+----------------------+---------+
| wsrep_cluster_size   |    3    |
| wsrep_cluster_status | Primary |
| wsrep_connected      |    ON   |
| wsrep_ready          |    ON   |
+----------------------+---------+
4 rows in set (0.01 sec)&lt;/pre&gt;
&lt;p&gt;Trois nœuds dans le cluster, c'est bon!&lt;/p&gt;
&lt;/section&gt;
&lt;section id="configuration-finale"&gt;
&lt;h2&gt;Configuration finale&lt;/h2&gt;
&lt;p&gt;On corrige maintenant les adresses de cluster sur les serveurs mariadb01
et mariadb02 en y mettant la même valeur que dans le fichier de conf de
mariadb03&lt;/p&gt;
&lt;pre&gt;wsrep_cluster_address='gcomm://mariadb01,mariadb02,mariadb03'&lt;/pre&gt;
&lt;p&gt;Puis on redémarrer les services&lt;/p&gt;
&lt;pre&gt;[root&amp;#64;mariadb02 ~]# systemctl restart mariadb&lt;/pre&gt;
&lt;pre&gt;[root&amp;#64;mariadb01 ~]# systemctl restart mariadb&lt;/pre&gt;
&lt;p&gt;C'est terminé.&lt;/p&gt;
&lt;p&gt;A ce stade, vous devez pouvoir vous connecter sur n'importe quel noeud,
créer une base, elle sera dupliquée dans la foulée sur les autres nœuds.&lt;/p&gt;
&lt;/section&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Pydio - migration, upgrade, package [EN]</title><link href="https://blog.devarieux.net/2016/05/pydio-migration-upgrade-package-en.html" rel="alternate"></link><published>2016-05-27T23:02:00+02:00</published><updated>2016-05-27T23:02:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2016-05-27:/2016/05/pydio-migration-upgrade-package-en.html</id><summary type="html">&lt;p&gt;Cet article est également disponible &lt;a href="http://blog.devarieux.net/2016/05/pydio-migration-upgrade-package-fr/"&gt;en
français&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This unclear title reveals an operation i've just done to make 3 moves
in one. Pydio 6.0.7 was running on a CentOS 6 server, installed via the
tar.gz archive.&lt;/p&gt;
&lt;p&gt;The primary goal was to upgrade Pydio to 6.4. Unfortunately …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cet article est également disponible &lt;a href="http://blog.devarieux.net/2016/05/pydio-migration-upgrade-package-fr/"&gt;en
français&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This unclear title reveals an operation i've just done to make 3 moves
in one. Pydio 6.0.7 was running on a CentOS 6 server, installed via the
tar.gz archive.&lt;/p&gt;
&lt;p&gt;The primary goal was to upgrade Pydio to 6.4. Unfortunately, there was
dependcies problems with php. Pydio 6.4 needs php 5.4 and CentOS only
brings 5.3 (you can install php 5.4 via other repos but I didn't want
this). The first was to create a new Centos7 VM, then install Pydio on
it using yum and the Pydio repo and finally import the old config in the
brand new Pydio.&lt;/p&gt;
&lt;p&gt;Installing Pydio through the package manager allows you to update it
easily and it also ease the automation for an autmatic deployement.
Also, the plugin management is facilitated.&lt;/p&gt;
&lt;p&gt;These are the steps I'll describe here.&lt;/p&gt;
&lt;p&gt;Install mariadb and httpd&lt;/p&gt;
&lt;pre class="code sh"&gt;yum install -y mariadb mariadb-server
systemctl start mariadb.service
systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; mariadb.service
mysql_secure_installation
yum install httpd
systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; httpd.service
systemctl start httpd.service&lt;/pre&gt;
&lt;p&gt;Installing Pydio dependancies :&lt;/p&gt;
&lt;pre class="code"&gt;yum -y install php php-gd php-ldap php-pear php-xml php-xmlrpc php-mbstring curl php-mcrypt* php-mysql&lt;/pre&gt;
&lt;p&gt;Installing Pydio repositories&lt;/p&gt;
&lt;pre class="code"&gt;wget https://download.pydio.com/pub/linux/centos/7/pydio-release-1-1.el7.centos.noarch.rpm&lt;/pre&gt;
&lt;p&gt;If you own a licence (free up to 10 users), you can also have the
enterprise repo.&lt;/p&gt;
&lt;pre class="code"&gt;wget https://API_KEY:API_SECRET&amp;#64;download.pydio.com/auth/linux/centos/7/x86_64/pydio-enterprise-release-1-1.el7.centos.noarch.rpm&lt;/pre&gt;
&lt;p&gt;With API_KEY and API_SECRET  in your dashboard on pydio.com, licence
tab&lt;/p&gt;
&lt;pre class="code"&gt;rpm -ivh pydio-release-1-1.el7.centos.noarch.rpm
rpm -ivh pydio-enterprise-release-1-1.el7.centos.noarch.rpm&lt;/pre&gt;
&lt;p&gt;Edit the repo file to add your API_KEY and API_SECRET&lt;/p&gt;
&lt;pre class="code"&gt;vim /etc/yum.repos.d/pydio-enterprise.repo&lt;/pre&gt;
&lt;p&gt;InstallPydio&lt;/p&gt;
&lt;pre class="code"&gt;yum update
yum install pydio-enterprise&lt;/pre&gt;
&lt;p&gt;I use to modify the default vhost file /etc/httpd/conf.d/pydio.conf&lt;/p&gt;
&lt;pre class="code apache"&gt;&lt;span class="nt"&gt;&amp;lt;VirtualHost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;s&gt;nom.du.vhost:80&lt;/s&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;Alias&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sx"&gt;/usr/share/pydio/&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;Alias&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sx"&gt;/pydio_public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sx"&gt;/var/lib/pydio/public/&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;Directory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;s&gt;/usr/share/pydio/&lt;/s&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;Options&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;FollowSymLinks&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;AllowOverride&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Limit&lt;span class="w"&gt; &lt;/span&gt;FileInfo&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;Require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;all&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;granted&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;php_value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;error_reporting&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;php_value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;upload_max_filesize&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;M&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;php_value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;post_max_size&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;M&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;php_value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;output_buffering&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Off&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;Directory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;s&gt;/var/lib/pydio/public/&lt;/s&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;AllowOverride&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Limit&lt;span class="w"&gt; &lt;/span&gt;FileInfo&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;Require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;all&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;granted&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;php_value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;error_reporting&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;Customize the charset in /etc/pydio/bootstrap_conf.php&lt;/p&gt;
&lt;pre class="code"&gt;define(&amp;quot;AJXP_LOCALE&amp;quot;, &amp;quot;fr_FR.UTF-8&amp;quot;);&lt;/pre&gt;
&lt;p&gt;Create the database:&lt;/p&gt;
&lt;pre class="code"&gt;mysql -u root -p
create database pydio;
create user pydio&amp;#64;localhost identified by 'mypassword';
grant all privileges on pydio.* to pydio&amp;#64;localhost identified by 'mypassword';
use mysql
update mysql.users set Super_Priv='Y' where user like pydio;&lt;/pre&gt;
&lt;p&gt;The last command gives the Super Privileges to the pydio user for it to
be able to create triggers.&lt;/p&gt;
&lt;p&gt;Install the Pydio plugins;&lt;/p&gt;
&lt;pre class="code"&gt;yum install pydio-plugin*&lt;/pre&gt;
&lt;p&gt;The last step is to import your old pydio database in your brand new one&lt;/p&gt;
&lt;pre class="code"&gt;mysql -u pydio -p pydio &amp;lt; mondumppydio.sql&lt;/pre&gt;
&lt;p&gt;Finally, you can go to the pydio page and go through the First Run
Wizard. Once done, you should be able to connect with your account and
find all your files.&lt;/p&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Pydio : migration, upgrade, package [FR]</title><link href="https://blog.devarieux.net/2016/05/pydio-migration-upgrade-package-fr.html" rel="alternate"></link><published>2016-05-27T23:02:00+02:00</published><updated>2016-05-27T23:02:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2016-05-27:/2016/05/pydio-migration-upgrade-package-fr.html</id><summary type="html">&lt;p&gt;The article is also available &lt;a href="http://blog.devarieux.net/2016/05/pydio-migration-upgrade-package-en/"&gt;in
english&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sous ce titre peu clair se cache une opération de que je viens de mener
afin d'opérer 3 opérations sur une instance pydio. Pour mettre les
choses dans leur contexte, Pydio était installé via l'archive tar.gz,
sur un serveur CentOS 6 et …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The article is also available &lt;a href="http://blog.devarieux.net/2016/05/pydio-migration-upgrade-package-en/"&gt;in
english&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sous ce titre peu clair se cache une opération de que je viens de mener
afin d'opérer 3 opérations sur une instance pydio. Pour mettre les
choses dans leur contexte, Pydio était installé via l'archive tar.gz,
sur un serveur CentOS 6 et la version utilisée était la 6.0.7.&lt;/p&gt;
&lt;p&gt;L'objectif initial est de mettre à jour Pydio en version 6.4.
Malheureusement, la version de php nécessaire n'est pas présente dans
Centos 6 (sauf via des dépôts externe que je ne souhaitais pas
utiliser). La première étape est donc de monter une nouvelle VM Centos7
puis d'installer Pydio avec yum via le dépôt Pydio et d'importer
l'ancienne configuration dans cette nouvelle instance.&lt;/p&gt;
&lt;p&gt;Installer Pydio via le gestionnaire de paquet permet de plus facilement
le mettre à jour et facilite également l'automation  pour un déploiement
automatique de Pydio ainsi que la gestion des plugins.&lt;/p&gt;
&lt;p&gt;Ce sont ces étapes que je vais détailler ici.&lt;/p&gt;
&lt;p&gt;Installation de mariadb et httpd&lt;/p&gt;
&lt;pre class="code sh"&gt;yum install -y mariadb mariadb-server
systemctl start mariadb.service
systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; mariadb.service
mysql_secure_installation
yum install httpd
systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; httpd.service
systemctl start httpd.service&lt;/pre&gt;
&lt;p&gt;Installation des dépendances pour Pydio :&lt;/p&gt;
&lt;pre class="code"&gt;yum -y install php php-gd php-ldap php-pear php-xml php-xmlrpc php-mbstring curl php-mcrypt* php-mysql&lt;/pre&gt;
&lt;p&gt;Installation des dépots Pydio&lt;/p&gt;
&lt;pre class="code"&gt;wget https://download.pydio.com/pub/linux/centos/7/pydio-release-1-1.el7.centos.noarch.rpm&lt;/pre&gt;
&lt;p&gt;Si vous avez une licence pydio (gratuit jusqu'à 10 utilisateurs), vous
devez aussi récupérer le dépot enterprise&lt;/p&gt;
&lt;pre class="code"&gt;wget https://API_KEY:API_SECRET&amp;#64;download.pydio.com/auth/linux/centos/7/x86_64/pydio-enterprise-release-1-1.el7.centos.noarch.rpm&lt;/pre&gt;
&lt;p&gt;Avec API_KEY et API_SECRET  dans votre dashboard sur pydio.com, onglet
licence&lt;/p&gt;
&lt;pre class="code"&gt;rpm -ivh pydio-release-1-1.el7.centos.noarch.rpm
rpm -ivh pydio-enterprise-release-1-1.el7.centos.noarch.rpm&lt;/pre&gt;
&lt;p&gt;Edition du dépot pour ajouter API_KEY et API_SECRET&lt;/p&gt;
&lt;pre class="code"&gt;vim /etc/yum.repos.d/pydio-enterprise.repo&lt;/pre&gt;
&lt;p&gt;Installation de pydio&lt;/p&gt;
&lt;pre class="code"&gt;yum update
yum install pydio-enterprise&lt;/pre&gt;
&lt;p&gt;Modification du vhost par defaut :&lt;/p&gt;
&lt;pre class="code apache"&gt;&lt;span class="nt"&gt;&amp;lt;VirtualHost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;s&gt;nom.du.vhost:80&lt;/s&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;Alias&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sx"&gt;/usr/share/pydio/&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;Alias&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sx"&gt;/pydio_public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sx"&gt;/var/lib/pydio/public/&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;Directory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;s&gt;/usr/share/pydio/&lt;/s&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;Options&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;FollowSymLinks&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;AllowOverride&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Limit&lt;span class="w"&gt; &lt;/span&gt;FileInfo&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;Require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;all&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;granted&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;php_value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;error_reporting&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;php_value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;upload_max_filesize&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;M&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;php_value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;post_max_size&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;M&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;php_value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;output_buffering&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Off&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;Directory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;s&gt;/var/lib/pydio/public/&lt;/s&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;AllowOverride&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Limit&lt;span class="w"&gt; &lt;/span&gt;FileInfo&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;Require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;all&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;granted&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;php_value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;error_reporting&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;Modification du charset dans /etc/pydio/bootstrap_conf.php&lt;/p&gt;
&lt;pre class="code"&gt;define(&amp;quot;AJXP_LOCALE&amp;quot;, &amp;quot;fr_FR.UTF-8&amp;quot;);&lt;/pre&gt;
&lt;p&gt;Création de la base de données:&lt;/p&gt;
&lt;pre class="code"&gt;mysql -u root -p
create database pydio;
create user pydio&amp;#64;localhost identified by 'mypassword';
grant all privileges on pydio.* to pydio&amp;#64;localhost identified by 'mypassword';
update mysql.users set Super_Priv='Y' where user like pydio;&lt;/pre&gt;
&lt;p&gt;La dernière commande sert à donner les super privilège à l'utilisateur
pydio afin qu'il puisse créer des triggers.&lt;/p&gt;
&lt;p&gt;Vient ensuite l'installation des plugins pydio:&lt;/p&gt;
&lt;pre class="code"&gt;yum install pydio-plugin*&lt;/pre&gt;
&lt;p&gt;On termine par l'import de la base de données&lt;/p&gt;
&lt;pre class="code"&gt;mysql -u pydio -p pydio &amp;lt; mondumppydio.sql&lt;/pre&gt;
&lt;p&gt;Enfin, on lance l'interface de pydio et on passe via le wizard pour la
première configuration. Une fois terminé, on doit pouvoir se connecter
avec son compte habituel et retrouver tous ses fichiers.&lt;/p&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Migration OpenLDAP 2.2 vers OpenLDAP 2.4</title><link href="https://blog.devarieux.net/2015/10/migration-openldap-2-2-vers-openldap-2-4.html" rel="alternate"></link><published>2015-10-30T23:24:00+01:00</published><updated>2015-10-30T23:24:00+01:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2015-10-30:/2015/10/migration-openldap-2-2-vers-openldap-2-4.html</id><summary type="html">&lt;p&gt;Parfois, certains serveurs sont là depuis tellement longtemps qu'on n'y
prête même plus attention. Et pourtant, il arrive qu'ils fassent tourner
des applications assez sensible, parfois même critique.&lt;/p&gt;
&lt;p&gt;C'est le cas de ce serveur OpenLDAP qui tourne sur une RedHat 5, sans
licence (donc sans yum) et dont la version …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Parfois, certains serveurs sont là depuis tellement longtemps qu'on n'y
prête même plus attention. Et pourtant, il arrive qu'ils fassent tourner
des applications assez sensible, parfois même critique.&lt;/p&gt;
&lt;p&gt;C'est le cas de ce serveur OpenLDAP qui tourne sur une RedHat 5, sans
licence (donc sans yum) et dont la version 2.2 d'OpenLDAP installée a
été compilée dans /usr/local. Typiquement le genre de serveur dont
personne ne veut s'occuper parce qu'il est difficile à maintenir et il
est également difficile de s'en débarrasser car il faut pouvoir sortir
les applications qui y tournent.&lt;/p&gt;
&lt;p&gt;Avec un collègue nous nous sommes donc attelé à cette tâche, non sans
peine. Il n'était à priori pas difficile de sortir un annuaire OpenLDAP
2.2 vers un nouvel annuaire OpenLDAP 2.2 mais l’intérêt de cette
manipulation était assez limité. Nous avons donc décidé de migrer vers
la version 2.4 d'OpenLDAP proposée dans les dépôts de CentOS 7. Nous
souhaitions également profiter de cette migration pour passer d'une
configuration fichier (slapd.conf) à une configuration en base (olc, en
gros OpenLDAP stock sa configuration dans une base LDAP). Voici la
méthode employée pour réussir cette opération :&lt;/p&gt;
&lt;p&gt;La première étape est de récupérer les informations dont nous avons
besoin sur l'ancien serveur. Nous avons besoin de son fichier de
configuration (slapd.conf, que nous allons renommer vieuxslapd.conf) et
du contenu de la base. Pour cela nous allons utiliser l'outil
&lt;code&gt;slapcat&lt;/code&gt; qui va générer un fichier &lt;code&gt;ldif&lt;/code&gt;. Ces 2 fichiers seront à
transférer sur le nouveau serveur. Si vous utilisez des schémas
spécifique, il faudra également les récupérer.&lt;/p&gt;
&lt;pre class="code"&gt;[aldevar&amp;#64;vieuxserveur]# slapcat -f /chemin/vers/vieuwslapd.conf -l /tmp/vieuxslap.ldif&lt;/pre&gt;
&lt;p&gt;Sur notre nouvelle machine CentOS 7, à jour, on installe
openldap-servers et openldap-clients&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# yum -y install openldap-servers openldap-clients&lt;/pre&gt;
&lt;p&gt;Configuration des logs d'OpenLDAP&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# echo &amp;quot;local4.*       /var/log/slapd.log&amp;quot; &amp;gt; /etc/rsyslog.d/slapd.conf
[aldevar&amp;#64;serveur]# systemctl restart rsyslog.service&lt;/pre&gt;
&lt;p&gt;Dans notre cas, il était nécessaire de nettoyer l'ancien fichier de
configuration.
|  Pour vérifier si que le fichier de conf est valide, on utilise
&lt;code&gt;slaptest&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# slaptest -f vieuxslapd.conf&lt;/pre&gt;
&lt;p&gt;Celui ci nous retourne des erreurs que nous corrigeons.&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# sed -i -e &amp;quot;s/attr=/attrs=/g&amp;quot; vieuxslapd.conf
[aldevar&amp;#64;serveur]# sed -i -e &amp;quot;/pidfile/d&amp;quot; /root/vieuxslapd.conf
[aldevar&amp;#64;serveur]# sed -i -e &amp;quot;/argsfile/d&amp;quot; /root/vieuxslapd.conf
[aldevar&amp;#64;serveur]# sed -i -e &amp;quot;s;directory /var/ldap/annuaireldap;directory /var/lib/ldap;&amp;quot; /root/vieuxslapd.conf&lt;/pre&gt;
&lt;p&gt;Nous utilisons le schéma de samba, pour le récupérer nous installons
samba&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# yum -y install samba&lt;/pre&gt;
&lt;p&gt;On copie les fichiers schéma récupérés sur l'ancien serveur dans le bon
répertoire :&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# cp *.schema /etc/openldap/schema/
[aldevar&amp;#64;serveur]# chown ldap. /etc/openldap/schema/*&lt;/pre&gt;
&lt;p&gt;Maintenant, nous allons corriger une incompatibilité sur laquelle nous
avons bloqué un bon moment. OpenLDAP ajoute pour chaque entrée un
attribut &lt;code&gt;entryUUID&lt;/code&gt; qu'il provisionne automatiquement. Entre la
version 2.2 et notre version 2.4, la format de la valeur
d'&lt;code&gt;entryUUID&lt;/code&gt; a changé. Il est passé d'une suite de caractères
aléatoire à 4 série de caractères hexadécimaux séparés par des &lt;code&gt;-&lt;/code&gt;.
Tant que nous n'avions pas trouver de solution à cette incompatibilité,
aucune entrée de ne pouvait être ajoutée dans notre nouvelle base. C'est
d’ailleurs la raison pour laquelle nous ne pouvions pas mettre en place
de synchronisation entre les 2 instances.&lt;/p&gt;
&lt;p&gt;La solution, radicale et rapide est de supprimer les entrées
&lt;code&gt;entryUUID&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# sed -i -e &amp;quot;/entryUUID/d&amp;quot; vieuxslap.ldif&lt;/pre&gt;
&lt;p&gt;Une fois ces étapes effectuée, nous devrions être prêt pour tester
l'import des données. Pour cela, nous utilisons l'outil &lt;code&gt;slapadd&lt;/code&gt; qui
à l'avantage de pouvoir travailler sans daemon ldap actif. En lui
fournissant le fichier de configuration il est capable d'écrire
directement dans les fichiers de la base. Dans un premier temps, nous le
lançons avec l'option &lt;code&gt;-u&lt;/code&gt; afin de le lancer en mode &lt;code&gt;dry-run&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# slapadd -f vieuxslapd.conf  -c -u -o schema-check=yes -l vieuxslap.ldif&lt;/pre&gt;
&lt;p&gt;Si cette commande ne sort pas d'erreurs, on peut la faire en réelle.&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# slapadd -f vieuxslapd.conf  -c -o schema-check=yes -l vieuxslap.ldif&lt;/pre&gt;
&lt;p&gt;A partir de là, on dispose d'une base ldap fonctionnelle et si on lance
la daemon slapd en lui fournissant le fichier de configuration, tout
devrait fonctionner.&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# slapd -u ldap -f vieuxslapd.conf&lt;/pre&gt;
&lt;p&gt;Mais, comme je l'ai dit plus haut, la bonne pratique est plutôt de
stocker la configuration en base olc. Cette base se trouve dans
&lt;code&gt;/etc/openldap/slapd.d&lt;/code&gt; et contient déjà de quoi faire fonctionner un
slapd basique mais vide. L'utilitaire &lt;code&gt;slaptest&lt;/code&gt; que nous avons
utilisé pour vérifier le fichier de configuration est également utilisé
pour faire cette migration. En lui fournissant d'un coté le fichier de
configuration et de l'autre le dossier de destination, il va transformer
le contenu du fichier en instructions ldif.&lt;/p&gt;
&lt;p&gt;Avant tout, on supprime le contenu actuel du répertoire.&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# rm -Rf /etc/openldap/slapd.d/*&lt;/pre&gt;
&lt;p&gt;On lance la migration de la configuration&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# slaptest -f vieuxslapd.conf -F /etc/openldap/slapd.d/&lt;/pre&gt;
&lt;p&gt;0n corrige les droits pour que le daemon puisse travailler&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# chown -R ldap. /etc/openldap/slapd.d/&lt;/pre&gt;
&lt;p&gt;Enfin, on importe le fichier &lt;code&gt;DB_CONFIG&lt;/code&gt; afin d'avoir des performances
normales sur la base&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG
[aldevar&amp;#64;serveur]# chown ldap. /var/lib/ldap/DB_CONFIG&lt;/pre&gt;
&lt;p&gt;Pour finir, on peut démarrer le daemon&lt;/p&gt;
&lt;pre&gt;[aldevar&amp;#64;serveur]# systemctl start slapd
[aldevar&amp;#64;serveur]# systemctl enable slapd&lt;/pre&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Vmware Client Integration Plugin HS dans Firefox</title><link href="https://blog.devarieux.net/2015/08/vmware-client-integration-plugin-hs-dans-firefox.html" rel="alternate"></link><published>2015-08-23T14:00:00+02:00</published><updated>2015-08-23T14:00:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2015-08-23:/2015/08/vmware-client-integration-plugin-hs-dans-firefox.html</id><summary type="html">&lt;p&gt;Depuis quelques semaines, le plugin d'intégration client VMware ne
fonctionne plus dans Firefox. La case &amp;quot;Utiliser les identifiants
Windows&amp;quot; est grisée et d'après l'interface de vCenter, le plugin n'est
pas installé sur votre machine.&lt;/p&gt;
&lt;p&gt;Ce problème est apparu avec Firefox 39 et concerne toutes les nouvelles
versions de Firefox depuis …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Depuis quelques semaines, le plugin d'intégration client VMware ne
fonctionne plus dans Firefox. La case &amp;quot;Utiliser les identifiants
Windows&amp;quot; est grisée et d'après l'interface de vCenter, le plugin n'est
pas installé sur votre machine.&lt;/p&gt;
&lt;p&gt;Ce problème est apparu avec Firefox 39 et concerne toutes les nouvelles
versions de Firefox depuis. Cela a plusieurs conséquences.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Impossible d'ouvrir les consoles des VM (la console HTML5, VMRC
fonctionne quant à lui)&lt;/li&gt;
&lt;li&gt;Impossible de déposer un fichier depuis son PC vers un Datastore via
le navigateur HTML5&lt;/li&gt;
&lt;li&gt;Impossible de déployer un template OVF depuis son PC via l'option de
déploiement de fichier OVF local.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pour corriger ce problème, il faut désactiver les options
security.ssl3.dhe de Firefox.&lt;/p&gt;
&lt;p&gt;Pour cela, se rendre dans &lt;a class="m-link-wrap" href="about:config"&gt;about:config&lt;/a&gt;, rechercher security.ssl3.dhe.
Vous devriez vous retrouver avec 2 entrées :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;security.ssl3.dhe_rsa_aes_128_sha&lt;/li&gt;
&lt;li&gt;security.ssl3.dhe_rsa_aes_256_sha&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Faire un clique droit sur chacune de ses entrées et cliquer sur
&lt;strong&gt;Inverser&lt;/strong&gt; (Toggle).&lt;/p&gt;
&lt;p&gt;Il ne reste plus qu'à rafraîchir la page vcenter.&lt;/p&gt;
&lt;p&gt;Source &lt;a href="http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;amp;cmd=displayKC&amp;amp;externalId=2125623"&gt;Vmware KB
2125623&lt;/a&gt;&lt;/p&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Comprendre la prédiction de noms des interfaces réseau de systemd</title><link href="https://blog.devarieux.net/2015/08/comprendre-la-prediction-de-noms-des-interfaces-reseau-de-systemd.html" rel="alternate"></link><published>2015-08-22T23:58:00+02:00</published><updated>2015-08-22T23:58:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2015-08-22:/2015/08/comprendre-la-prediction-de-noms-des-interfaces-reseau-de-systemd.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Cet article est une traduction d'`un article
original &amp;lt;https://major.io/2015/08/21/understanding-systemds-predictable-network-device-names/&amp;gt;`__
de Major Hayden, publié `sur son blog &amp;lt;https://major.io/&amp;gt;`__ le 21 Aout
2015. Article traduit avec son aimable autorisation.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;J'ai un peu parlé des nom des interfaces réseau de systemd dans …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;Cet article est une traduction d'`un article
original &amp;lt;https://major.io/2015/08/21/understanding-systemds-predictable-network-device-names/&amp;gt;`__
de Major Hayden, publié `sur son blog &amp;lt;https://major.io/&amp;gt;`__ le 21 Aout
2015. Article traduit avec son aimable autorisation.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;J'ai un peu parlé des nom des interfaces réseau de systemd dans un de
mes premiers post sur &lt;a href="https://major.io/2015/08/21/using-systemd-networkd-with-bonding-on-rackspaces-onmetal-servers/"&gt;systemd-networkd et le
bonding&lt;/a&gt;.
J'avais alors eu quelques questions sur la manière dont systemd
détermine le nom final des interfaces réseau. La prédictibilité de ces
noms m'a &lt;a href="https://major.io/2014/08/06/unexpected-predictable-network-naming-systemd/"&gt;pris de court l'été
dernier&lt;/a&gt;
quand je n'ai pas pu comprendre comment ces noms étaient construits.
|  Observons donc ce processus&lt;/p&gt;
&lt;section id="que-contient-le-nom"&gt;
&lt;h2&gt;Que contient le nom?&lt;/h2&gt;
&lt;p&gt;Dans l'article sur le bonding avec systemd-networkd, j'avais utilisé une
carte réseau Intel dual port montée sur un port hotplug&lt;/p&gt;
&lt;pre&gt;# udevadm info -e | grep -A 9 ^P.*eth0
P: /devices/pci0000:00/0000:00:03.2/0000:08:00.0/net/eth0
E: DEVPATH=/devices/pci0000:00/0000:00:03.2/0000:08:00.0/net/eth0
E: ID_BUS=pci
E: ID_MODEL_FROM_DATABASE=82599ES 10-Gigabit SFI/SFP+ Network Connection (Ethernet OCP Server Adapter X520-2)
E: ID_MODEL_ID=0x10fb
E: ID_NET_DRIVER=ixgbe
E: ID_NET_LINK_FILE=/usr/lib/systemd/network/99-default.link
E: ID_NET_NAME_MAC=enxa0369f2cec90
E: ID_NET_NAME_PATH=enp8s0f0
E: ID_NET_NAME_SLOT=ens9f0&lt;/pre&gt;
&lt;p&gt;Dans ce dump de la base de donnée udev, on voit que l'interface réseau
possède plusieurs noms&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID_NET_NAME_MAC=enxa0369f2cec90&lt;/li&gt;
&lt;li&gt;ID_NET_NAME_PATH=enp8s0f0&lt;/li&gt;
&lt;li&gt;ID_NET_NAME_SLOT=ens9f0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;D'où viennent ces noms? Nous pouvons nous plonger dans la code source de
systemd pour comprendre l'origine de ces noms et lequel est sélectionné
au final.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="descendre-dans-le-terrier-de-udev"&gt;
&lt;h2&gt;Descendre dans le terrier de udev&lt;/h2&gt;
&lt;p&gt;Voici un extrait du fichier
&lt;a href="https://github.com/systemd/systemd/blob/master/src/udev/udev-builtin-net_id.c"&gt;src/udev/udev-builtin-net_id.c&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code c"&gt;&lt;span class="cm"&gt;/*
 * Predictable network interface device names based on:
 *  - firmware/bios-provided index numbers for on-board devices
 *  - firmware-provided pci-express hotplug slot index number
 *  - physical/geographical location of the hardware
 *  - the interface's MAC address
 *
 * http://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames
 *
 * Two character prefixes based on the type of interface:
 *   en -- ethernet
 *   sl -- serial line IP (slip)
 *   wl -- wlan
 *   ww -- wwan
 *
 * Type of names:
 *   b&amp;lt;number&amp;gt;                             -- BCMA bus core number
 *   ccw&amp;lt;name&amp;gt;                             -- CCW bus group name
 *   o&amp;lt;index&amp;gt;[d&amp;lt;dev_port&amp;gt;]                 -- on-board device index number
 *   s&amp;lt;slot&amp;gt;[f&amp;lt;function&amp;gt;][d&amp;lt;dev_port&amp;gt;]     -- hotplug slot index number
 *   x&amp;lt;MAC&amp;gt;                                -- MAC address
 *   [P&amp;lt;domain&amp;gt;]p&amp;lt;bus&amp;gt;s&amp;lt;slot&amp;gt;[f&amp;lt;function&amp;gt;][d&amp;lt;dev_port&amp;gt;]
 *                                         -- PCI geographical location
 *   [P&amp;lt;domain&amp;gt;]p&amp;lt;bus&amp;gt;s&amp;lt;slot&amp;gt;[f&amp;lt;function&amp;gt;][u&amp;lt;port&amp;gt;][..][c&amp;lt;config&amp;gt;][i&amp;lt;interface&amp;gt;]
 *                                         -- USB port number chain&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;Voici donc la manière dont sont nommées nos interfaces. Les cartes
Ethernet commenceront toujours par &lt;em&gt;en&lt;/em&gt;, elles peuvent ensuite être
suivie d'un &lt;em&gt;p&lt;/em&gt; (pour port PCI), un &lt;em&gt;s&lt;/em&gt; (pour port PCI-E), un &lt;em&gt;o&lt;/em&gt; (pour
carte interne (onboard)). En descendant un peu dans le fichier, on
trouve des exemples à partir de la ligne 56.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="de-vrais-exemples"&gt;
&lt;h2&gt;De vrais exemples&lt;/h2&gt;
&lt;p&gt;Nous avons vu plus haut le nommage des interfaces PCI-E sur un serveur
OnMetal de chez Rackspace. Elles étaient nommées &lt;em&gt;ens9f0&lt;/em&gt; et &lt;em&gt;ens9f1&lt;/em&gt;.
Cela signifie qu'elles sont sur un port PCI-E qui se trouve être le port
numéro 9. Les indexes sont à 0 et 1 (pour les 2 ports Ethernet sur
l'Intel 82599ES).&lt;/p&gt;
&lt;section id="firewall-linux-avec-une-carte-pci-dual-port"&gt;
&lt;h3&gt;Firewall Linux avec une carte PCI dual-port.&lt;/h3&gt;
&lt;p&gt;Voici un exemple avec mon firewall Linux personnel. C'est un Dell
Optiplex 3020 avec une carte Intel I350-T2(dual-port):&lt;/p&gt;
&lt;pre&gt;# udevadm info -e | grep -A 10 ^P.*enp1s0f1
 P: /devices/pci0000:00/0000:00:01.0/0000:01:00.1/net/enp1s0f1
 E: DEVPATH=/devices/pci0000:00/0000:00:01.0/0000:01:00.1/net/enp1s0f1
 E: ID_BUS=pci
 E: ID_MODEL_FROM_DATABASE=I350 Gigabit Network Connection (Ethernet Server Adapter I350-T2)
 E: ID_MODEL_ID=0x1521
 E: ID_NET_DRIVER=igb
 E: ID_NET_LINK_FILE=/usr/lib/systemd/network/99-default.link
 E: ID_NET_NAME=enp1s0f1
 E: ID_NET_NAME_MAC=enxa0369f6e5227
 E: ID_NET_NAME_PATH=enp1s0f1
 E: ID_OUI_FROM_DATABASE=Intel Corporate&lt;/pre&gt;
&lt;p&gt;L'affichage de lspci:&lt;/p&gt;
&lt;pre&gt;# lspci -s 01:00
 01:00.0 Ethernet controller: Intel Corporation I350 Gigabit Network Connection (rev 01)
 01:00.1 Ethernet controller: Intel Corporation I350 Gigabit Network Connection (rev 01)&lt;/pre&gt;
&lt;p&gt;Cette carte est branchée sur le premier bus PCI (enp1), slot 0 (s0).
Comme c'est une carte dual-port, elle possède 2 indexes (f0 et f1). Cela
fait donc apparaître 2 noms prédictibles : &lt;em&gt;enp1s0f1&lt;/em&gt; et &lt;em&gt;enp1s0f0&lt;/em&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="serveur-1u-avec-4-ports-ethernet"&gt;
&lt;h3&gt;Serveur 1U avec 4 ports Ethernet.&lt;/h3&gt;
&lt;p&gt;Prenons un autre exemple. Voici un serveur SuperMicro X9SCA 1U avec 4
cartes Ethernet PCI internes.&lt;/p&gt;
&lt;pre&gt;# udevadm info -e | grep -A 10 ^P.*enp2s0
 P: /devices/pci0000:00/0000:00:1c.4/0000:02:00.0/net/enp2s0
 E: DEVPATH=/devices/pci0000:00/0000:00:1c.4/0000:02:00.0/net/enp2s0
 E: ID_BUS=pci
 E: ID_MODEL_FROM_DATABASE=82574L Gigabit Network Connection
 E: ID_MODEL_ID=0x10d3
 E: ID_NET_DRIVER=e1000e
 E: ID_NET_LINK_FILE=/usr/lib/systemd/network/99-default.link
 E: ID_NET_NAME=enp2s0
 E: ID_NET_NAME_MAC=enx00259025963a
 E: ID_NET_NAME_PATH=enp2s0
 E: ID_OUI_FROM_DATABASE=Super Micro Computer, Inc.&lt;/pre&gt;
&lt;p&gt;Voici les 4 cartes dans lspci&lt;/p&gt;
&lt;pre&gt;# for i in `seq 2 5`; do lspci -s 0${i}:; done
 02:00.0 Ethernet controller: Intel Corporation 82574L Gigabit Network Connection
 03:00.0 Ethernet controller: Intel Corporation 82574L Gigabit Network Connection
 04:00.0 Ethernet controller: Intel Corporation 82574L Gigabit Network Connection
 05:00.0 Ethernet controller: Intel Corporation 82574L Gigabit Network Connection&lt;/pre&gt;
&lt;p&gt;C'est assez intéressant car elles ne sont pas toutes sur le même bus
PCI. Elles se situent sur les bus 2 à 5 du slot 0. Il n'y a donc pas de
numéro d'index dans ce cas. Elles sont donc nommées de &lt;em&gt;enp2s0&lt;/em&gt; à
&lt;em&gt;enp5s0&lt;/em&gt;. Ce ne sont pas de vraies cartes internes, elles sont donc
nommées en fonction de leur localisation.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="serveur-de-stockage-avec-carte-ethernet-interne"&gt;
&lt;h3&gt;Serveur de stockage avec carte ethernet interne&lt;/h3&gt;
&lt;p&gt;Voici un exemple de serveur avec une vrai carte ethernet interne
(onboard):&lt;/p&gt;
&lt;pre&gt;$ udevadm info -e | grep -A 11 ^P.*eno1
 P: /devices/pci0000:00/0000:00:19.0/net/eno1
 E: DEVPATH=/devices/pci0000:00/0000:00:19.0/net/eno1
 E: ID_BUS=pci
 E: ID_MODEL_FROM_DATABASE=Ethernet Connection I217-V
 E: ID_MODEL_ID=0x153b
 E: ID_NET_DRIVER=e1000e
 E: ID_NET_LABEL_ONBOARD=en Onboard LAN
 E: ID_NET_LINK_FILE=/usr/lib/systemd/network/99-default.link
 E: ID_NET_NAME_MAC=enxe03f49b159c0
 E: ID_NET_NAME_ONBOARD=eno1
 E: ID_NET_NAME_PATH=enp0s25
 E: ID_OUI_FROM_DATABASE=ASUSTek COMPUTER INC.&lt;/pre&gt;
&lt;p&gt;L'affichage de lspci&lt;/p&gt;
&lt;pre&gt;$ lspci -s 00:19.0
 00:19.0 Ethernet controller: Intel Corporation Ethernet Connection I217-V (rev 05)&lt;/pre&gt;
&lt;p&gt;Cette carte a un nouveau type de nom dans udev :
ID_NET_NAME_ONBOARD. Le code de udev pour systemd a une prise en
charge spécifique des cartes internes car elles se situent en général
sur le bus principal. Le nommage peut devenir assez laid car le 19
devrait être converti en hexadécimal dans le nom.
|  Si systemd ne prenait pas en charge cette carte différemment, elle
aurait du être nommée &lt;em&gt;enp0s13&lt;/em&gt; (car 19 devient 13 en hexa). Cela peut
mener à des confusions.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="choix-du-nom-finale"&gt;
&lt;h2&gt;Choix du nom finale&lt;/h2&gt;
&lt;p&gt;Comme nous l'avons vu plus haut, udev contient une grande liste de nom
dans sa base. Cependant, il ne peut y avoir qu'un seul nom dans l'OS.
|  Retournons dans le code. Cette fois, jetons un oeil a
&lt;a href="https://github.com/systemd/systemd/blob/master/src/udev/net/link-config.c#L403"&gt;src/udev/net/link-config.c&lt;/a&gt;
à partir de la ligne 403:&lt;/p&gt;
&lt;pre class="code c"&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;enable_name_policy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name_policy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;NamePolicy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;policy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;

        &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;policy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name_policy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;new_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;policy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_NAMEPOLICY_INVALID&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;policy&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;policy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;NAMEPOLICY_KERNEL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
                                &lt;/span&gt;&lt;span class="n"&gt;respect_predictable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
                                &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;NAMEPOLICY_DATABASE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
                                &lt;/span&gt;&lt;span class="n"&gt;new_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;udev_device_get_property_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;s&gt;&amp;quot;ID_NET_NAME_FROM_DATABASE&amp;quot;&lt;/s&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
                                &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;NAMEPOLICY_ONBOARD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
                                &lt;/span&gt;&lt;span class="n"&gt;new_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;udev_device_get_property_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;s&gt;&amp;quot;ID_NET_NAME_ONBOARD&amp;quot;&lt;/s&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
                                &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;NAMEPOLICY_SLOT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
                                &lt;/span&gt;&lt;span class="n"&gt;new_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;udev_device_get_property_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;s&gt;&amp;quot;ID_NET_NAME_SLOT&amp;quot;&lt;/s&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
                                &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;NAMEPOLICY_PATH&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
                                &lt;/span&gt;&lt;span class="n"&gt;new_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;udev_device_get_property_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;s&gt;&amp;quot;ID_NET_NAME_PATH&amp;quot;&lt;/s&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
                                &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;NAMEPOLICY_MAC&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
                                &lt;/span&gt;&lt;span class="n"&gt;new_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;udev_device_get_property_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;s&gt;&amp;quot;ID_NET_NAME_MAC&amp;quot;&lt;/s&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
                                &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
                                &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;Si on regarde le case dans son ensemble, on voit que la première
correspondance est conservée et donne le nom à l'interface. En partant
du haut vers le bas, udev prend le premier de cette liste:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID_NET_NAME_FROM_DATABASE&lt;/li&gt;
&lt;li&gt;ID_NET_NAME_ONBOARD&lt;/li&gt;
&lt;li&gt;ID_NET_NAME_SLOT&lt;/li&gt;
&lt;li&gt;ID_NET_NAME_PATH&lt;/li&gt;
&lt;li&gt;ID_NET_NAME_MAC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Si on retourne sur le serveur OnMetal en haut de l'article, on peut
suivre cette logique. La base udev contient:&lt;/p&gt;
&lt;pre&gt;E: ID_NET_NAME_MAC=enxa0369f2cec90
E: ID_NET_NAME_PATH=enp8s0f0
E: ID_NET_NAME_SLOT=ens9f0&lt;/pre&gt;
&lt;p&gt;Le daemon udev commencerait par ID_NET_NAME_FROM_DATABASE, mais
cela n'existe pas pour cette carte. Il passe ensuite à
ID_NET_NAME_ONBOARD, qui n'est pas présent. Vient ensuite
ID_NET_NAME_SLOT, voilà la correspondance! L'entrée
ID_NET_NAME_SLOT contient &lt;em&gt;ens9f0&lt;/em&gt;, qui est donc le nom final de
l'interface réseau.
|  Cette boucle gère aussi quelques cas spéciaux. La première est de
vérifier si udev n'est pas configuré pour ne pas utiliser les noms
prédictible. Nous l'avions vu dans le post sur le&lt;a href="https://major.io/2015/08/21/using-systemd-networkd-with-bonding-on-rackspaces-onmetal-servers/"&gt;bonding avec
systemd-networkd&lt;/a&gt;
quand la configuration du bootloader contenait net.ifnames=0. Si cette
commande noyau est présente, les noms prédictibles ne sont pas utilisés.
|  Un autre cas spécial est ID_NET_NAME_FROM_DATABASE. Ces ports
viennent de la &lt;a href="https://github.com/systemd/systemd/blob/master/hwdb/20-net-ifname.hwdb"&gt;base de donnée matériel interne de
udev&lt;/a&gt;.
Ce fichier ne contient pour le moment qu'une seule entrée et c'est pour
une carte réseau particulière iDRAC de DELL.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="confondu-par-l-hexa"&gt;
&lt;h2&gt;Confondu par l'hexa&lt;/h2&gt;
&lt;p&gt;Si les numéros des ports PCI ne semblent pas se suivre, lisez mon
&lt;a href="https://major.io/2014/08/06/unexpected-predictable-network-naming-systemd/"&gt;post de l'été
dernier&lt;/a&gt;.
J'avais eu affaire à un serveur Dell particulier avec une carte Intel
dual-port sur le bus PCI 42. Le nom de l'interface était &lt;em&gt;enp66s0f0&lt;/em&gt; et
j'en étais resté perplexe.
|  Le nom &lt;em&gt;enp66s0f0&lt;/em&gt; semble signifier que nous avons une carte sur le
bus PCI 66, slot 0, avec de multiple fonction d'index. Cependant,
systemd fait une conversion des numéros de slot PCI en hexa. La décimal
42 devient donc 66 en hexa.
|  La plupart des serveurs n'auront pas cette complexité mais il est
important de se souvenir de la conversion en hexa.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="feedback"&gt;
&lt;h2&gt;Feedback&lt;/h2&gt;
&lt;p&gt;Ces articles sur systemd sont ils intéressant? Je suis un grand fan de
systemd et j'adore écrire à son sujet.&lt;/p&gt;
&lt;/section&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Vmware tools, Centos 7 et customisation</title><link href="https://blog.devarieux.net/2015/08/vmware-tools-centos-7-et-customisation.html" rel="alternate"></link><published>2015-08-14T22:39:00+02:00</published><updated>2015-08-14T22:39:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2015-08-14:/2015/08/vmware-tools-centos-7-et-customisation.html</id><summary type="html">&lt;p&gt;Depuis quelques temps, lorsqu'on souhaite déployer les VMware tools dans
une VM Centos 7 / RedHat 7, le script d'installation hurle de ne pas
utiliser le script perl fournit mais de passer plutôt par les
open-vm-tools qu'on peut directement trouvé dans le gestionnaire de
paquet.&lt;/p&gt;
&lt;pre&gt;yum install open-vm-tools&lt;/pre&gt;
&lt;p&gt;C'est simple, rapide …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Depuis quelques temps, lorsqu'on souhaite déployer les VMware tools dans
une VM Centos 7 / RedHat 7, le script d'installation hurle de ne pas
utiliser le script perl fournit mais de passer plutôt par les
open-vm-tools qu'on peut directement trouvé dans le gestionnaire de
paquet.&lt;/p&gt;
&lt;pre&gt;yum install open-vm-tools&lt;/pre&gt;
&lt;p&gt;C'est simple, rapide, ça facilite les mise à jour des tools et c'est
conseillé par VMware directement, il y a même &lt;a href="http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;amp;cmd=displayKC&amp;amp;externalId=2073803"&gt;un
KB&lt;/a&gt;
pour ça et &lt;a href="https://github.com/vmware/open-vm-tools"&gt;un projet
GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pour rappel, l'insallation des vm-tools permet d'accéder à ces
fonctionnalité vSphere :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Synchronisation de l'horloge de l'OS invité avec celle de la
plateforme de virtualisation&lt;/li&gt;
&lt;li&gt;Permet à l'hyperviseur de procéder à des appels système afin par
exemple de demander à l'OS de s'arréter.&lt;/li&gt;
&lt;li&gt;Support de vSphere High Availability (HA) grace à un système de
heartbeat.&lt;/li&gt;
&lt;li&gt;Permet à l'hyperviseur de récolter des informations sur la
consommation des ressources CPU, RAM, réseau.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dans cette liste, il manque tout de même un outil important. Si vous
clonez ou si vous créez un template à partir d'une VM ayant les
open-vm-tools, vous serez dans l'incapacité de customiser la nouvelle VM
à sa création. Exit donc le changement du mot de passe root et surtout
la configuration réseau. Cette fonctionnalité est apportée par un plugin
pour open-vm-tools nommé DeployPkg.&lt;/p&gt;
&lt;p&gt;La page &lt;a href="http://partnerweb.vmware.com/GOSIG/RHEL_7.html"&gt;Red Hat Enterprise Linux 7 Guest Operating System Installation
Guide&lt;/a&gt; mentionne bien
ce plugin mais il y manque certaines informations. La procédure complète
est mieux décrite dans la &lt;a href="http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;amp;cmd=displayKC&amp;amp;externalId=2075048"&gt;Knowledge Base de
VMware.&lt;/a&gt;Celle
ci consiste a récupérer les clés public du dépots VMware, importer les
clés, créer le fichier de repo pour yum et procéder enfin à
l'installation.&lt;/p&gt;
&lt;p&gt;Dans un premier temps, on récupère les clés ici
&lt;a class="m-link-wrap" href="http://packages.vmware.com/tools/keys"&gt;http://packages.vmware.com/tools/keys&lt;/a&gt; et on les place dans le répertoire
/tmp du serveur&lt;/p&gt;
&lt;p&gt;On importe les clés avec rpm&lt;/p&gt;
&lt;pre&gt;rpm --import /tmp/key1
rpm --import /tmp/key2&lt;/pre&gt;
&lt;p&gt;Création du fichier &lt;em&gt;/etc/yum.repos.d/vmware-tools.repo&lt;/em&gt; avec ce contenu
:&lt;/p&gt;
&lt;pre&gt;[vmware-tools]
name = VMware Tools
baseurl = http://packages.vmware.com/packages/rhel7/x86_64/
enabled = 1
gpgcheck = 1&lt;/pre&gt;
&lt;p&gt;Installation du paquet&lt;/p&gt;
&lt;pre&gt;yum install open-vm-tools-deploypkg&lt;/pre&gt;
&lt;p&gt;Installation de perl, nécessaire pour les scripts de customisation&lt;/p&gt;
&lt;pre&gt;yum install perl&lt;/pre&gt;
&lt;p&gt;On termine par le rechargement du service pour prendre en compte
l'installation du plugin&lt;/p&gt;
&lt;pre&gt;systemctl restart vmtoolsd&lt;/pre&gt;
&lt;p&gt;Vous pouvez maintenant transformer votre VM en template en toute
sérénité.&lt;/p&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Accéder en webdav à son fichier Keepass</title><link href="https://blog.devarieux.net/2014/09/acceder-en-webdav-a-son-fichier-keepass.html" rel="alternate"></link><published>2014-09-05T22:54:00+02:00</published><updated>2014-09-05T22:54:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2014-09-05:/2014/09/acceder-en-webdav-a-son-fichier-keepass.html</id><summary type="html">&lt;p&gt;Keepass est un gestionnaire de mot de passe que j'utilise
personnellement et professionnellement. Il permet notamment de partager
un coffre fort entre plusieurs personne en offrant un support pour ftp
et http/webdav. Certains plugins ajoutent le support sftp et ftps.&lt;/p&gt;
&lt;p&gt;Sur CentOS, apache est livré avec le module webdav …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Keepass est un gestionnaire de mot de passe que j'utilise
personnellement et professionnellement. Il permet notamment de partager
un coffre fort entre plusieurs personne en offrant un support pour ftp
et http/webdav. Certains plugins ajoutent le support sftp et ftps.&lt;/p&gt;
&lt;p&gt;Sur CentOS, apache est livré avec le module webdav. Ce n'est pas
forcement le cas de toutes les distributions.&lt;/p&gt;
&lt;p&gt;La configuration utilisée est la suivante :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un sous domaine créé pour contenir le fichier kdbx&lt;/li&gt;
&lt;li&gt;une protection par mot de passe pour l'accès au fichier en lui même
(anciennement .htaccess)&lt;/li&gt;
&lt;li&gt;L'autorisation d'accéder au sous domaine en webdav&lt;/li&gt;
&lt;li&gt;Et enfin, un mot de passe &lt;strong&gt;ultra solide&lt;/strong&gt; pour le fichier kdbx qui
peut contenir des données sensibles.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dans mon cas, j'ai utilisé un sous domaine du type keepass.domain.tld et
le fichier est stocké en local sur le serveur sous /var/www/keepass/&lt;/p&gt;
&lt;pre&gt;root# mkdir /var/www/keepass
root# chown apache. /var/www/keepass
root# chmod 770 /var/www/keepass
root# vim /etc/httpd/conf.d/keepass.conf&lt;/pre&gt;
&lt;p&gt;Pour ne pas que le mot de passe passe en clair sur le net, nous allons
forcer l'utilisation de https&lt;/p&gt;
&lt;pre&gt;&amp;lt;VirtualHost *:80&amp;gt;
 ServerName keepass.domain.tld
 ServerAdmin admin&amp;#64;domain.tld
 Redirect permanent / https://keepass.domain.tld/
 ErrorLog /var/log/httpd/keepass.err
 CustomLog /var/log/httpd/keepass.log combined
 DocumentRoot /var/www/keepass
&amp;lt;/VirtualHost&amp;gt;
&amp;lt;VirtualHost *:443&amp;gt;
 SSLEngine on
 SSLCertificateFile /etc/pki/tls/certs/ca.crt
 SSLCertificateKeyFile /etc/pki/tls/private/ca.key
 ServerName keepass.domain.tld
 ServerAdmin admin&amp;#64;domain.tld
 ErrorLog /var/log/httpd/keepass.err
 CustomLog /var/log/httpd/keepass.log combined
 DocumentRoot /var/www/keepass
&amp;lt;Directory &amp;quot;/var/www/keepass&amp;quot;&amp;gt;
 DAV On
 SSLRequireSSL
 Options None
 AuthType Basic
 AuthName WebDAV
 AuthUserFile /etc/httpd/conf/.htpasswd
 &amp;lt;LimitExcept GET OPTIONS&amp;gt;
 Order allow,deny
 Allow from X.X.X.X #IP que vous autorisez, 'all' pour tout le monde
 Require valid-user
 &amp;lt;/LimitExcept&amp;gt;
&amp;lt;/Directory&amp;gt;
&amp;lt;/VirtualHost&amp;gt;&lt;/pre&gt;
&lt;p&gt;Voici les étapes pour la création du fichier .htpasswd&lt;/p&gt;
&lt;pre&gt;root# htpasswd -c /etc/httpd/conf/.htpasswd NomUtilisateur
root# /etc/init.d/httpd restart&lt;/pre&gt;
&lt;p&gt;Il ne reste plus qu'à placer le fichier kdbx dans /var/www/keepass et
donner à apache les droits en écriture sur ce fichier.&lt;/p&gt;
&lt;p&gt;Enfin, dans Keepass en ouvrant une url, le logiciel demande de fournir
l'URL et si besoin un couple login/mdp.&lt;/p&gt;
&lt;p&gt;L'URL sera de type &lt;a class="m-link-wrap" href="https://keepass.domain.tld/fichier.kdbx"&gt;https://keepass.domain.tld/fichier.kdbx&lt;/a&gt; et le couple
login/mdp est celui créé lors de l’exécution de la commande htpasswd&lt;/p&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Bash : Script de sauvegarde</title><link href="https://blog.devarieux.net/2014/07/bash-script-de-sauvegarde.html" rel="alternate"></link><published>2014-07-24T11:14:00+02:00</published><updated>2014-07-24T11:14:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2014-07-24:/2014/07/bash-script-de-sauvegarde.html</id><summary type="html">&lt;p&gt;On ne le dira jamais assez : &lt;strong&gt;FAITES DES SAUVEGARDES!!!!!&lt;/strong&gt;
Ayant un petit serveur dédié sous CentOS, j'ai évidemment appliqué
cet adage à moi même. Je vous présente donc un script duquel vous pouvez
librement vous inspirer afin de l'adapter à votre environnement.
Ce script place quelques répertoires et quelques exports …&lt;/p&gt;</summary><content type="html">&lt;p&gt;On ne le dira jamais assez : &lt;strong&gt;FAITES DES SAUVEGARDES!!!!!&lt;/strong&gt;
Ayant un petit serveur dédié sous CentOS, j'ai évidemment appliqué
cet adage à moi même. Je vous présente donc un script duquel vous pouvez
librement vous inspirer afin de l'adapter à votre environnement.
Ce script place quelques répertoires et quelques exports de base de
données dans un fichier tar.gz puis envoie ce fichier sur 2 serveurs FTP
(ceinture + bretelles) et enfin déplace l'archive dans un répertoire de
&lt;a href="http://pyd.io"&gt;pydio&lt;/a&gt; afin de pouvoir facilement récupérer le
fichier sur ma machine personnelle.&lt;/p&gt;
&lt;pre&gt;#!/bin/bash
#Fichier de Backup créé par Alain Devarieux
# - créer un fichier tar.gz contenant plusieurs élements de l'arborescence
# - Envoie ce fichier tar.gz sur un serveur FTP dédié au backup
# - Dépose une copie du fichier tar.gz dans un repertoire local
# - Ceinture ET Bretelles : Envoie le fichier tar.gz sur un 2nd serveur FTP
logger -t backup &amp;quot;########## Debut de la sauvegarde ##########&amp;quot;
# Nom du fichier de Backup
backup_file=&amp;quot;/sauv/backup-$(hostname)-$(date +%Y-%m-%d).tar.gz&amp;quot;
#Variable : Premier Serveur FTP de Backup
bckftp01=&amp;quot;server01&amp;quot;
bckftp01_user=&amp;quot;user01&amp;quot;
bckftp01_mdp=&amp;quot;Enter password here&amp;quot;
#Variable : Second Serveur de Backup
bckftp02=&amp;quot;server02&amp;quot;
bckftp02_user=&amp;quot;user02&amp;quot;
bckftp02_mdp=&amp;quot;Enter password here&amp;quot;
#Varibales : Dossier de destination du tar.gz en local
destdir=&amp;quot;/var/www/html/pydio/data/files/&amp;quot;
#Liste des dossiers à sauvegarder
backup_list=&amp;quot;/etc /var/www/html /sauv/sql /sauv/packagelist.txt&amp;quot;
#Le dossier a exclure
backup_exclude=&amp;quot;/var/www/html/pydio/data&amp;quot;

#Liste des paquets installés
rpm -qa &amp;gt; /sauv/packagelist.txt

#Dump des bases SQL
#Base01
if ! mysqldump -u userbase01 -pPassword base01 &amp;gt; /sauv/sql/base01.sql; then
statusbase01=&amp;quot;Warning : Erreur lors de l'export de la base Base01&amp;quot;
else
statusbase01=&amp;quot;Succes de l'export de la base Base01&amp;quot;
fi
logger -t backup &amp;quot;$statusbase01&amp;quot;
#Base02
if ! mysqldump -u userbase02 -pPassword Base02 &amp;gt; /sauv/sql/base02.sql; then
statusbase02=&amp;quot;Warning : Erreur lors de l'export de la base Base02&amp;quot;
else
statusbase02=&amp;quot;Succes de l'export de la base Base02&amp;quot;
fi
logger -t backup &amp;quot;$statusbase02&amp;quot;

#Creation du tar
#On commence par enregistrer la seconde de debut
start=$(date '+%s')
if ! tar czf $backup_file --exclude=$backup_exclude $backup_list; then
statustar=&amp;quot;echec de la commande tar&amp;quot; || exit 1
else
statustar=&amp;quot;Succes creation fichier tar taille=$(stat -c%s $backup_file) duree=$((`date '+%s'` - $start))&amp;quot;
fi
#On log le resultat
logger -t backup &amp;quot;$statustar&amp;quot;

#Envoie vers le ftp01
if ! lftp $bckftp01_user:$bckftp01_mdp&amp;#64;$bckftp01 -e &amp;quot;put $backup_file; exit&amp;quot;; then
statusftp01=&amp;quot;Echec de l'envoie FTP vers $bckftp01&amp;quot;
else
statusftp01=&amp;quot;Succes de l'envoie FTP vers $bckftp01&amp;quot;
fi
#On log le resultat
logger -t backup &amp;quot;$statusftp01&amp;quot;

#Envoie vers le ftp02
if ! lftp $bckftp02_user:$bckftp02_mdp&amp;#64;$bckftp02 -e &amp;quot;put $backup_file; exit&amp;quot;; then
statusftp02=&amp;quot;Echec de l'envoie FTP vers $bckftp02&amp;quot;
else
statusftp02=&amp;quot;Succes de l'envoie FTP vers $bckftp02&amp;quot;
fi
#On log le resultat
logger -t backup &amp;quot;$statusftp02&amp;quot;

#Deplacer le fichier dans pydio
if ! mv $backup_file $destdir; then
statusmv=&amp;quot;Warning : Echec du déplacement de $backup_file dans Pydio&amp;quot;
else
statusmv=&amp;quot;Fichier $backup_file déplacé dans Pydio&amp;quot;
fi
logger -t backup &amp;quot;$statusmv&amp;quot;
logger -t backup &amp;quot;########## Fin de la sauvegarde ##########&amp;quot;
exit 0&lt;/pre&gt;
&lt;p&gt;Le script est planifié pour être lancé tous les dimanche à 5h00.
J'ai écris un 2nd script qui m'envoie un email avec les logs de la
sauvegarde afin que je puisse surveillé que tout c'est bien passé&lt;/p&gt;
&lt;pre&gt;#!/bin/bash
#Envoie d'un mail suite à l'execution du script de sauvegarde
datejour=$(LC_ALL=&amp;quot;en_EN.UTF-8&amp;quot; date &amp;quot;+%b %d&amp;quot;)
grep backup /var/log/messages |grep &amp;quot;$datejour&amp;quot; | mail -s &amp;quot;Backup du mois de $(date &amp;quot;+%B&amp;quot;)&amp;quot; adresse&amp;#64;email.com adresse2&amp;#64;email.com&lt;/pre&gt;
&lt;p&gt;Petite explication sur le LC_ALL=&amp;quot;en_EN.UTF-8&amp;quot;
Lorsque je tape&lt;/p&gt;
&lt;pre&gt;date &amp;quot;+%b&amp;quot;&lt;/pre&gt;
&lt;p&gt;J'obtiens la version courte et francisée du mois. Par exemple, pour le
mois de juillet, je vais avoir comme retour &lt;em&gt;juil&lt;/em&gt;. Hors syslog lui
écris dans le fichier &lt;em&gt;/var/log/messages&lt;/em&gt; en anglais. Ce qui donne pour
le mois de juillet : &lt;em&gt;jul&lt;/em&gt; pour &lt;em&gt;july.&lt;/em&gt; Pour pouvoir réussir mon grep
dans mon fichier de log, j'ai besoin de que la commande &lt;em&gt;date&lt;/em&gt; me
retourne les informations en anglais également. C'est ce qui explique le
positionnement de cette variable en amont.&lt;/p&gt;
&lt;p&gt;Ce second script est également placé dans un cron et est lancé a 5h15
tous les dimanches.&lt;/p&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Veille Open Source pour les pros</title><link href="https://blog.devarieux.net/2013/12/veille-open-source-pour-les-pros.html" rel="alternate"></link><published>2013-12-18T18:48:00+01:00</published><updated>2013-12-18T18:48:00+01:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2013-12-18:/2013/12/veille-open-source-pour-les-pros.html</id><summary type="html">&lt;p&gt;Cela fait quelques temps que je suis ce site, édité par
&lt;a href="http://www.smile.fr/"&gt;smile&lt;/a&gt; (dont je vous conseil les livres
blancs), et je n'en ai pas beaucoup parlé autour de moi. Ajouté
récemment dans les flux RSS, il me permet de suivre l'actualité des
solutions open source professionnelles facilement.&lt;/p&gt;
&lt;p&gt;Ce site,
c'est …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cela fait quelques temps que je suis ce site, édité par
&lt;a href="http://www.smile.fr/"&gt;smile&lt;/a&gt; (dont je vous conseil les livres
blancs), et je n'en ai pas beaucoup parlé autour de moi. Ajouté
récemment dans les flux RSS, il me permet de suivre l'actualité des
solutions open source professionnelles facilement.&lt;/p&gt;
&lt;p&gt;Ce site,
c'est &lt;a href="http://www.open-source-guide.com/"&gt;open-source-guide.com&lt;/a&gt;,
disponible également en &lt;a href="http://www.open-source-guide.com/en"&gt;version
anglaise&lt;/a&gt;. Il m'a permis de
découvrir plusieurs solutions open source dont je ne connaissais pas
l'existence. Un système de double notation permet de se rendre
rapidement compte de la fiabilité des produits (note smile et note des
utilisateurs).&lt;/p&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Owncloud et fail2ban derrière un reverse proxy</title><link href="https://blog.devarieux.net/2013/12/owncloud-et-fail2ban-derriere-un-reverse-proxy.html" rel="alternate"></link><published>2013-12-05T18:32:00+01:00</published><updated>2013-12-05T18:32:00+01:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2013-12-05:/2013/12/owncloud-et-fail2ban-derriere-un-reverse-proxy.html</id><summary type="html">&lt;p&gt;Dans le &lt;a href="/mise-en-oeuvre-de-fail2ban-pour-owncloudldap.html"&gt;dernier
article&lt;/a&gt;,
j'expliquais comment mettre en place fail2ban sur son serveur pour
protéger son instance Owncloud lorsqu'elle est connectée sur un serveur
Ldap.&lt;/p&gt;
&lt;p&gt;En général, lorsqu'on utilise un serveur Ldap pour l'authentification,
c'est qu'on se trouve en entreprise et les choses ne sont pas alors pas
si simple …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Dans le &lt;a href="/mise-en-oeuvre-de-fail2ban-pour-owncloudldap.html"&gt;dernier
article&lt;/a&gt;,
j'expliquais comment mettre en place fail2ban sur son serveur pour
protéger son instance Owncloud lorsqu'elle est connectée sur un serveur
Ldap.&lt;/p&gt;
&lt;p&gt;En général, lorsqu'on utilise un serveur Ldap pour l'authentification,
c'est qu'on se trouve en entreprise et les choses ne sont pas alors pas
si simple. Par exemple, dans mon cas, le serveur owncloud ne se trouve
pas directement en frontale sur le net mais est caché derrière un
reverse proxy.&lt;/p&gt;
&lt;p&gt;Du coup, le serveur owncloud ne voit qu'une seule IP : celle du reverse
proxy. La mise en place de fail2ban sur ce serveur poserait alors un
gros problème car cela reviendrait à faire bannir l'IP du reverse proxy
et interdire tout accès à owncloud depuis l’extérieur. Dans cet article,
nous allons donc voir comment corriger ce problème à l'aide de syslog.&lt;/p&gt;
&lt;section id="sur-le-serveur-owncloud"&gt;
&lt;h2&gt;Sur le serveur Owncloud&lt;/h2&gt;
&lt;section id="modification-d-owncloud"&gt;
&lt;h3&gt;Modification d'owncloud&lt;/h3&gt;
&lt;section id="configuration-du-serveur-owncloud"&gt;
&lt;h4&gt;Configuration du serveur owncloud&lt;/h4&gt;
&lt;p&gt;Afin d’assurer une cohérence dans l’écriture des logs, il faut que la
timezone soit correctement configurée sur le serveur.&lt;/p&gt;
&lt;pre&gt;[root&amp;#64;owncloud]# tzselect&lt;/pre&gt;
&lt;p&gt;Création du fichier qui recevra les écritures des logs des échecs de
connexions :&lt;/p&gt;
&lt;pre&gt;[root&amp;#64;owncloud]# touch /var/log/owncloud-fail.log
[root&amp;#64;owncloud]# chmod 660 /var/log/owncloud-fail.log
[root&amp;#64;owncloud]# chown root.apache /var/log/owncloud-fail.log&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="modification-du-backend-d-owncloud"&gt;
&lt;h4&gt;Modification du backend d'owncloud&lt;/h4&gt;
&lt;p&gt;Dans le fichier &lt;em&gt;/var/www/html/owncloud/lib/user/database.php&lt;/em&gt;, ligne
1.   Dans la fonction &lt;strong&gt;checkPassword&lt;/strong&gt;, entre le else et le return
false, insérez le code suivant :&lt;/p&gt;
&lt;pre&gt;$headers = apache_request_headers();
$real_client_ip = $headers[&amp;quot;X-Forwarded-for&amp;quot;];
$IPClient=$_SERVER['REMOTE_ADDR'];
openlog(&amp;quot;owncloud&amp;quot;, LOG_PID, LOG_LOCAL0);
syslog(LOG_WARNING, &amp;quot;Password check failed for: &amp;quot; . &amp;quot;$IPClient&amp;quot; . &amp;quot; &amp;quot; . &amp;quot;$real_client_ip&amp;quot;);
closelog();&lt;/pre&gt;
&lt;p&gt;Dans le fichier &lt;em&gt;/var/www/html/owncloud/apps/user_ldap/user_ldap.php&lt;/em&gt;,
ligne 75. Dans la fonction &lt;strong&gt;checkPassword&lt;/strong&gt;, entre le
if(count($ldap_users) &amp;lt; 1) { et le return false; insérez le code
suivant :&lt;/p&gt;
&lt;pre&gt;if($uid!=&amp;quot;admin&amp;quot;) {
$headers = apache_request_headers();
$real_client_ip = $headers[&amp;quot;X-Forwarded-For&amp;quot;];
$IPClient=$_SERVER['REMOTE_ADDR'];
openlog(&amp;quot;owncloud&amp;quot;, LOG_PID, LOG_LOCAL0);
syslog(LOG_WARNING, &amp;quot;Password check failed for: &amp;quot; . &amp;quot;$IPClient&amp;quot; . &amp;quot; &amp;quot; . &amp;quot;$real_client_ip&amp;quot;);
closelog();&lt;/pre&gt;
&lt;p&gt;Puis, en dessous du return false, fermez l’instruction if en ajoutant un&lt;/p&gt;
&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Toujours dans le même fichier, ligne 97, juste après
&lt;strong&gt;if(!$this→areCredentialsValid($dn, $password)) {&lt;/strong&gt; Et au-dessus du
&lt;strong&gt;return false;&lt;/strong&gt; correspondant ajouter le code suivant :&lt;/p&gt;
&lt;pre&gt;$headers = apache_request_headers();
$real_client_ip = $headers[&amp;quot;X-Forwarded-For&amp;quot;];
$IPClient=$_SERVER['REMOTE_ADDR'];
openlog(&amp;quot;owncloud&amp;quot;, LOG_PID, LOG_LOCAL0);
syslog(LOG_WARNING, &amp;quot;Password check failed for: &amp;quot; . &amp;quot;$IPClient&amp;quot; . &amp;quot; &amp;quot; . &amp;quot;$real_client_ip&amp;quot;);
closelog();&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="explication-du-code"&gt;
&lt;h4&gt;Explication du code&lt;/h4&gt;
&lt;pre&gt;$headers = apache_request_headers()&lt;/pre&gt;
&lt;p&gt;Récupère l’entête des requêtes http venant du reverse proxy sous forme
de tableau&lt;/p&gt;
&lt;pre&gt;$real_client_ip = $headers[ &amp;quot;X-forwarded-For &amp;quot;] ;&lt;/pre&gt;
&lt;p&gt;Récupère l’adresse IP réelle du client dans le tableau $headers&lt;/p&gt;
&lt;pre&gt;$IPClient = $_SERVER[‘REMOTE_ADDR’] ;&lt;/pre&gt;
&lt;p&gt;Récupère l’adresse IP du client. Si le client vient de l’extérieur du
SIB, cette IP sera celle du reverse proxy.&lt;/p&gt;
&lt;p&gt;Openlog, Syslog et closelog sont les fonctions PHP pour écrire les
échecs de connexions en passant par syslog.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="configuration-de-rsyslog"&gt;
&lt;h3&gt;Configuration de rsyslog&lt;/h3&gt;
&lt;section id="log-locaux"&gt;
&lt;h4&gt;Log locaux&lt;/h4&gt;
&lt;p&gt;Pour loguer les échecs de connexion venant d’owncloud, il faut dire à
rsyslog ce qu’il doit faire avec ces entrées. On crée pour cela un
fichier supplémentaire &lt;em&gt;/etc/rsyslog.d/owncloud.conf&lt;/em&gt; contenant une
seule ligne :&lt;/p&gt;
&lt;pre&gt;local0.*   /var/log/owncloud-fail.log&lt;/pre&gt;
&lt;p&gt;Ainsi, tous les messages reçus sur l’interface LOCAL0 de rsyslog seront
redirigé vers le fichier &lt;em&gt;/var/log/owncloud-fail.log&lt;/em&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section id="log-distant"&gt;
&lt;h4&gt;Log distant&lt;/h4&gt;
&lt;p&gt;Le serveur owncloud ne peut pas bannir lui-même les IP car il ne voit
que l’IP du reverse proxy pour toutes les connexions venant de
l’extérieur. Il faut donc remonter les logs des échecs de connexions
vers le reverse proxy qui bannira lui-même les IP. On crée pour cela un
nouveau fichier de configuration de rsyslog :
&lt;em&gt;/etc/rsyslog.d/fail2ban.conf&lt;/em&gt;.&lt;/p&gt;
&lt;pre&gt;local0.*        &amp;#64;nomdevotrereverse.proxy:514&lt;/pre&gt;
&lt;p&gt;Ceci a pour effet d’envoyer tous les messages reçu sur l’interface
LOCAL0 de rsyslog vers le service syslog du reverse proxy.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="prise-en-compte-des-modifications"&gt;
&lt;h3&gt;Prise en compte des modifications&lt;/h3&gt;
&lt;p&gt;On redémarre le service rsyslog&lt;/p&gt;
&lt;pre&gt;/etc/init.d/rsyslog restart&lt;/pre&gt;
&lt;p&gt;Afin de voir si les modifications effectuées n’ont pas générée d’erreur
:&lt;/p&gt;
&lt;pre&gt;grep rsyslog /var/log/messages&lt;/pre&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="sur-le-reverse-proxy"&gt;
&lt;h2&gt;Sur le reverse proxy&lt;/h2&gt;
&lt;section id="configuration-de-syslog"&gt;
&lt;h3&gt;Configuration de syslog&lt;/h3&gt;
&lt;p&gt;Par défaut, le service syslog n’écoute pas le réseau et ne peut donc pas
recevoir de logs distants. Pour corriger cela, on édite le fichier
&lt;em&gt;/etc/sysconfig/syslog&lt;/em&gt;. Modification de la ligne SYSLOGD_OPTIONS en
ajoutant l’option –r&lt;/p&gt;
&lt;pre&gt;SYSLOGD_OPTIONS=&amp;quot;-r -m 0&amp;quot;&lt;/pre&gt;
&lt;p&gt;Puis, on relance le service afin d’activer l’écoute réseau :&lt;/p&gt;
&lt;pre&gt;/etc/init.d/syslog restart&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="configuration-de-fail2ban"&gt;
&lt;h3&gt;Configuration de fail2ban&lt;/h3&gt;
&lt;section id="installation"&gt;
&lt;h4&gt;Installation&lt;/h4&gt;
&lt;p&gt;L’installation se fait simplement par le gestionnaire de paquet :&lt;/p&gt;
&lt;pre&gt;yum install fail2ban&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="configuration-de-la-prison"&gt;
&lt;h4&gt;Configuration de la prison&lt;/h4&gt;
&lt;p&gt;On édite pour cela le fichier &lt;em&gt;/etc/fail2ban/jail.conf&lt;/em&gt; et on y ajoute
les lignes suivantes :&lt;/p&gt;
&lt;pre&gt;[owncloud]
enabled = true
port = https
filter = owncloud
action = iptables[name=httpd,port=https,protocal=all]
logpath = /var/log/messages
maxretry = 5&lt;/pre&gt;
&lt;p&gt;Toutes les autres prisons peuvent être positionnées sur enabled = false
puisque nous n’en avons pas besoin ici.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="creation-du-filtre"&gt;
&lt;h4&gt;Création du filtre&lt;/h4&gt;
&lt;p&gt;Dans la configuration du jail, nous avons dit à fail2ban d’utiliser le
filtre owncloud, nous allons maintenant créer le filtre :&lt;/p&gt;
&lt;p&gt;Création du fichier &lt;em&gt;/etc/fail2ban/filter.d/owncloud.conf&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;[Definition]
failregex = Password check failed for: ip.du.reverse.proxy &amp;lt;HOST&amp;gt;
ignoreregex =&lt;/pre&gt;
&lt;p&gt;Puisque nous ne souhaitons que bannir les IP externes, nous ne
récupérons que les lignes qui contiennent l’IP du reverse proxy ET l’IP
réelle du client. Le ligne ignoreregex n’est pas nécessaire mais il faut
tout de même qu’elle soit présente afin que fail2ban valide la
configuration.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="demarrage-du-service"&gt;
&lt;h4&gt;Démarrage du service&lt;/h4&gt;
&lt;p&gt;On lance le service fail2ban :&lt;/p&gt;
&lt;pre&gt;/etc/init.d/fail2ban start&lt;/pre&gt;
&lt;p&gt;Si le lancement tombe en échec, c’est qu’il y a un problème de
configuration. Pour repérer ce problème, il faut lancer le daemon à la
main :&lt;/p&gt;
&lt;pre&gt;fail2ban-server&lt;/pre&gt;
&lt;p&gt;Puis on lance un reload du client qui va tester pour nous la
configuration&lt;/p&gt;
&lt;pre&gt;fail2ban-client reload&lt;/pre&gt;
&lt;p&gt;S’il y a une erreur, cette commande nous le dira.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="test-de-la-configuration"&gt;
&lt;h4&gt;Test de la configuration&lt;/h4&gt;
&lt;p&gt;Afin de tester la valididité de la regex, fail2ban propose l’outil
fail2ban-regex. Créer pour cela quelques échecs de connexion et tester
avec la commande :&lt;/p&gt;
&lt;pre&gt;fail2ban-regex /var/log/messages /etc/fail2ban/filter.d/owncloud.conf&lt;/pre&gt;
&lt;pre&gt;Running tests
=============
Use regex file : /etc/fail2ban/filter.d/owncloud.conf
Use log file   : /var/log/messages

Results
=======
Failregex
|- Regular expressions:
|  [1] Password check failed for: ip.du.reverse.proxy &amp;lt;HOST&amp;gt;
|
`- Number of matches:
   [1] 6 match(es)

Ignoreregex
|- Regular expressions:
|
`- Number of matches:

Summary
=======

Addresses found:
[1]
    X.X.X.X (Thu Dec 05 10:02:11 2013)
    X.X.X.X (Thu Dec 05 10:05:24 2013)
    X.X.X.X (Thu Dec 05 10:05:34 2013)
    X.X.X.X (Thu Dec 05 10:05:42 2013)
    X.X.X.X (Thu Dec 05 10:05:47 2013)
    X.X.X.X (Thu Dec 05 10:05:53 2013)

Date template hits:
18154 hit(s): MONTH Day Hour:Minute:Second

Success, the total number of match is 6
However, look at the above section 'Running tests' which could contain important info&lt;/pre&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;/section&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Mise en oeuvre de Fail2Ban pour Owncloud/Ldap</title><link href="https://blog.devarieux.net/2013/11/mise-en-oeuvre-de-fail2ban-pour-owncloudldap.html" rel="alternate"></link><published>2013-11-27T20:30:00+01:00</published><updated>2013-11-27T20:30:00+01:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2013-11-27:/2013/11/mise-en-oeuvre-de-fail2ban-pour-owncloudldap.html</id><summary type="html">&lt;p&gt;Si vous stockez des données personnelles ou à caractères sensibles sur
votre serveur owncloud, vous souhaitez sans doute que les malandrins
s'aventurant à tester vos couples &lt;em&gt;Login / Mot de passe&lt;/em&gt; par brutforce
soient éjectés de votre serveur après un certains nombre de tentatives
infructueuses.&lt;/p&gt;
&lt;p&gt;Fail2Ban fera le travail pour vous …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Si vous stockez des données personnelles ou à caractères sensibles sur
votre serveur owncloud, vous souhaitez sans doute que les malandrins
s'aventurant à tester vos couples &lt;em&gt;Login / Mot de passe&lt;/em&gt; par brutforce
soient éjectés de votre serveur après un certains nombre de tentatives
infructueuses.&lt;/p&gt;
&lt;p&gt;Fail2Ban fera le travail pour vous, mais pour cela, il a besoin que les
échecs de connexions soient logués, ce qu'Owncloud ne fait
malheureusement pas. Il faut donc, avant de mettre en oeuvre Fail2Ban,
procéder à quelques modifications dans le code d'Owncloud.&lt;/p&gt;
&lt;p&gt;Vous trouverez beaucoup d'article vous expliquant comment faire cela
avec une connexion classique via la base de donnée d'Owncloud, par
exemple
&lt;a href="http://www.dataparadis.net/osp/gnu-linux-server/cloud-server/owncloud-and-fail2ban-update/"&gt;ici&lt;/a&gt;.
Dans cet article, nous verrons plutôt comment régler le problème
lorsqu'on utilise une authentification via un serveur Ldap.&lt;/p&gt;
&lt;section id="preparer-le-terrain"&gt;
&lt;h2&gt;Préparer le terrain&lt;/h2&gt;
&lt;p&gt;Afin d'assurer une cohérence dans l'écriture des logs, il faut que la
timezone soit correctement configurée sur le serveur. Vous pouvez faire
cela à l'aide de la commande :&lt;/p&gt;
&lt;pre&gt;[root&amp;#64;server1]# tzselect&lt;/pre&gt;
&lt;p&gt;On va ensuite, créer le fichier qui servira à loguer les échecs de
connexions&lt;/p&gt;
&lt;pre&gt;[root&amp;#64;server1]# touch /var/log/owncloud-fail.log
[root&amp;#64;server1]# chmod 660 /var/log/owncloud-fail.log
[root&amp;#64;server1]# chown root.apache /var/log/owncloud-fail.log&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="modification-du-backend-d-owncloud"&gt;
&lt;h2&gt;Modification du backend d'Owncloud&lt;/h2&gt;
&lt;p&gt;Dans le fichier lib/user/database.php, ligne 202. Dans la fonction
checkPassword, entre le &lt;strong&gt;else&lt;/strong&gt; et le &lt;strong&gt;return false&lt;/strong&gt;, insérez le code
suivant :&lt;/p&gt;
&lt;pre&gt;$today = new DateTime();
date_timezone_set($today, timezone_open('Europe/Paris'));
$IPClient=$_SERVER['REMOTE_ADDR'];
$logAuth=fopen('/var/log/owncloud-fail.log', 'a+');
fputs($logAuth, date_format($today, 'Y/m/d H:i:s') . &amp;quot; Password check failed for: \t&amp;quot; . $IPClient . &amp;quot;\n&amp;quot;);
fclose($logAuth);&lt;/pre&gt;
&lt;p&gt;Dans le fichier apps/user_ldap/user_ldap.php, ligne 75. Dans la
fonction checkPassword, entre le  &lt;strong&gt;if(count($ldap_users) &amp;lt; 1)
{&lt;/strong&gt; et le  &lt;strong&gt;return false;&lt;/strong&gt; insérez le code suivant :&lt;/p&gt;
&lt;pre&gt;if($uid!=&amp;quot;admin&amp;quot;) {
date_default_timezone_set('Europe/Paris');
$today = date(&amp;quot;Y/m/d H:i:s&amp;quot;);
$IPClient=$_SERVER['REMOTE_ADDR'];
$logAuth=fopen('/var/log/owncloud-fail.log', 'a+');
fputs($logAuth, $today . &amp;quot; Password check failed for: \t&amp;quot; . $IPClient . &amp;quot;\n&amp;quot;);
fclose($logAuth);&lt;/pre&gt;
&lt;p&gt;Puis, en dessous du return false, fermez l'instruction if en ajoutant un&lt;/p&gt;
&lt;pre&gt;}&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Explication du code :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Il y a un utilisateur qui est inscrit en base de donnée et qui n'est pas
dans le ldap, c'est l'admin d'owncloud. Afin ne ne pas loguer une
connexion de l'utilisateur 'admin' en tant qu'erreur de connexion, il
est nécessaire de vérifier que que c'est pas cet utilisateur qui se
connecte. D'où le &lt;strong&gt;if($uid!=&amp;quot;admin&amp;quot;){}&lt;/strong&gt;. Veillez à modifier cette
valeur suivant la votre.&lt;/p&gt;
&lt;p&gt;La variable &lt;strong&gt;$ldap_users&lt;/strong&gt; est un tableau contenant la liste des
utilisateurs qui correspondent à la valeur saisie dans le login. Si
cette table est vide, alors il y aura un échec de connexion logué.&lt;/p&gt;
&lt;p&gt;Le dernier ajout à faire se trouve un petit peu plus bas dans ce
fichier, ligne 97, juste en dessous
de &lt;strong&gt;if(!$this-&amp;gt;areCredentialsValid($dn, $password)) {&lt;/strong&gt; et au dessus
de &lt;strong&gt;return false;&lt;/strong&gt;ajoutez le code suivant :&lt;/p&gt;
&lt;pre&gt;date_default_timezone_set('Europe/Paris');
$today = date(&amp;quot;Y/m/d H:i:s&amp;quot;);
$IPClient=$_SERVER['REMOTE_ADDR'];
$logAuth=fopen('/var/log/owncloud-fail.log', 'a+');
fputs($logAuth, $today . &amp;quot; Password check failed for: \t&amp;quot; . $IPClient . &amp;quot;\n&amp;quot;);
fclose($logAuth);&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="configuration-de-fail2ban"&gt;
&lt;h2&gt;Configuration de Fail2Ban&lt;/h2&gt;
&lt;p&gt;Dans votre fichier /etc/fail2ban/jail.conf (ou équivalent suivant votre
distribution) :&lt;/p&gt;
&lt;pre&gt;[Owncloud]
enabled  = true
port     = http,https
filter   = owncloud
logpath  = /var/log/owncloud-fail.log
maxretry = 5&lt;/pre&gt;
&lt;p&gt;Et enfin, le fichier de filtre /etc/fail2ban/filter.d/owncloud.conf&lt;/p&gt;
&lt;pre&gt;# /etc/fail2ban/filter.d/owncloud.conf
#
# Fail2Ban configuration file
# Owncloud
#

[Definition]
# Option: failregex
failregex = &amp;lt;HOST&amp;gt;$&lt;/pre&gt;
&lt;p&gt;Relancez fail2ban et le tour est joué.&lt;/p&gt;
&lt;/section&gt;
</content><category term="Sysadmin"></category></entry><entry><title>HP Proliant Support Pack sur RHEL 5</title><link href="https://blog.devarieux.net/2013/07/hp-proliant-support-pack-sur-rhel-5.html" rel="alternate"></link><published>2013-07-23T18:07:00+02:00</published><updated>2013-07-23T18:07:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2013-07-23:/2013/07/hp-proliant-support-pack-sur-rhel-5.html</id><summary type="html">&lt;p&gt;Dans le cadre de mon travail, je suis en train d'installer et de
configurer un serveur HP System Insight Manager (SIM). Une sorte de
Nagios amélioré pour serveur HP, avec anticipation des pannes matériel.&lt;/p&gt;
&lt;p&gt;Ce serveur SIM nous a permis par exemple de détecter qu'une pile de
cache RAID était …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Dans le cadre de mon travail, je suis en train d'installer et de
configurer un serveur HP System Insight Manager (SIM). Une sorte de
Nagios amélioré pour serveur HP, avec anticipation des pannes matériel.&lt;/p&gt;
&lt;p&gt;Ce serveur SIM nous a permis par exemple de détecter qu'une pile de
cache RAID était en train de lâcher et nous avons donc pu remplacer
cette pile avant que le problème intervienne (pas de cache RAID = temps
d'accès en écriture tout moisi et ça le fait moyen sur un serveur de
sauvegarde).&lt;/p&gt;
&lt;p&gt;Pour que le serveur HPSIM accède aux serveurs qu'il surveille, il faut
installer un agent. Cet agent, c'est HP Proliant Support Pack. Une suite
d'utilitaires et de pilotes pour serveur HP Proliant.&lt;/p&gt;
&lt;p&gt;J'ai donc téléchargé l'iso &lt;a href="http://h18004.www1.hp.com/products/servers/service_packs/en/index.html"&gt;sur le site
d'HP. &lt;/a&gt;Celle
ci contient les utilitaires pour tous les OS supportés (Windows, RedHat,
HP-UX). Une fois l'iso transférée sur le serveur, je la monte :&lt;/p&gt;
&lt;pre&gt;mkdir /media/iso
mount -o loop /tmp/fichier.iso /media/iso&lt;/pre&gt;
&lt;p&gt;Ensuite, c'est l'utilitaire HPSUM qui va s'occuper d'installer les
différents modules et utilitaires.&lt;/p&gt;
&lt;pre&gt;cd /media/iso/hp/swpackages/
./hpsum&lt;/pre&gt;
&lt;p&gt;Cette commande utilise un serveur X.
|  Pour info, la doc complète : &lt;a href="http://bizsupport1.austin.hp.com/bc/docs/support/SupportManual/c03114114/c03114114.pdf"&gt;Guide de l'Utilisateur, HP Smart Update
Manager&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;En suivant les étapes une à une, les packages sont tous compilés et
installés.&lt;/p&gt;
&lt;section id="aie"&gt;
&lt;h2&gt;Aïe&lt;/h2&gt;
&lt;p&gt;Malheureusement, parfois, tout ne tourne pas rond et dans mon cas,
certains paquets n'ont pas pu être compilés. Les logs montrent un obscur
message de problème de dépendance avec ksym.&lt;/p&gt;
&lt;p&gt;Pour résoudre ce problème et terminer l'installation des paquets, voici
la procédure ;&lt;/p&gt;
&lt;p&gt;Installation des sources :&lt;/p&gt;
&lt;pre&gt;cd /media/iso/hp/swpackages/
rpm -ivh &amp;lt;paquet&amp;gt;.src.rpm
rpmbuild -bb /usr/src/redhat/SPECS/&amp;lt;paquet&amp;gt;.spec
rpm -ivh --nodeps /usr/src/redhat/RPMS/&amp;lt;arch&amp;gt;/&amp;lt;paquet&amp;gt;.rpm&lt;/pre&gt;
&lt;p&gt;On vérifie que le module a bien été installé :&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;::&lt;/dt&gt;
&lt;dd&gt;modinfo &amp;lt;nomdumondule&amp;gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;On charge le module :&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;::&lt;/dt&gt;
&lt;dd&gt;modprobe &amp;lt;nomdumodule&amp;gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Ce qui donne, avec le paquet qla4xxx qui me concernait :&lt;/p&gt;
&lt;pre&gt;rpm -ivh hp-qla4xxx-&amp;lt;version&amp;gt;.src.rpm
rpmbuild -bb /usr/src/redhat/SPECS/hp-qla4xxx.spec
rpm -ivh --nodeps /usr/src/redhat/RPMS/x86_64/kmod-hp-qla4xxx-&amp;lt;version&amp;gt;-x86_64.rpm
modprobe qla4xxx&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="explication"&gt;
&lt;h2&gt;Explication&lt;/h2&gt;
&lt;p&gt;Les RPM utilisent les dépendances de KMP (Kernel Module Packaging) pour
s'assurer que les binaires RPM puissent être installés. Red Hat
maintient une liste blanche de &lt;em&gt;kernel symbols&lt;/em&gt; (ksym donc) que les
RPM utilisent. Certains de ses symboles peuvent être dans le kernel mais
pas dans la liste blanche. Le résultat est que certains RPM, qui y font
référence, ne peuvent pas être installés.&lt;/p&gt;
&lt;p&gt;L'utilisateur doit donc utiliser l'option &amp;quot;--nodeps&amp;quot; lors de
l'installation des binaires.&lt;/p&gt;
&lt;p&gt;La paquet qla4xxx utilisent les symboles suivant sur RHEL 5 qui ne sont
pas dans la liste blanche ;&lt;/p&gt;
&lt;p&gt;ksym(kobject_uevent_env) ksym(iscsi2_session_chkready)
ksym(pci_get_domain_bus_and_slot)&lt;/p&gt;
&lt;/section&gt;
</content><category term="Sysadmin"></category></entry><entry><title>RHEL 5.5 et chipset broadcom BCM5709</title><link href="https://blog.devarieux.net/2010/06/rhel-5-5-et-chipset-broadcom-bcm5709.html" rel="alternate"></link><published>2010-06-28T19:36:00+02:00</published><updated>2010-06-28T19:36:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2010-06-28:/2010/06/rhel-5-5-et-chipset-broadcom-bcm5709.html</id><summary type="html">&lt;p&gt;Nous avons récemment installé une nouvelle machine qui sert de serveur
principal pour notre nouveau système de sauvegarde. Lors des tests des
sauvegardes complètes du week end, le chipset réseau du serveur
s'écroulait lamentablement sous la charge du nombre de paquets qui
arrivaient. Même si le réseau semblait toujours fonctionnel …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nous avons récemment installé une nouvelle machine qui sert de serveur
principal pour notre nouveau système de sauvegarde. Lors des tests des
sauvegardes complètes du week end, le chipset réseau du serveur
s'écroulait lamentablement sous la charge du nombre de paquets qui
arrivaient. Même si le réseau semblait toujours fonctionnel (service
réseau lancé, ifconfig ne signal rien d'anormal), la machine était
injoignable et ne répondait pas au ping. Dans certains cas, un
redémarrage du service réseau ne suffit pas à retrouver une
connectivité.&lt;/p&gt;
&lt;p&gt;A l'heure où la sauvegarde s'arrêtait, voici ce qu'on pouvait trouver
dans /var/log/messages :&lt;/p&gt;
&lt;pre&gt;server1 kernel: NETDEV WATCHDOG: eth0: transmit timed out
server1 kernel: bnx2: eth0 NIC Copper Link is Down&lt;/pre&gt;
&lt;p&gt;La résolution du problème passe par une mise à jour du pilote. On trouve
le pilote pour ce chipset à cette page :
&lt;a class="m-link-wrap" href="http://www.broadcom.com/support/ethernet_nic/netxtremeii.php"&gt;http://www.broadcom.com/support/ethernet_nic/netxtremeii.php&lt;/a&gt; Après avoir
extrait l'archive, on installe les sources :&lt;/p&gt;
&lt;pre&gt;rpm -ivh netxtreme2-&amp;lt;version&amp;gt;.src.rpm&lt;/pre&gt;
&lt;p&gt;Installation de kernel-devel pour pouvoir compiler les sources du
pilotes :&lt;/p&gt;
&lt;pre&gt;yum install kernel-devel&lt;/pre&gt;
&lt;p&gt;Construction du paquet :&lt;/p&gt;
&lt;pre&gt;cd /usr/src/redhat
rpm -bb SPECS/netxtreme2.spec&lt;/pre&gt;
&lt;p&gt;Installation du paquet fraichement installé :&lt;/p&gt;
&lt;pre&gt;rpm -ivh RPMS/&amp;lt;arch&amp;gt;/netxtreme2-&amp;lt;version&amp;gt;.&amp;lt;arch&amp;gt;.rpm&lt;/pre&gt;
&lt;p&gt;déchargement de l'ancien module :&lt;/p&gt;
&lt;pre&gt;rmmode bnx2&lt;/pre&gt;
&lt;p&gt;Chargement du nouveau module :&lt;/p&gt;
&lt;pre&gt;modprobe bnx2&lt;/pre&gt;
&lt;p&gt;Suite à cette petite manipulation, plus de soucis de chipset réseau qui
ne répond plus. Problème résolu :D&lt;/p&gt;
</content><category term="Sysadmin"></category></entry><entry><title>Rapport de stage sur la mise en place de Squid et Egroupware</title><link href="https://blog.devarieux.net/2010/01/rapport-de-stage-sur-la-mise-en-place-de-squid-et-egroupware.html" rel="alternate"></link><published>2010-01-06T15:05:00+01:00</published><updated>2010-01-06T15:05:00+01:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2010-01-06:/2010/01/rapport-de-stage-sur-la-mise-en-place-de-squid-et-egroupware.html</id><summary type="html">&lt;p&gt;J’ai longuement hésité à mettre ce rapport de stage en ligne pour
plusieurs raisons. Tout d’abord, ce rapport n’est pas vraiment
représentatif du travail fournit. La majorité des solutions expliquées
m’ont demandées beaucoup de temps de recherche et d’arrachage de cheveux
(notamment pour la migration …&lt;/p&gt;</summary><content type="html">&lt;p&gt;J’ai longuement hésité à mettre ce rapport de stage en ligne pour
plusieurs raisons. Tout d’abord, ce rapport n’est pas vraiment
représentatif du travail fournit. La majorité des solutions expliquées
m’ont demandées beaucoup de temps de recherche et d’arrachage de cheveux
(notamment pour la migration des comptes sous Lotus Notes). Ensuite, la
qualité rédactionnel est loin d’être au rendez-vous. On m’a beaucoup
reproché que ce rapport était trop technique et c’est plutôt vrai.
Enfin, ce document ne décrit pas vraiment l’installation de Squid et
d’Egroupware. Ces parties sont survolées et je m’attarde plus sur la
résolution des problèmes rencontrés (résoudre un conflit de schéma LDAP
quand on a jamais vu OpenLDAP de sa vie n’est pas chose aisée).&lt;/p&gt;
&lt;p&gt;Un mois après la fin de la formation, je me décide tout de même à le
mettre en ligne. Je pense que ce rapport décrit plutôt bien ce que peut
être le métier de technicien réseau dans une administration ou une PME.
Le problème lors de la mise en place d’un nouveau service n’est pas
l’installation et la configuration de ce service mais la migration des
anciens services utilisés vers les nouveaux. Surtout lorsque l’ancien
service est un système propriétaire vieillissant (Je veux parler ici de
Lotus Notes 5).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20110722200015/http://www.squid-cache.org/"&gt;Squid&lt;/a&gt;
est un proxy http très utilisé, dont j’ai pu découvrir une partie des
possibilités.
&lt;a href="https://web.archive.org/web/20110722200015/http://www.egroupware.org/"&gt;Egroupware&lt;/a&gt;
est un groupware fournissant un agenda, un client mail, un carnet
d’adresses, un système de réservations des ressources et plusieurs
autres choses, le tout dans une interface web. Je vous invite à tester
la &lt;a href="https://web.archive.org/web/20110722200015/http://www.stylite.de/egroupware_demo_login"&gt;demo sur le site du
projet.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ce rapport fait 38 pages et voici son sommaire:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Remerciements&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Objectif du stage&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;L’entreprise&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Historique&lt;/li&gt;
&lt;li&gt;La structure actuelle&lt;/li&gt;
&lt;li&gt;Le service informatique&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Spécifications&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Environnement de travail&lt;/li&gt;
&lt;li&gt;L’existant&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Besoins et contraintes&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;Squid&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Egroupware&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Mise en œuvre&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Proxy&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;Planning prévisionnel&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Mise en œuvre&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Squid&lt;/li&gt;
&lt;li&gt;Sarg&lt;/li&gt;
&lt;li&gt;Squidguard&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Problèmes rencontrés&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Annexes&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;eGroupware&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;Schéma fonctionnel&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Planning previsionnel&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Mise en œuvre&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Configuration de openldap&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Problèmes rencontrés&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Conflit de schéma openldap&lt;/li&gt;
&lt;li&gt;Configuration de felamimail&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Préparation de la migration des utilisateurs&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Création du carnet d’adresses principal&lt;/li&gt;
&lt;li&gt;Importation des agendas Lotus Notes&lt;/li&gt;
&lt;li&gt;Importation des carnet d’adresse Lotus Notes&lt;/li&gt;
&lt;li&gt;Exportation des mails depuis LotusNotes dans eGroupware&lt;/li&gt;
&lt;li&gt;Importation mail depuis roundcube&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Annexes&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Procédure de migration serveur&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sur Revy&lt;/li&gt;
&lt;li&gt;Sur Revnew&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="http://blog.devarieux.net/wp-content/uploads/2015/08/RapportDeStage-Squid-Egroupware.pdf"&gt;RapportDeStage-Squid-Egroupware&lt;/a&gt;&lt;/p&gt;
</content><category term="Sysadmin"></category></entry><entry><title>GNU/Linux : Résolution de problèmes</title><link href="https://blog.devarieux.net/2009/12/gnulinux-resolution-de-problemes.html" rel="alternate"></link><published>2009-12-25T19:34:00+01:00</published><updated>2009-12-25T19:34:00+01:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2009-12-25:/2009/12/gnulinux-resolution-de-problemes.html</id><summary type="html">&lt;p&gt;Une grande partie du travail sur les forums concernant les logiciels
libres est d'obtenir plus d'informations sur les problèmes des novices.
Il est très agréable d'aider les autres comme il peut être assez agaçant
d'essayer d'aider quelqu'un qui ne montre aucun effort pour s'aider
lui-même. Je ne pense pas que …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Une grande partie du travail sur les forums concernant les logiciels
libres est d'obtenir plus d'informations sur les problèmes des novices.
Il est très agréable d'aider les autres comme il peut être assez agaçant
d'essayer d'aider quelqu'un qui ne montre aucun effort pour s'aider
lui-même. Je ne pense pas que cela soit dû à de la fainéantise de la
part de celui qui pose la question. C'est simplement parce que les
novices ne connaissent pas les premières étapes de résolution des
problèmes sur GNU/Linux et ne savent pas quels types d'informations
rechercher ni comment les obtenir. J'espère que ce petit guide sera
utile pour ceux qui font leurs premiers pas sur linux.&lt;/p&gt;
&lt;section id="i-diagnostiquer-soi-meme"&gt;
&lt;h2&gt;I - Diagnostiquer soi-même&lt;/h2&gt;
&lt;section id="la-premiere-etape-est-la-collecte-d-informations"&gt;
&lt;h3&gt;1 - La première étape est la collecte d'informations.&lt;/h3&gt;
&lt;p&gt;Si un programme plante ou ne fait pas ce qu'il est censé faire, il faut
se poser et réfléchir calmement.&lt;/p&gt;
&lt;p&gt;Ouvrez un nouveau fichier dans votre éditeur de texte favori et
écrivez-y ce que vous faisiez quand le problème est apparu ainsi que
tous les messages d'erreurs reçus. Ces messages d'erreurs doivent être
recopiés exactement tel qu'ils sont apparus. Utilisez le copier/coller
si cela est possible.&lt;/p&gt;
&lt;p&gt;Ouvrez un terminal et tapez &lt;strong&gt;tail /var/log/messages&lt;/strong&gt;. Cette commande
affichera les 10 dernières lignes des logs du système. Si celui ci
contient un ou des messages qui sont clairement en rapport avec votre
problème, recopiez les également.&lt;/p&gt;
&lt;p&gt;Les erreurs des applications graphiques sont en général dans le fichier
.Xsession-errors ou .xsession-errors dans votre dossier /home. La
commande pour visualiser les 10 dernières lignes est donc &lt;strong&gt;tail
~/.xsession-errors&lt;/strong&gt;. Comme pour le fichier /var/log/messages, ajoutez
les lignes en rapport avec votre problème dans votre fichier de départ.
Si vous n'avez trouvé aucune information dans ces fichiers, essayez de
lancer l'application concernée depuis votre terminal. Lors de
l'apparition du bug, des messages devraient s'afficher.&lt;/p&gt;
&lt;p&gt;Si votre système ne démarre plus suite à un problème, démarrez alors sur
une autre distribution (soit en dual-boot si vous en avez soit depuis un
live-cd). Il est toujours bon d'avoir un live-cd sous la main pour ce
genre d'opération. Une fois que vous avez démarré sur le live-cd, montez
votre partition root et récupérez les informations dans les fichiers
cités plus haut.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="le-probleme-est-il-reproductible"&gt;
&lt;h3&gt;2 - Le problème est-il reproductible?&lt;/h3&gt;
&lt;p&gt;S'il est possible de reproduire le problème facilement, faites-le.
N'oubliez pas de le faire sur des fichiers peu important ou sur une
copie du fichier concerné afin de ne pas endommager vos données.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="est-ce-un-probleme-materiel"&gt;
&lt;h3&gt;3 - Est-ce un problème matériel ?&lt;/h3&gt;
&lt;p&gt;Les problèmes non reproductibles sont souvent dus au matériel. Si vous
pensez que c'est le cas, regardez alors dans le fichier
&lt;strong&gt;/var/log/boot&lt;/strong&gt; ainsi que &lt;strong&gt;/var/log/kern.log&lt;/strong&gt; ou
&lt;strong&gt;/var/log/kernel.log&lt;/strong&gt; suivant votre distribution pour voir si le
kernel reconnait bien votre matériel. Ce fichier étant très long, la
commande tail ne vous sera pas d'un grand secours. Utilisez plutôt
&lt;strong&gt;less /var/log/boot&lt;/strong&gt;et parcourez les pages à la recherche d'un
message en rapport avec votre problème. Recopiez également ce message
dans votre fichier de départ.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="lisez-la-documentation-du-programme"&gt;
&lt;h3&gt;4 - Lisez la documentation du programme.&lt;/h3&gt;
&lt;p&gt;Ceci est à faire en particulier si le programme ne réagit pas de la
manière souhaitée. Lisez l'aide en ligne du programme et utilisez
également le manuel universel (dans un terminal : man
nom_du_programme).&lt;/p&gt;
&lt;/section&gt;
&lt;section id="recherchez-votre-message-d-erreur-sur-internet"&gt;
&lt;h3&gt;5 - Recherchez votre message d'erreur sur internet&lt;/h3&gt;
&lt;p&gt;Copiez/collez le message d'erreur dans un moteur de recherche ou un
meta-moteur tel que ixquick et ajoutez-y le nom du programme. Vous
trouverez certainement des messages sur des forums d'utilisateurs qui
ont le même problème que vous. Lisez le thread complet, vous y trouverez
peut-être une solution.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="reflechissez-avec-logique"&gt;
&lt;h3&gt;6 - Réfléchissez avec logique&lt;/h3&gt;
&lt;p&gt;Si, arrivé ici, vous commencez à avoir une idée sur la cause du
problème, vous pouvez peut être tester cette idée. Il y a beaucoup de
petites commandes simples qui peuvent vous aider à recueillir plus
d'informations sur votre problème et votre système, qui vont seront d'un
grand secours.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lspci&lt;/strong&gt; pour lister votre matériel&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lsusb&lt;/strong&gt; pour lister les périphériques usb&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cat /proc/cpuinfo&lt;/strong&gt; pour avoir les caractéristiques de votre CPU&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;free -m&lt;/strong&gt; pour connaitre le taux de charge de votre RAM&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="maintenant-vous-pouvez-penser-a-demander-de-l-aide"&gt;
&lt;h3&gt;7 - Maintenant, vous pouvez penser à demander de l'aide.&lt;/h3&gt;
&lt;p&gt;Si après tout ça, vous n'avez toujours pas résolu votre problème, il est
temps de demander de l'aide sur un forum d'utilisateurs. Avant de passer
à cette étape, rappelez vous que les utilisateurs des forums ne sont pas
payés pour répondre à vos questions. Ce sont seulement des utilisateurs
ayant une certaine expérience et qui font cela bénévolement.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="ii-obtenir-de-l-aide"&gt;
&lt;h2&gt;II - Obtenir de l'aide&lt;/h2&gt;
&lt;section id="d-abord-observer"&gt;
&lt;h3&gt;1 - D'abord, observer&lt;/h3&gt;
&lt;p&gt;Commencez par choisir votre forum. Il est préférable dans un premier
temps de choisir le forum de votre distribution, puis le forum du
programme concerné. Si ce forum possède une FAQ, lisez-la. Lisez aussi
les règles du forum. Si votre question ne respecte pas les règles, il y
a de grandes chances pour que vous n'obteniez pas de réponse.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="ne-soyez-pas-hors-sujet"&gt;
&lt;h3&gt;2 - Ne soyez pas hors-sujet&lt;/h3&gt;
&lt;p&gt;Trouvez le sous-forum qui correspond à votre problème. Ne postez pas
votre message dans plusieurs sous-forums, ceci est très mal vu.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="choisissez-bien-le-titre-de-votre-topic"&gt;
&lt;h3&gt;3 - Choisissez bien le titre de votre topic.&lt;/h3&gt;
&lt;p&gt;N'utilisez pas de sujet tel que &amp;quot;Besoin d'aide&amp;quot; ou &amp;quot;J'ai un problème&amp;quot;.
Ceci a tendance à irriter les gens.&lt;/p&gt;
&lt;p&gt;Votre titre doit indiquer le plus clairement quel problème vous avez.
Ainsi, une personne qui pense pouvoir vous aider sera plus encline à
lire votre sujet et poster une réponse. Soyez aussi précis que possible.
Par exemple &amp;quot;Impossible d'obtenir une adresse IP&amp;quot; sera plus utile que
&amp;quot;Je n'arrive pas à aller sur internet&amp;quot;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="donnez-des-informations"&gt;
&lt;h3&gt;4 - Donnez des informations&lt;/h3&gt;
&lt;p&gt;Dans le corps de votre message, donnez le nom et la version de votre
distribution, le nom et la version du programme utilisé et les
informations sur votre matériel si cela est nécessaire. Recopiez-y aussi
les messages d'erreurs (c'est là que le fichier que vous avez créé au
début devient utile). Indiquez ce que vous avez fait pour tenter de
résoudre le problème. En faisant cela, vous montrerez aux autres que
vous ne vous êtes pas jeté sur le forum dès que le problème est apparu.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="pas-de-langage-sms"&gt;
&lt;h3&gt;5 - Pas de langage SMS&lt;/h3&gt;
&lt;p&gt;Ça saoule! Ça n'aide pas à vous faire comprendre et on vous répondra
d'autant moins.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="ne-perdez-pas-une-opportunite-d-apprendre"&gt;
&lt;h3&gt;6 - Ne perdez pas une opportunité d'apprendre&lt;/h3&gt;
&lt;p&gt;Ne suivez pas les conseils aveuglément. Vous êtes ici pour apprendre
quelque chose. Si on vous demande d'utiliser un outil en ligne de
commande, utilisez les pages man pour savoir à quoi sert cet outil. Vous
pourrez ensuite réutiliser cet outil si vous rencontrez un problème
similaire. Si on vous demande de poster un fichier pour plus
d'informations, recherchez l'utilité de ce fichier. Les fichiers
systèmes importants possèdent souvent une page man dédiée.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="dites-merci"&gt;
&lt;h3&gt;7 - Dites merci&lt;/h3&gt;
&lt;p&gt;Les logiciels libres reposent sur la communauté. Personne n'est payé
pour vous aider. Les personnes qui vous aident le font car elles ont
elles-mêmes reçu de l'aide dans le passé et veulent rendre la pareille.
En plus de dire merci, vous pouvez également aider les autres qui ne
savent peut-être pas quelque chose que vous savez. Vous ressentirez
alors une certaine satisfaction que les logiciels propriétaires ne
peuvent vous apporter.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content><category term="Sysadmin"></category></entry></feed>