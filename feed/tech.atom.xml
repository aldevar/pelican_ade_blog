<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Aldevar - Le Blog - Tech</title><link href="https://blog.devarieux.net/" rel="alternate"></link><link href="https://blog.devarieux.net/feed/tech.atom.xml" rel="self"></link><id>https://blog.devarieux.net/</id><updated>2022-12-12T08:55:00+01:00</updated><subtitle>Yet Another Blog</subtitle><entry><title>Authentification Wifi iPSK avec Cisco ISE</title><link href="https://blog.devarieux.net/2022/12/ise-ipsk.html" rel="alternate"></link><published>2022-12-12T08:55:00+01:00</published><updated>2022-12-12T08:55:00+01:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2022-12-12:/2022/12/ise-ipsk.html</id><summary type="html">&lt;p&gt;Je vais décrire dans cet article comment configurer Cisco ISE pour authentifier des équipements Wifi sur un réseau en utilisant le protocole RADIUS. Notamment, en fonctions de la PSK utiliser par un client Wifi, nous pourrons lui attribuer un VLAN spécifique. Ces PSK sont nommés iPSK (identity Pre Shared Key …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Je vais décrire dans cet article comment configurer Cisco ISE pour authentifier des équipements Wifi sur un réseau en utilisant le protocole RADIUS. Notamment, en fonctions de la PSK utiliser par un client Wifi, nous pourrons lui attribuer un VLAN spécifique. Ces PSK sont nommés iPSK (identity Pre Shared Key), justement grace au rôle qu'elles peuvent avoir dans l'attribution de l'identité de l'équipement, permettant de le placer dans le VLAN adequat.&lt;/p&gt;
&lt;p&gt;Cisco ISE (Identity Service Engine) est une appliance proposant un grand nombre de fonctionnalités de sécurité. Il peut authentifier les utilisateurs sur le réseau (Wifi, câble ou VPN), il gère le contrôle d'accès, les politiques de groupe et peut également faire du device posturing (s'assurer qu'un équipement est à jour et que son anti-virus est activé avant de lui donner accès au réseau). Les fonctionnalités sont assez complètes et son utilisation demande une certaine expertise.&lt;/p&gt;
&lt;p&gt;Pour cet article, le réseau Wifi sur lequel on s'appuit est un réseau Meraki mais je ne doute pas que le fonctionnement doit être grandement similaire avec d'autres constructeurs.&lt;/p&gt;
&lt;div class="section" id="configuration-meraki"&gt;
&lt;h2&gt;Configuration Meraki&lt;/h2&gt;
&lt;p&gt;La configuration du SSID se fait dans le menu Wireless &amp;gt; Access Control en choisissant le SSID cible dans le menu déroulant en haut de la page.&lt;/p&gt;
&lt;div class="section" id="network-access"&gt;
&lt;h3&gt;Network Access&lt;/h3&gt;
&lt;p&gt;Cette section permet de choisir le mode d'association des équipements. L'option à choisir ici est Identity PSK with Radius. Le chiffrement se fait en WPA2. Si vous avez plusieurs bornes, je vous invite à activer le mode 802.11r (fast-transition) qui améliore les performances lors du roaming.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK01.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="splash-page"&gt;
&lt;h3&gt;Splash Page&lt;/h3&gt;
&lt;p&gt;Nous n'utilisons pas de Splash Page sur ce SSID. Une fois associé et authentifié, l'accès au réseau se fait directement.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK02.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="configuration-radius"&gt;
&lt;h3&gt;Configuration Radius&lt;/h3&gt;
&lt;p&gt;Lors du choix IPSK with Radius dans la section 'Network Access', une nouvelle section dédiée à la configuration Radius apparaît.
On entre les adresses des serveurs Radius, ports et secrets. RADIUS testing est désactivé et le support de CoA est activé. Les serveurs Radius accounting sont activés et paramétrés.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK03.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="assignement-de-l-ip"&gt;
&lt;h3&gt;Assignement de l'IP&lt;/h3&gt;
&lt;p&gt;L'assignement de l'adresse IP de l'équipement se fait en mode Bridge. Les équipements se retrouvent sur le VLAN qui leur est assigné et peuvent recevoir une IP en DHCP via, par exemple, le serveur Cisco ISE.
Le VLAN tagging est activé avec un VLAN par défaut (ici XXX).&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK04.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configuration-cisco-ise"&gt;
&lt;h2&gt;Configuration Cisco ISE&lt;/h2&gt;
&lt;p&gt;Voici le flux de données lors d'une authentification iPSK sur un serveur Cisco ISE. Cette image est directement extraite de la documentation officielle Meraki.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK05.png" /&gt;
&lt;div class="section" id="ajout-des-ap-et-assignation-a-un-groupe"&gt;
&lt;h3&gt;Ajout des AP et assignation à un groupe&lt;/h3&gt;
&lt;p&gt;Sur ISE, aller dans Administration &amp;gt; Network Ressources &amp;gt; Network Devices et cliquer sur Add&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK06.png" /&gt;
&lt;p&gt;Remplir les champs pour l'AP à intégrer : Nom de l'AP et adresse IP.&lt;/p&gt;
&lt;p&gt;Créer une nouvelle &lt;cite&gt;Location&lt;/cite&gt; du nom du lieu où sont placées les AP (par exemple Headquarter ou Agence_Rennes) et un &lt;cite&gt;device type&lt;/cite&gt; MR. Ce device type permettra d'y placer l'ensemble des AP de type Meraki MR.
La localisation &amp;quot;Headquarters&amp;quot; va permettre de faire correspondre l'authentification des clients avec la bonne Policy Set (jeu de politique), que l'on verra plus tard.&lt;/p&gt;
&lt;p&gt;Cocher Radius Authentication Settings et paramétrer un secret pour ce serveur Radius. Ce secret est celui utilisé dans la configuration Radius du SSID sur Meraki.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK07.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="creer-une-policy-set"&gt;
&lt;h3&gt;Créer une Policy Set&lt;/h3&gt;
&lt;p&gt;Créer une nouvelle Policy Set avec la condition &lt;strong&gt;Device&amp;gt;Location&lt;/strong&gt; et sélectionner la localisation Headquarter créée précédemment. Ajouter une seconde condition &lt;strong&gt;Radius &amp;gt; Called-Station-ID Ends_With &amp;quot;Nom_du_SSID&amp;quot;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;J'insiste sur le fait de bien mettre la condition &amp;quot;Ends_With&amp;quot; et nom &amp;quot;Equals&amp;quot; car lors de l'authentification Radius, le nom du SSID envoyé par MEraki sera précédé d'autres informations. En mettant &amp;quot;Equals&amp;quot; l'authentification ne peut pas fonctionner.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK08.png" /&gt;
&lt;p&gt;Sauvegarder puis se rendre dans la policy en utilisant la flèche à l'extrémité droite. Aller dans &lt;strong&gt;Authentication Policy&lt;/strong&gt; et paramétrer la règle comme ci-dessous. S'assurer que le menu déroulant est bien positionné sur &lt;strong&gt;Internal Endpoints&lt;/strong&gt; et que l'option &lt;strong&gt;If User not found Continue&lt;/strong&gt; est bien sélectionnée. Cette option permet de continuer à vérifier l'authentification d’un équipement qui ne serait pas valide sur cette policy.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK09.png" /&gt;
&lt;p&gt;Se rendre ensuite dans &lt;strong&gt;Authorization Policy&lt;/strong&gt;. Sur la règle par défaut, supprimer &lt;em&gt;Deny Access&lt;/em&gt; et cliquer sur l'icône + pour créer un nouveau profil avec les paramètres ci-dessous.
Dans &lt;strong&gt;Advanced Attributes&lt;/strong&gt;, sélectionner &lt;strong&gt;Radius:Tunnel-Password&lt;/strong&gt;. Entrer la PSK utilisée par défaut sur ce SSID puis sauvegarder.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK10.png" /&gt;
&lt;p&gt;Sélectionner ce profil dans la règle par défaut puis sauvegarder.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK11.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="creer-un-identity-group"&gt;
&lt;h3&gt;Créer un Identity Group&lt;/h3&gt;
&lt;p&gt;Aller dans &lt;strong&gt;Work Center &amp;gt; Guest Access &amp;gt; Id Group&lt;/strong&gt;.
Cliquer sur &lt;strong&gt;Add&lt;/strong&gt; pour ajouter un nouveau groupe qui contiendra les équipements autorisé à s'authentifier sur le réseau Wifi.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="creer-une-policy-set-pour-chaque-psk"&gt;
&lt;h3&gt;Créer une Policy Set pour chaque PSK&lt;/h3&gt;
&lt;p&gt;A partir de maintenant, nous pouvons créer une Policy Set pour chaque groupe d'équipement qui utilisera sa propre iPSK. Chaque iPSK identifiera un type d'équipement et le VLAN sur lequel il sera placé.&lt;/p&gt;
&lt;p&gt;Ici, nous allons créer la policy set pour le VLAN de bureautique (VLAN 84).
Aller dans &lt;strong&gt;Policy &amp;gt; Policy Elements &amp;gt; Results &amp;gt; Authorization &amp;gt; Authorization Profiles&lt;/strong&gt;. Cliquer sur &lt;strong&gt;Add&lt;/strong&gt; et créer un nouveau profil. C’est celui-ci qui sera utilisé pour surcharger le VLAN par défaut si besoin.
Les champs importants sont :
- Nom du profil
- Common Tasks &amp;gt; VLAN &amp;gt; 84
- Advances Attributes Settings &amp;gt; Radius:Tunnel-Password ⇒ Entrer la PSK pour les équipements de bureautique (PC portable en général).&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK12.png" /&gt;
&lt;p&gt;Aller ensuite dans &lt;strong&gt;Policy &amp;gt; Policy Sets&lt;/strong&gt; et éditer la Policy Set créée précédemment. Dans la section &lt;strong&gt;Authorization Rules&lt;/strong&gt; ajouter une nouvelle règle au-dessus de la règle par défaut.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK13.png" /&gt;
&lt;p&gt;Nommer cette règle et lui appliquer la condition suivante, en choissant le groupe créé dans la section &lt;strong&gt;Créer un Identity Group&lt;/strong&gt; :&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK14.png" /&gt;
&lt;p&gt;Appliquer ensuite le profil d'autorisation PSK1 créé en juste au-dessus et sauvegarder.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK15.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="ajouter-des-euipements-au-groupe"&gt;
&lt;h3&gt;Ajouter des éuipements au groupe&lt;/h3&gt;
&lt;p&gt;Aller dans &lt;strong&gt;Context Visibility &amp;gt; Endpoints&lt;/strong&gt;.
Ajouter un nouvel équipement en prenant soin de l placer dans le groupe créer précédement.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/2022-12-12-ISEiPSK16.png" /&gt;
&lt;p&gt;Cette technique d'authentification permet donc de placer les équipements/utilisateurs sur des VLANs différents en fonction de la PSK utilisée, sans créer un SSID différent pour chaque VLAN.&lt;/p&gt;
&lt;p&gt;En effet, il est déconseillé de diffuser plus de 5 SSID par AP ou par zone afin de limiter les interférences et optimiser la qualité du signal, notamment lorsqu'on souhaite y faire transiter de la voix et/ou faire du roaming. Grâce à iPSK, nous pouvons segmenter les utilisateurs dans différents VLAN en limitant le nombre de SSID diffusé.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="ISE"></category><category term="wifi"></category><category term="meraki"></category><category term="security"></category></entry><entry><title>Caddy, OVH et les certificats wildcard</title><link href="https://blog.devarieux.net/2021/04/caddy-ovh-acme.html" rel="alternate"></link><published>2021-04-05T08:55:00+02:00</published><updated>2021-04-05T08:55:00+02:00</updated><author><name>Aldevar</name></author><id>tag:blog.devarieux.net,2021-04-05:/2021/04/caddy-ovh-acme.html</id><summary type="html">&lt;p&gt;Après avoir présenté dans un &lt;a class="reference external" href="/2021/02/caddy-presentation.html"&gt;premier article&lt;/a&gt; ce qu'est Caddy et son utilisation de façon basique, puis dans &lt;a class="reference external" href="/2021/02/caddy-api.html"&gt;un second&lt;/a&gt; le pilotage de Caddy par API ainsi qu'une configuration un peu plus avancée, je souhaites ici aborder le sujet de la génération de certificats TLS via Let's Encrypt avec le …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Après avoir présenté dans un &lt;a class="reference external" href="/2021/02/caddy-presentation.html"&gt;premier article&lt;/a&gt; ce qu'est Caddy et son utilisation de façon basique, puis dans &lt;a class="reference external" href="/2021/02/caddy-api.html"&gt;un second&lt;/a&gt; le pilotage de Caddy par API ainsi qu'une configuration un peu plus avancée, je souhaites ici aborder le sujet de la génération de certificats TLS via Let's Encrypt avec le challenge &lt;a class="reference external" href="https://letsencrypt.org/fr/docs/challenge-types/#d%C3%A9fi-dns-01"&gt;DNS-01&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Le challenge DNS à l'avantage de pouvoir être utilisé pour générer un certificat DV wildcard. Une fois passé un certain nombre de sous domaines servis par un reverse proxy, il devient intéressant d'utiliser ce type de certificat afin d'éviter de générer trop de requêtes vers les serveurs de Let's Encrypt. De plus, avec un seul certificat à gérer pour l'ensemble des sous domaines, la gestion devient simplifiée, et notamment la supervision ou même le renouvellement.&lt;/p&gt;
&lt;p&gt;Caddy intègre de base la gestion de Let's Encrypt pour les challenges HTTP-01 car celui-ci est universel et ne dépend d'aucun autre services. C'est un échange réalisé directement entre le serveur Caddy et les serveurs de Let's Encrypt. Pour le challenge DNS-01, il y a un intermédiaire. Cet intermédiaire est le serveur DNS du domaine pour lequel on souhaite générer un certificat wildcard. De part la multitude de serveurs disponibles et de prestataires fournissant ces services, il est difficile d'avoir un protocole unifié de modification distante des entrées DNS. A ma connaissance, le seul standard qui existe pour cela est la &lt;a class="reference external" href="https://tools.ietf.org/html/rfc2136"&gt;RFC 2136&lt;/a&gt; qui ne semble pas être implémentée chez la plupart des fournisseurs de services DNS.&lt;/p&gt;
&lt;p&gt;Nous allons donc voir comment, avec Caddy, générer un certificat wildcard avec OVH en fournisseur de service DNS. La procédure est assez similaire avec les autres fournisseurs qui ont, je l'espère, pris plus de soin dans la documentation de cette fonctionnalité.&lt;/p&gt;
&lt;p&gt;Caddy n'intègre pas, de base, l'ensemble des plugins permettant de résoudre les challenges DNS de tous les fournisseurs. Pour intégrer le bon plugin, il est nécessaire de compiler Caddy. L'opération est particulièrement simple à réaliser et à l'avantage de produire en sortie un binaire unique qu'il est ensuite facile de déployer sur ses serveurs. La compilation de Caddy est assez bien expliquée dans &lt;a class="reference external" href="https://caddyserver.com/docs/build#xcaddy"&gt;la documentation&lt;/a&gt; et voici la liste des &lt;a class="reference external" href="https://caddyserver.com/docs/modules/"&gt;plugins disponible&lt;/a&gt;. A ce jour, aucun plugin spécifique n'a été écrit pour OVH, il faut donc se rabattre sur le module &lt;a class="reference external" href="https://github.com/caddy-dns/lego-deprecated"&gt;Lego Deprecated&lt;/a&gt;. Ce module utilise une ancienne API mais est actuellement le seul qui permet de gérer un grand nombre de fournisseurs de DNS, dont OVH.&lt;/p&gt;
&lt;div class="section" id="compilation-de-caddy"&gt;
&lt;h2&gt;Compilation de Caddy&lt;/h2&gt;
&lt;p&gt;Pour compiler Caddy, nous avons besoin de 2 choses. Golang et le binaire xcaddy qui permet de facilement compiler caddy avec les modules spécifiés. On commence donc par installer Golang et déclarer son binaire dans le PATH.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# wget https://golang.org/dl/go&amp;lt;version&amp;gt;.linux-amd64.tar.gz
# tar -C /usr/local -xzf go&amp;lt;version&amp;gt;.linux-amd64.tar.gz
# rm -f go&amp;lt;version&amp;gt;.linux-amd64.tar.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On édite le fichier &lt;tt class="docutils literal"&gt;/etc/profile&lt;/tt&gt; pour ajouter le binaire go dans le PATH. A la fin du fichier on ajoute :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;export PATH=$PATH:/usr/local/go/bin
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Puis, on source le fichier pour mettre à jour le PATH et on s'assure que go est bien installé en affichant la version (ici 1.16).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# source /etc/profile
# go version
go version go1.16 linux/amd64
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Puis on récupère le binaire xcaddy et on le rend exécutable. Lors de la rédaction cet article, la dernière version disponible est la 0.1.8.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# wget https://github.com/caddyserver/xcaddy/releases/download/v0.1.8/xcaddy_0.1.8_linux_amd64.tar.gz
# tar xvzf xcaddy_0.1.8_linux_amd64.tar.gz
# ls
LICENSE  README.md  xcaddy  xcaddy_0.1.8_linux_amd64.tar.gz
# chmod o+x xcaddy
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enfin, avec l'aide de xcaddy, on compile caddy avec le plugin lego-deprecated. On se retrouve avec le binaire caddy dans le répertoire.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./xcaddy build --with github.com/caddy-dns/lego-deprecated
# ls
LICENSE  README.md  caddy  xcaddy  xcaddy_0.1.8_linux_amd64.tar.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configuration-d-ovh"&gt;
&lt;h2&gt;Configuration d'OVH&lt;/h2&gt;
&lt;p&gt;Il faut autoriser Caddy à créer et supprimer des entrées DNS sur les serveurs d’OVH. Pour cela, il faut créer une application chez OVH, via ce lien : &lt;a class="reference external" href="https://eu.api.ovh.com/createApp/"&gt;https://eu.api.ovh.com/createApp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On rentre son account ID et mot de passe. On choisit un nom d’application ici &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;xcaddy-dns-challenge&lt;/span&gt;&lt;/tt&gt; ainsi qu’une description. OVH affiche alors l’Application Key et l’Application Secret. On les conserve bien au chaud pour la suite.&lt;/p&gt;
&lt;p&gt;Ensuite, il faut donner des droits à cette application. On réalise cela par un call API directement sur la console OVH.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -XPOST -H &amp;quot;X-Ovh-Application: &amp;lt;Application Key&amp;gt;&amp;quot; -H &amp;quot;Content-type: application/json&amp;quot; https://eu.api.ovh.com/1.0/auth/credential -d &amp;#39;{&amp;quot;accessRules&amp;quot;:[{&amp;quot;method&amp;quot;:&amp;quot;POST&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/domain/zone/&amp;lt;Nom De Domaine&amp;gt;/record&amp;quot;},{&amp;quot;method&amp;quot;:&amp;quot;POST&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/domain/zone/&amp;lt;Nom De Domaine&amp;gt;/refresh&amp;quot;},{&amp;quot;method&amp;quot;:&amp;quot;DELETE&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/domain/zone/&amp;lt;Nom De Domaine&amp;gt;/record/*&amp;quot;}],&amp;quot;redirection&amp;quot;: &amp;quot;https://www.foo.com&amp;quot;}&amp;#39;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La partie redirection a la fin ne nous intéresse pas mais est obligatoire. Elle indique vers quelle page l’application doit être redirigée une fois connectée.&lt;/p&gt;
&lt;p&gt;En retour, on obtient un JSON avec la consumer Key. C’est cette info qu’il faut conserver.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;validationUrl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://eu.api.ovh.com/auth/?credentialToken=xxxxxxxxxxxxxxx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;consumerKey&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;The Consumer Key&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;state&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pendingValidation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On voit que l'état est “Pending Validation”. Afin de valider, il faut se rendre sur le lien validationUrl.&lt;/p&gt;
&lt;p&gt;Sur ce lien, on entre de nouveau ses codes d'accès OVH puis on choisi la durée de validité de l’accès.
On a maintenant toutes les infos dont nous avons besoin :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Application Key&lt;/li&gt;
&lt;li&gt;Application Secret&lt;/li&gt;
&lt;li&gt;Consumer Key&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="configuration-de-caddy"&gt;
&lt;h2&gt;Configuration de Caddy&lt;/h2&gt;
&lt;p&gt;Voyons maintenant comment générer un certificat wildcard pour un domaine puis servir plusieurs sous-domaines en dessous. J'ai mis un peu de temps à trouver la bonne façon de faire, la voici servie pour vous sur un plateau :)
Voici un extrait de mon fichier de configuration, je vais décrire en dessous les différentes sections.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;*.domain.com {
    tls {
            dns lego_deprecated ovh
    }

    @backend host backend.domain.com
    reverse_proxy @backend 10.0.0.2:3001

    @prodapi {
            host prod.domain.com
            path /api/v1/*
    }

    @prod {
            host prod.domain.com
            not path /api/v1/
    }

    reverse_proxy @prodapi 10.0.0.1:3001
    reverse_proxy @prod 10.0.0.1:3000


    }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On déclare d'abord &lt;tt class="docutils literal"&gt;*.domain.com&lt;/tt&gt; qui est le domaine pour lequel on souhaite que Caddy génère un certificat wildcard. Pour cela, une première section tls avec l'entrée &lt;tt class="docutils literal"&gt;dns lego_deprecated ovh&lt;/tt&gt; signifie :&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;dns: Résolution du challenge DNS-01&lt;/li&gt;
&lt;li&gt;lego_deprecated: Utilisation du module lego_deprecated&lt;/li&gt;
&lt;li&gt;ovh: Parmi les providers proposés par lego_deprecated, utiliser OVH.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;L'entrée &lt;tt class="docutils literal"&gt;&amp;#64;backend host backend.domain.com&lt;/tt&gt; est un &lt;tt class="docutils literal"&gt;matcher&lt;/tt&gt;. C'est à dire qu'on place sous le nom &lt;tt class="docutils literal"&gt;backend&lt;/tt&gt; l'ensemble des requêtes dont le SNI est &lt;tt class="docutils literal"&gt;backend.domain.com&lt;/tt&gt;. Puis, juste en dessous, l'ensemble des requêtes qui matchent &lt;tt class="docutils literal"&gt;&amp;#64;backend&lt;/tt&gt; sont reverse proxyfiées (oui, je sais...) vers 10.0.0.2:3001.&lt;/p&gt;
&lt;p&gt;Les 2 entrées suivantes sont un peu similaires au matcher &lt;tt class="docutils literal"&gt;&amp;#64;backend&lt;/tt&gt; mais comme je devais spécifié plusieurs filtres (1 sur le SNI et 1 sur le path), les filtres sont placés dans un bloc d'accolades. Ensuite, les matchers &lt;tt class="docutils literal"&gt;&amp;#64;prodapi&lt;/tt&gt; et &lt;tt class="docutils literal"&gt;&amp;#64;prod&lt;/tt&gt; sont également reverse proxyfiés (oui, bon, ça va...) vers leurs serveurs respectifs.&lt;/p&gt;
&lt;p&gt;On est prêt à lancer Caddy. Il faut cependant trouver un moyen de lui spécifier les clés et secret OVH pour que le module lego_deprecated puisse se connecter et générer les entrées DNS. Pour cela, plusieurs solutions. La plus simple est d'executer Caddy depuis le terminal avec les variables d'environnement, de cette façon :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OVH_APPLICATION_KEY=&amp;lt;Application Key&amp;gt; OVH_APPLICATION_SECRET=&amp;lt;Application Secret&amp;gt; OVH_CONSUMER_KEY=&amp;lt;Consumer Key&amp;gt; OVH_ENDPOINT=ovh-eu ./caddy run --config Caddyfile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;C'est bien, ça fonctionne mais c'est pas vraiment production ready. L'autre solution est de placer ces variables d'environnement directement dans le fichier systemd de Caddy. Dans la section &lt;tt class="docutils literal"&gt;[Service]&lt;/tt&gt; on peut ajouter des variables d'environnement de cette façon :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Service]
User=caddy
Group=caddy
ExecStart=/usr/bin/caddy run --environ --config /etc/caddy/Caddyfile
ExecReload=/usr/bin/caddy reload --config /etc/caddy/Caddyfile
TimeoutStopSec=5s
LimitNOFILE=1048576
LimitNPROC=512
PrivateTmp=true
ProtectSystem=full
AmbientCapabilities=CAP_NET_BIND_SERVICE
Environment=&amp;#39;OVH_APPLICATION_KEY=&amp;lt;Application Key&amp;gt;&amp;#39;
Environment=&amp;#39;OVH_APPLICATION_SECRET=&amp;lt;Application Secret&amp;gt;&amp;#39;
Environment=&amp;#39;OVH_CONSUMER_KEY=&amp;lt;Consumer Key&amp;gt;&amp;#39;
Environment=&amp;#39;OVH_ENDPOINT=ovh-eu&amp;#39;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Normalement, dans les logs, on devrait voir quelque chose comme ça. En tout cas, c'est ce qu'on vise :)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemd[1]: Started Caddy.
caddy[575954]: caddy.HomeDir=/var/lib/caddy
caddy[575954]: caddy.AppDataDir=/var/lib/caddy/.local/share/caddy
caddy[575954]: caddy.AppConfigDir=/var/lib/caddy/.config/caddy
caddy[575954]: caddy.ConfigAutosavePath=/var/lib/caddy/.config/caddy/autosave.json
caddy[575954]: caddy.Version=v2.3.0
caddy[575954]: runtime.GOOS=linux
caddy[575954]: runtime.GOARCH=amd64
caddy[575954]: runtime.Compiler=gc
caddy[575954]: runtime.NumCPU=1
caddy[575954]: runtime.GOMAXPROCS=1
caddy[575954]: runtime.Version=go1.16
caddy[575954]: os.Getwd=/
caddy[575954]: LANG=C.UTF-8
caddy[575954]: PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
caddy[575954]: HOME=/var/lib/caddy
caddy[575954]: LOGNAME=caddy
caddy[575954]: USER=caddy
caddy[575954]: OVH_APPLICATION_KEY=&amp;lt;Application Key&amp;gt;
caddy[575954]: OVH_APPLICATION_SECRET=&amp;lt;Application Secret&amp;gt;
caddy[575954]: OVH_CONSUMER_KEY=&amp;lt;Consumer Key&amp;gt;
caddy[575954]: OVH_ENDPOINT=ovh-eu
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.2837744,&amp;quot;msg&amp;quot;:&amp;quot;using provided configuration&amp;quot;,&amp;quot;config_file&amp;quot;:&amp;quot;/etc/caddy/Caddyfile&amp;quot;,&amp;quot;config_adapter&amp;quot;:&amp;quot;&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.294112,&amp;quot;logger&amp;quot;:&amp;quot;admin&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;admin endpoint started&amp;quot;,&amp;quot;address&amp;quot;:&amp;quot;tcp/localhost:2019&amp;quot;,enforce_origin&amp;quot;:false,&amp;quot;origins&amp;quot;:[&amp;quot;localhost:2019&amp;quot;,&amp;quot;[::1]:2019&amp;quot;,&amp;quot;127.0.0.1:2019&amp;quot;]}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.2947812,&amp;quot;logger&amp;quot;:&amp;quot;http&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;server is listening only on the HTTPS port but has no TLS connection policies; adding one to enable TLS&amp;quot;,&amp;quot;server_name&amp;quot;:&amp;quot;srv0&amp;quot;,&amp;quot;https_port&amp;quot;:443}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.2949548,&amp;quot;logger&amp;quot;:&amp;quot;http&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;enabling automatic HTTP-&amp;gt;HTTPS redirects&amp;quot;,&amp;quot;server_name&amp;quot;:&amp;quot;srv0&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.2992623,&amp;quot;logger&amp;quot;:&amp;quot;http&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;enabling automatic TLS certificate management&amp;quot;,&amp;quot;domains&amp;quot;:[&amp;quot;*.domain.com&amp;quot;]}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.3005319,&amp;quot;msg&amp;quot;:&amp;quot;autosaved config&amp;quot;,&amp;quot;file&amp;quot;:&amp;quot;/var/lib/caddy/.config/caddy/autosave.json&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.3007138,&amp;quot;msg&amp;quot;:&amp;quot;serving initial configuration&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.3020074,&amp;quot;logger&amp;quot;:&amp;quot;tls.obtain&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;acquiring lock&amp;quot;,&amp;quot;identifier&amp;quot;:&amp;quot;*.domain.com&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.3032272,&amp;quot;logger&amp;quot;:&amp;quot;tls.obtain&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;lock acquired&amp;quot;,&amp;quot;identifier&amp;quot;:&amp;quot;*.domain.com&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.3185842,&amp;quot;logger&amp;quot;:&amp;quot;tls.cache.maintenance&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;started background certificate maintenance&amp;quot;,&amp;quot;cache&amp;quot;:&amp;quot;0xc0009a20e0&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295347.3187766,&amp;quot;logger&amp;quot;:&amp;quot;tls&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;cleaned up storage units&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295348.2573807,&amp;quot;logger&amp;quot;:&amp;quot;tls.issuance.acme&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;waiting on internal rate limiter&amp;quot;,&amp;quot;identifiers&amp;quot;:[&amp;quot;*.domain.com&amp;quot;]}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295348.2576807,&amp;quot;logger&amp;quot;:&amp;quot;tls.issuance.acme&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;done waiting on internal rate limiter&amp;quot;,&amp;quot;identifiers&amp;quot;:[&amp;quot;*.domain.com&amp;quot;]}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295348.582178,&amp;quot;logger&amp;quot;:&amp;quot;tls.issuance.acme.acme_client&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;trying to solve challenge&amp;quot;,&amp;quot;identifier&amp;quot;:&amp;quot;*.domain.com&amp;quot;,&amp;quot;challenge_type&amp;quot;:&amp;quot;dns-01&amp;quot;,&amp;quot;ca&amp;quot;:&amp;quot;https://acme-v02.api.letsencrypt.org/directory&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295360.2630491,&amp;quot;logger&amp;quot;:&amp;quot;tls.issuance.acme.acme_client&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;validations succeeded; finalizing order&amp;quot;,&amp;quot;order&amp;quot;:&amp;quot;https://acme-v02.api.letsencrypt.org/acme/order/11111/2222222&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295361.126138,&amp;quot;logger&amp;quot;:&amp;quot;tls.issuance.acme.acme_client&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;successfully downloaded available certificate chains&amp;quot;,&amp;quot;count&amp;quot;:2,&amp;quot;first_url&amp;quot;:&amp;quot;https://acme-v02.api.letsencrypt.org/acme/cert/aaaaaaaabbbbbbb&amp;quot;}
caddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295361.1281288,&amp;quot;logger&amp;quot;:&amp;quot;tls.obtain&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;certificate obtained successfully&amp;quot;,&amp;quot;identifier&amp;quot;:&amp;quot;*.domain.com&amp;quot;}
Mcaddy[575954]: {&amp;quot;level&amp;quot;:&amp;quot;info&amp;quot;,&amp;quot;ts&amp;quot;:1615295361.1286106,&amp;quot;logger&amp;quot;:&amp;quot;tls.obtain&amp;quot;,&amp;quot;msg&amp;quot;:&amp;quot;releasing lock&amp;quot;,&amp;quot;identifier&amp;quot;:&amp;quot;*.domain.com&amp;quot;}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cet article ne fait qu'effleurer les possiblités offerte par Caddy. Comme toujours, je vous invite à vous plonger dans la documentation du logiciel et à parcourir la liste des plugins disponible. Si vous souhaitez voir d'autres fonctionnalités de Caddy détaillées sur ce blog n'hésitez pas à m'en faire part directement.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="caddy"></category><category term="web"></category><category term="acme"></category><category term="ovh"></category></entry><entry><title>Remboursement de licence Windows 8 sur portable ASUS - Episode 2</title><link href="https://blog.devarieux.net/2013/10/remboursement-de-licence-windows-8-sur-portable-asus-episode-2.html" rel="alternate"></link><published>2013-10-19T17:51:00+02:00</published><updated>2013-10-19T17:51:00+02:00</updated><author><name>alain</name></author><id>tag:blog.devarieux.net,2013-10-19:/2013/10/remboursement-de-licence-windows-8-sur-portable-asus-episode-2.html</id><summary type="html">&lt;div class="section" id="la-vertu-de-la-patience"&gt;
&lt;h2&gt;La vertu de la patience&lt;/h2&gt;
&lt;p&gt;Suite et fin de ce &lt;a class="reference external" href="http://blog.devarieux.net/2013/07/remboursement-de-licence-windows-8-sur-portable-asus/"&gt;premier
article&lt;/a&gt;
sur la procédure de remboursement de licence Windows de mon nouveau
portable. Il m'a fallu patienter quelques temps avant de devoir les
relancer pour savoir où en était la procédure.&lt;/p&gt;
&lt;p&gt;J'avais en effet envoyé mon dossier complet par …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="la-vertu-de-la-patience"&gt;
&lt;h2&gt;La vertu de la patience&lt;/h2&gt;
&lt;p&gt;Suite et fin de ce &lt;a class="reference external" href="http://blog.devarieux.net/2013/07/remboursement-de-licence-windows-8-sur-portable-asus/"&gt;premier
article&lt;/a&gt;
sur la procédure de remboursement de licence Windows de mon nouveau
portable. Il m'a fallu patienter quelques temps avant de devoir les
relancer pour savoir où en était la procédure.&lt;/p&gt;
&lt;p&gt;J'avais en effet envoyé mon dossier complet par email le 26 Juillet. Le
28 Août, n'ayant toujours aucune nouvelles, je leur ai envoyé ce mail de
relance :&lt;/p&gt;
&lt;blockquote&gt;
Bonjour,
Je me permets de revenir vers vous concernant cette demande de
remboursement.
Je vous ai envoyé les documents il y a un petit peu plus d'un mois
et je n'ai pas reçu de nouvelle de votre part.
Pouvez-vous me dire quel est le délai généralement constaté dans le
traitement de ces dossiers?
Cordialement,&lt;/blockquote&gt;
&lt;p&gt;Et le jour même, je recevais cette réponse de leur part :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Bonjour monsieur,&lt;/p&gt;
&lt;p&gt;Je vous remercie.&lt;/p&gt;
&lt;p&gt;Je vous joins maintenant en pièce jointe, le formulaire pré rempli
que vous devrez vérifier, dater puis signer et me le retourner en
retour de ce mail s’il vous plaît.&lt;/p&gt;
&lt;p&gt;En vous souhaitant une bonne journée,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Le jour même, je leur renvoyais le document, toujours par email,
rempli et signé.
Le 17 Septembre, mon dossier montait enfin en compta.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Bonjour monsieur,&lt;/p&gt;
&lt;p&gt;Je vous remercie.&lt;/p&gt;
&lt;p&gt;Je remonte votre document au centre de comptabilité.&lt;/p&gt;
&lt;p&gt;En vous souhaitant une bonne journée,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Et le 10 Octobre, j'ai enfin reçu mon virement de 42€.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bilan-de-l-operation"&gt;
&lt;h2&gt;Bilan de l'opération&lt;/h2&gt;
&lt;p&gt;D'après cette petite expérience, le remboursement de licence Windows
chez Asus ce fait plutôt facilement. Pas besoin de renvoyer le PC. Il
faut juste leur écrire assez rapidement (au max 3 semaines après
l'achat) et être assez patient.&lt;/p&gt;
&lt;p&gt;J'ai lancé la procédure le 16 Juillet et reçu le virement le 10 Octobre.
Il a donc fallu environ 3 mois pour aller au bout de l'opération.&lt;/p&gt;
&lt;p&gt;&lt;img alt="asus-ACF-COA" src="/images/asus-ACF-COA-300x92.png" /&gt;&lt;/p&gt;
&lt;p&gt;Je me suis tout de même heurté à un petit problème lors du premier
démarrage de la machine. Je souhaitais démarrer sur l'OS Windows afin
pouvoir refuser le CLU. Il est impossible de refuser le CLU. Vous ne
pouvez que l'accepter. La seul solution a été de rebooter le PC (hard
reboot via le bouton Power).&lt;/p&gt;
&lt;p&gt;Il ne faut surtout pas démarrer sur la partition Windows. Ceci risque
d'activer la licence de l'OS, son remboursement devenant alors
impossible.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="acf_coa"></category><category term="asus"></category><category term="remboursement"></category><category term="windows"></category></entry><entry><title>Remboursement de licence Windows 8 sur portable ASUS - Episode 1</title><link href="https://blog.devarieux.net/2013/07/remboursement-de-licence-windows-8-sur-portable-asus.html" rel="alternate"></link><published>2013-07-25T19:14:00+02:00</published><updated>2013-07-25T19:14:00+02:00</updated><author><name>alain</name></author><id>tag:blog.devarieux.net,2013-07-25:/2013/07/remboursement-de-licence-windows-8-sur-portable-asus.html</id><summary type="html">&lt;p&gt;Il y a 10 jours, j'ai fait l'acquisition d'un nouvel ultra-book. Un Asus
Zenbook UX32VD-R4020H pour être précis. Une belle bête, avec un core i5
&amp;#64; 1.70Ghz, 4go de RAM, technologie Optimus (un chipset Intel HD intégré
au processeur et une carte graphique Nvidia 620M quand la machine a
besoin …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Il y a 10 jours, j'ai fait l'acquisition d'un nouvel ultra-book. Un Asus
Zenbook UX32VD-R4020H pour être précis. Une belle bête, avec un core i5
&amp;#64; 1.70Ghz, 4go de RAM, technologie Optimus (un chipset Intel HD intégré
au processeur et une carte graphique Nvidia 620M quand la machine a
besoin d'un peu plus de puissance graphique), un SSD de 24Go pour
installer l'OS et un disque dur de 500GO pour la data. Le tout avec un
écran 13.3&amp;quot; 1080p.&lt;/p&gt;
&lt;p&gt;Évidemment, la machine est livrée avec un Windows 8 préinstallée. J'ai
donc entrepris de me faire rembourser l'OS OEM par Asus.&lt;/p&gt;
&lt;p&gt;Pour cela, il y a une adresse email de contact qui est
&lt;a class="reference external" href="mailto:acf_coa&amp;#64;asus.com"&gt;acf_coa&amp;#64;asus.com&lt;/a&gt;. Voici le mail que je leur ai envoyé le Mardi 16
Juillet :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Bonjour,&lt;/p&gt;
&lt;p&gt;Je viens de faire l'acquisition d'un Ultrabook Asus Zenbook
UX32VD-R4020H.
Je suis très content de cet achat, cependant, je ne souhaite pas
conserver le système d'exploitation Windows 8 qui ne me convient
pas.&lt;/p&gt;
&lt;p&gt;Je n'ai pas encore démarré la machine. Pourriez-vous me donner la
procédure afin d'obtenir le remboursement de la licence Windows 8.&lt;/p&gt;
&lt;p&gt;Vous trouverez la facture d'achat en PJ de cet email.&lt;/p&gt;
&lt;p&gt;Cordialement,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Le Jeudi 25 Juillet, je recevais une réponse d'Asus avec la procédure à
suivre et les documents à fournir pour me faire rembourser.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Bonjour cher client,&lt;/p&gt;
&lt;p&gt;Vous avez sollicité nos services pour demander le remboursement de
la licence OEM Windows 8 liée à votre produit.&lt;/p&gt;
&lt;p&gt;Dans un premier temps je vais vous demander de me fournir tous les
éléments ci-dessous afin de pouvoir constituer votre dossier et
pré-remplir un formulaire qui vous sera ensuite renvoyé pour
signature.&lt;/p&gt;
&lt;p&gt;Merci donc de me fournir par retour de mail :&lt;/p&gt;
&lt;p&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Nom et prénom du propriétaire de la machine.&lt;/p&gt;
&lt;p&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; N° de téléphone.&lt;/p&gt;
&lt;p&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Adresse e-Mail.&lt;/p&gt;
&lt;p&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Adresse postale complète.&lt;/p&gt;
&lt;p&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; N° de série du produit ASUS (visible sur la carte de
garantie et/ou sous votre machine, sur un autocollant).&lt;/p&gt;
&lt;p&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Copie de la facture d’achat.&lt;/p&gt;
&lt;p&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Une copie de la page 1 de votre « carte de garantie ASUS
» (fournie avec tous produit ASUS).&lt;/p&gt;
&lt;p&gt;o&amp;nbsp;&amp;nbsp; Cette page contient une étiquette avec un code barre et le n° de
série du produit.&lt;/p&gt;
&lt;p&gt;o&amp;nbsp;&amp;nbsp; Cette page est également à remplir par le propriétaire du
produit.&lt;/p&gt;
&lt;p&gt;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Facultatif : une photo de l’étiquette du produit&amp;nbsp; avec le
numéro de série visible (située sous le produit ou sur le chargeur
du produit) Ces éléments me permettront entre autres d’identifier la
clé de licence Windows 8 liée à votre appareil.&lt;/p&gt;
&lt;p&gt;Une fois ces éléments en ma possession je vous ferais donc parvenir
votre « formulaire de demande de remboursement de la licence
Microsoft » préalablement rempli qu’il vous faudra confirmer, dater
et signer à la main puis me renvoyer par mail ou par courrier postal
(adresse de nos locaux sur les documents joints). Ce premier
document contient : conditions générales, détails de procédures,
formulaire et engagements contractuels.&lt;/p&gt;
&lt;p&gt;Nous tenons cependant à vous signaler que ce document a pour but de
couvrir tous les cas de figure et que de fait, il est possible que
certaines étapes de procédure ou certaines mentions ne soient pas
pertinentes sur votre dossier (exple : le point 2.e des conditions
générales ne concerne pas la plupart de nos dossiers puisque le n°
de RMA est rempli par nos services)&lt;/p&gt;
&lt;p&gt;Je joins a ce courrier le second formulaire, « procédure de paiement
», qui doit impérativement être rempli informatiquement et
signé/daté à la main. En effet ces documents administratifs sont
traités en partie automatiquement et ne peuvent l’être si l’écriture
est manuelle, en revanche pour des raisons légales la signature du
client doit être manuelle.&lt;/p&gt;
&lt;p&gt;Ce formulaire permettra de procéder au remboursement par virement
une fois la procédure dûment remplie et validée par les 2 partis.&lt;/p&gt;
&lt;p&gt;Afin de pouvoir vous assurer un traitement fluide et les meilleurs
délais, nous vous invitons à répondre à nos e-mails au plus vite,
merci également de prendre note que nos services n’effectuerons pas
de relance systématique en cas d’absence de réponse et ne pourront
être tenus responsables en cas d’échec de la procédure pour des
raisons de délais ne pouvant nous être incombés.&lt;/p&gt;
&lt;p&gt;Je reste toutefois à votre disposition pour toute autre information
complémentaire.&lt;/p&gt;
&lt;p&gt;En vous souhaitant une bonne journée.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;La procédure de remboursement semble donc relativement simple. En tout
cas, c'est bien partie.&lt;/p&gt;
&lt;p&gt;En plus de ça, le document à remplir, dans lequel il faut mettre son RIB
(code IBAN et BIC) est fourni au format ODT. Un bon point encore pour
Asus.&lt;/p&gt;
&lt;p&gt;Je vous tiendrai au courant de l'avancement de la procédure via ce blog.&lt;/p&gt;
</content><category term="Tech"></category><category term="asus"></category><category term="Linux"></category><category term="remboursement"></category><category term="windows"></category></entry></feed>